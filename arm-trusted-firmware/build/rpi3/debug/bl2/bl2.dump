
build/rpi3/debug/bl2/bl2.elf:     file format elf64-littleaarch64
build/rpi3/debug/bl2/bl2.elf
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000100b4000

Program Header:
    LOAD off    0x0000000000000000 vaddr 0x00000000100b0000 paddr 0x00000000100b0000 align 2**16
         filesz 0x0000000000009410 memsz 0x0000000000012000 flags rwx
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
private flags = 0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00004000  00000000100b4000  00000000100b4000  00004000  2**11
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00001000  00000000100b8000  00000000100b8000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000410  00000000100b9000  00000000100b9000  00009000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 stacks        00004000  00000000100b9440  00000000100b9440  00009410  2**6
                  ALLOC
  4 .bss          00000320  00000000100bd440  00000000100bd440  00009410  2**6
                  ALLOC
  5 xlat_table    00004000  00000000100be000  00000000100be000  00009410  2**12
                  ALLOC
  6 coherent_ram  00000000  00000000100c2000  00000000100c2000  0000a000  2**12
                  CONTENTS
  7 .debug_info   0000d033  0000000000000000  0000000000000000  0000a000  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003407  0000000000000000  0000000000000000  00017033  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000010e0  0000000000000000  0000000000000000  0001a440  2**4
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00005e32  0000000000000000  0000000000000000  0001b520  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000227f  0000000000000000  0000000000000000  00021352  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      0000005e  0000000000000000  0000000000000000  000235d1  2**0
                  CONTENTS, READONLY
 13 .debug_loc    0000cefc  0000000000000000  0000000000000000  0002362f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00001d00  0000000000000000  0000000000000000  00030530  2**4
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000007f0  0000000000000000  0000000000000000  00032230  2**3
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000100b4000 l    d  .text	0000000000000000 .text
00000000100b8000 l    d  .rodata	0000000000000000 .rodata
00000000100b9000 l    d  .data	0000000000000000 .data
00000000100b9440 l    d  stacks	0000000000000000 stacks
00000000100bd440 l    d  .bss	0000000000000000 .bss
00000000100be000 l    d  xlat_table	0000000000000000 xlat_table
00000000100c2000 l    d  coherent_ram	0000000000000000 coherent_ram
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_frame	0000000000000000 .debug_frame
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/bl2_entrypoint.o
0000000000000000 l    df *ABS*	0000000000000000 desc_image_load.c
00000000100bd480 l     O .bss	0000000000000010 bl_load_info
00000000100bd490 l     O .bss	0000000000000010 next_bl_params
0000000000000000 l    df *ABS*	0000000000000000 io_fip.c
00000000100b4358 l     F .text	0000000000000008 device_type_fip
00000000100b4360 l     F .text	000000000000003c fip_file_close
00000000100b439c l     F .text	00000000000000d8 fip_dev_init
00000000100b4474 l     F .text	0000000000000120 fip_file_read
00000000100b4594 l     F .text	000000000000007c fip_dev_open
00000000100b4610 l     F .text	0000000000000040 fip_file_len
00000000100b4650 l     F .text	0000000000000154 fip_file_open
00000000100b47a4 l     F .text	0000000000000070 fip_dev_close
00000000100bd4a0 l     O .bss	0000000000000008 backend_dev_handle
00000000100bd4a8 l     O .bss	0000000000000008 backend_image_spec
00000000100bd4b0 l     O .bss	0000000000000030 current_file
00000000100bd4e0 l     O .bss	0000000000000010 dev_info_pool
00000000100bd730 l     O .bss	0000000000000004 fip_dev_count
00000000100bd4f0 l     O .bss	0000000000000008 state_pool
00000000100b8058 l     O .rodata	0000000000000008 fip_dev_connector
00000000100b8060 l     O .rodata	0000000000000048 fip_dev_funcs
00000000100b822e l     O .rodata	0000000000000010 uuid_null
0000000000000000 l    df *ABS*	0000000000000000 io_memmap.c
00000000100b4860 l     F .text	0000000000000008 device_type_memmap
00000000100b4868 l     F .text	0000000000000008 memmap_dev_close
00000000100b4870 l     F .text	0000000000000030 memmap_dev_open
00000000100b48a0 l     F .text	0000000000000040 memmap_block_len
00000000100b48e0 l     F .text	0000000000000060 memmap_block_seek
00000000100b4940 l     F .text	000000000000003c memmap_block_close
00000000100b497c l     F .text	0000000000000088 memmap_block_write
00000000100b4a04 l     F .text	0000000000000090 memmap_block_read
00000000100b4a94 l     F .text	000000000000006c memmap_block_open
00000000100bd4f8 l     O .bss	0000000000000020 current_file
00000000100b8270 l     O .rodata	0000000000000008 memmap_dev_connector
00000000100b8278 l     O .rodata	0000000000000048 memmap_dev_funcs
00000000100b82c0 l     O .rodata	0000000000000010 memmap_dev_info
0000000000000000 l    df *ABS*	0000000000000000 io_storage.c
00000000100b4b4c l     F .text	0000000000000038 is_valid_dev
00000000100b4b84 l     F .text	000000000000002c is_valid_entity
00000000100b4bb0 l     F .text	0000000000000068 free_entity
00000000100bd734 l     O .bss	0000000000000004 dev_count
00000000100bd738 l     O .bss	0000000000000004 entity_count
00000000100bd518 l     O .bss	0000000000000020 entity_map
00000000100bd538 l     O .bss	0000000000000040 entity_pool
0000000000000000 l    df *ABS*	0000000000000000 rpi3_bl2_setup.c
00000000100bd440 l     O .bss	0000000000000010 bl2_tzram_layout
0000000000000000 l    df *ABS*	0000000000000000 rpi3_image_load.c
0000000000000000 l    df *ABS*	0000000000000000 rpi3_io_storage.c
00000000100b5198 l     F .text	0000000000000060 open_fip
00000000100b51f8 l     F .text	0000000000000060 open_memmap
00000000100bd578 l     O .bss	0000000000000008 fip_dev_con
00000000100bd580 l     O .bss	0000000000000008 fip_dev_handle
00000000100bd588 l     O .bss	0000000000000008 memmap_dev_con
00000000100bd590 l     O .bss	0000000000000008 memmap_dev_handle
00000000100b8336 l     O .rodata	0000000000000010 bl2_uuid_spec
00000000100b8346 l     O .rodata	0000000000000010 bl31_uuid_spec
00000000100b8356 l     O .rodata	0000000000000010 bl32_extra1_uuid_spec
00000000100b8366 l     O .rodata	0000000000000010 bl32_extra2_uuid_spec
00000000100b8376 l     O .rodata	0000000000000010 bl32_uuid_spec
00000000100b8386 l     O .rodata	0000000000000010 bl33_uuid_spec
00000000100b8398 l     O .rodata	0000000000000010 fip_block_spec
00000000100b83c8 l     O .rodata	0000000000000228 policies
0000000000000000 l    df *ABS*	0000000000000000 optee_utils.c
00000000100b5368 l     F .text	00000000000000a4 parse_optee_image
0000000000000000 l    df *ABS*	0000000000000000 bl2_main.c
0000000000000000 l    df *ABS*	0000000000000000 bl2_arch_setup.c
0000000000000000 l    df *ABS*	0000000000000000 bl2_image_load_v2.c
0000000000000000 l    df *ABS*	0000000000000000 bl_common.c
0000000000000000 l    df *ABS*	0000000000000000 tf_log.c
00000000100b93a8 l     O .data	0000000000000004 max_log_level
0000000000000000 l    df *ABS*	0000000000000000 multi_console.c
0000000000000000 l    df *ABS*	0000000000000000 plat_bl_common.c
0000000000000000 l    df *ABS*	0000000000000000 plat_log_common.c
00000000100b8980 l     O .rodata	0000000000000028 plat_prefix_str
0000000000000000 l    df *ABS*	0000000000000000 backtrace.c
00000000100b5c80 l     F .text	0000000000000040 is_address_readable
00000000100b5cc0 l     F .text	0000000000000058 is_valid_object.constprop.0
0000000000000000 l    df *ABS*	0000000000000000 rpi3_common.c
00000000100bd598 l     O .bss	0000000000000030 rpi3_console
00000000100b8ab5 l     O .rodata	0000000000000012 __func__.2422
00000000100b8ac8 l     O .rodata	00000000000000f0 plat_rpi3_mmap
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_arch.c
00000000100b8bf0 l     O .rodata	000000000000001c pa_range_bits_arr
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_context.c
00000000100bd460 l     O .bss	0000000000000020 tf_base_xlat_table
00000000100bd5c8 l     O .bss	0000000000000168 tf_mmap
00000000100b93b0 l     O .data	0000000000000060 tf_xlat_ctx
00000000100be000 l     O xlat_table	0000000000004000 tf_xlat_tables
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_core.c
00000000100b6328 l     F .text	0000000000000040 xlat_clean_dcache_range
00000000100b646c l     F .text	0000000000000294 xlat_tables_map_region
00000000100b8c63 l     O .rodata	0000000000000015 __func__.2504
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_utils.c
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/platform_mp_stack.o
00000000100b9440 l       stacks	0000000000000000 platform_normal_stacks
0000000000000006 l       *ABS*	0000000000000000 TZ_COUNT
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/plat_helpers.o
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/debug.o
00000000100b8d18 l       .rodata	0000000000000000 assert_msg1
00000000100b8d26 l       .rodata	0000000000000000 assert_msg2
00000000100b6c30 l       .text	0000000000000000 _assert_loop
00000000100b6c14 l       .text	0000000000000000 dec_print_loop
00000000100b8d2d l       .rodata	0000000000000000 panic_msg
00000000100b6c98 l       .text	0000000000000000 panic_common
00000000100b6cbc l       .text	0000000000000000 _panic_handler
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/cache_helpers.o
00000000100b6cf8 l       .text	0000000000000000 exit_loop_civac
00000000100b6ce4 l       .text	0000000000000000 loop_civac
00000000100b6d30 l       .text	0000000000000000 exit_loop_cvac
00000000100b6d1c l       .text	0000000000000000 loop_cvac
00000000100b6d68 l       .text	0000000000000000 exit_loop_ivac
00000000100b6d54 l       .text	0000000000000000 loop_ivac
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/misc_helpers.o
00000000100b6d78 l     F .text	0000000000000114 zeromem_dczva
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/platform_helpers.o
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/16550_console.o
00000000100b6f00 l       .text	0000000000000000 init_fail
00000000100b6f58 l       .text	0000000000000000 register_fail
00000000100b6fe8 l       .text	0000000000000000 no_char
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/enable_mmu.o
0000000000000000 l    df *ABS*	0000000000000000 assert.c
0000000000000000 l    df *ABS*	0000000000000000 memcmp.c
0000000000000000 l    df *ABS*	0000000000000000 memcpy.c
0000000000000000 l    df *ABS*	0000000000000000 memmove.c
0000000000000000 l    df *ABS*	0000000000000000 printf.c
00000000100b717c l     F .text	00000000000000c4 unsigned_num_print
0000000000000000 l    df *ABS*	0000000000000000 putchar.c
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl2/early_exceptions.o
00000000100b7800 l     F .text	0000000000000000 SynchronousExceptionSP0
00000000100b7880 l     F .text	0000000000000000 IrqSP0
00000000100b7900 l     F .text	0000000000000000 FiqSP0
00000000100b7980 l     F .text	0000000000000000 SErrorSP0
00000000100b7a00 l     F .text	0000000000000000 SynchronousExceptionSPx
00000000100b7a80 l     F .text	0000000000000000 IrqSPx
00000000100b7b00 l     F .text	0000000000000000 FiqSPx
00000000100b7b80 l     F .text	0000000000000000 SErrorSPx
00000000100b7c00 l     F .text	0000000000000000 SynchronousExceptionA64
00000000100b7c80 l     F .text	0000000000000000 IrqA64
00000000100b7d00 l     F .text	0000000000000000 FiqA64
00000000100b7d80 l     F .text	0000000000000000 SErrorA64
00000000100b7e00 l     F .text	0000000000000000 SynchronousExceptionA32
00000000100b7e80 l     F .text	0000000000000000 IrqA32
00000000100b7f00 l     F .text	0000000000000000 FiqA32
00000000100b7f80 l     F .text	0000000000000000 SErrorA32
0000000000000000 l    df *ABS*	0000000000000000 
0000000000000000 l    df *ABS*	0000000000000000 rpi3_bl2_mem_params_desc.c
00000000100b9000 l     O .data	0000000000000398 bl2_mem_params_descs
00000000100b76a4 g     F .text	000000000000002c putchar
00000000100b5b20 g     F .text	0000000000000034 console_set_scope
00000000100b5aac g     F .text	0000000000000074 console_register
00000000100c2000 g       coherent_ram	0000000000000000 __COHERENT_RAM_END__
00000000100b7038 g     F .text	000000000000001c console_16550_flush
00000000100b6d70 g     F .text	0000000000000008 zeromem
00000000100b801e g     O .rodata	000000000000001c version_string
00000000100b6978 g     F .text	000000000000003c mmap_add_ctx
00000000100b7650 g     F .text	0000000000000054 printf
00000000100bd748 g     O .bss	0000000000000018 mmu_cfg_params
00000000100b6b5c g     F .text	0000000000000004 xlat_tables_print
00000000100b9000 g       .rodata	0000000000000000 __RW_START__
00000000100b6f5c g     F .text	000000000000004c console_16550_core_putc
00000000100b62e0 g     F .text	0000000000000048 enable_mmu_el1
00000000100b6d6c g     F .text	0000000000000004 smc
00000000100b7054 g     F .text	0000000000000070 enable_mmu_direct_el1
00000000100b5070 g     F .text	0000000000000058 bl2_plat_arch_setup
00000000100b6fa8 g     F .text	000000000000001c console_16550_putc
00000000100b6bd8 g     F .text	0000000000000060 asm_assert
00000000100b6c80 g     F .text	0000000000000044 do_panic
00000000100b7148 g     F .text	0000000000000034 memmove
00000000100b6154 g     F .text	00000000000000e0 setup_mmu_cfg
00000000100b5c50  w    F .text	0000000000000030 plat_log_get_prefix
00000000100b6e8c  w    F .text	0000000000000004 plat_report_exception
00000000100b8000 g     O .rodata	000000000000001e build_message
00000000100b6278 g     F .text	0000000000000068 init_xlat_tables
00000000100b9000 g       .data	0000000000000000 __DATA_START__
00000000100b4144 g     F .text	0000000000000048 get_bl_mem_params_node
00000000100b6068 g     F .text	0000000000000038 xlat_arch_regime_get_xn_desc
00000000100b506c g     F .text	0000000000000004 bl2_platform_setup
00000000100b7128 g     F .text	0000000000000020 memcpy
00000000100b409c g     F .text	0000000000000038 flush_bl_params_desc
00000000100b6d78 g     F .text	0000000000000114 zero_normalmem
00000000100b6268 g     F .text	0000000000000010 mmap_add
00000000100b6e90  w    F .text	0000000000000008 plat_panic_handler
00000000100b518c g     F .text	0000000000000004 plat_flush_next_bl_params
00000000100bd440 g       stacks	0000000000000000 __STACKS_END__
00000000100b5e64 g     F .text	0000000000000060 rpi3_console_init
00000000100b6cfc g     F .text	0000000000000038 clean_dcache_range
00000000100b93a0 g     O .data	0000000000000008 bl_mem_params_desc_ptr
00000000100b4ef0 g     F .text	0000000000000064 io_size
00000000100b4c5c g     F .text	0000000000000044 io_dev_open
00000000100b6b7c  w    F .text	0000000000000010 plat_set_my_stack
00000000100b40d4 g     F .text	0000000000000070 get_bl_params_node_index
00000000100b6c50 g     F .text	0000000000000030 asm_print_hex
0000000000000320 g       *ABS*	0000000000000000 __BSS_SIZE__
00000000100b6c38 g     F .text	0000000000000018 asm_print_str
00000000100b7800 g       .text	0000000000000000 early_exceptions
00000000100b700c g     F .text	000000000000002c console_16550_core_flush
00000000100b6bcc g     F .text	000000000000000c plat_crash_console_flush
00000000100b5c34  w    F .text	0000000000000008 plat_error_handler
00000000100b50c8 g     F .text	00000000000000c4 bl2_plat_handle_post_image_load
00000000100b5b54 g     F .text	0000000000000074 console_putc
00000000100b6ba4 g     F .text	000000000000001c plat_crash_console_init
00000000100b6cc4 g     F .text	0000000000000038 flush_dcache_range
00000000100b4208 g     F .text	0000000000000150 get_next_bl_params_from_mem_params_desc
00000000100b6fc4 g     F .text	000000000000002c console_16550_core_getc
00000000100b5d18 g     F .text	000000000000014c backtrace
00000000100b7240 g     F .text	0000000000000410 vprintf
00000000100b6034 g     F .text	0000000000000034 is_dcache_enabled
00000000100b5190 g     F .text	0000000000000004 plat_get_bl_image_load_info
00000000100b57f4 g     F .text	00000000000001a8 load_auth_image
00000000100b5ec4 g     F .text	0000000000000098 rpi3_setup_page_tables
00000000100b9000 g       .rodata	0000000000000000 __RODATA_END__
00000000100c2000 g       xlat_table	0000000000000000 __BL2_END__
00000000100b60a0 g     F .text	0000000000000028 xlat_arch_current_el
00000000100b55b4 g     F .text	000000000000006c bl2_main
00000000100b8000 g       .rodata	0000000000000000 __RODATA_START__
00000000100b9410 g       .data	0000000000000000 __DATA_END__
00000000100b5f84 g     F .text	000000000000006c tcr_physical_addr_size_bits
00000000100b6d34 g     F .text	0000000000000038 inv_dcache_range
00000000100b93ac g     O .data	0000000000000001 console_state
00000000100b4000 g     F .text	000000000000009c bl2_entrypoint
00000000100b70f4 g     F .text	0000000000000034 memcmp
00000000100b6368 g     F .text	0000000000000104 xlat_desc
00000000100b6b94 g     F .text	0000000000000010 plat_rpi3_calc_core_pos
00000000100bd760 g       .bss	0000000000000000 __BSS_END__
00000000100b4e70 g     F .text	0000000000000080 io_seek
00000000100b4fd0 g     F .text	0000000000000064 io_close
00000000100c2000 g       coherent_ram	0000000000000000 __COHERENT_RAM_START__
00000000100b6f08 g     F .text	0000000000000054 console_16550_register
00000000100b8dd8 g       .rodata	0000000000000000 __PARSER_LIB_DESCS_END__
0000000000000000 g       *ABS*	0000000000000000 __COHERENT_RAM_UNALIGNED_SIZE__
00000000100b9398 g     O .data	0000000000000004 bl_mem_params_desc_num
00000000100b5c3c  w    F .text	0000000000000004 bl2_plat_preload_setup
00000000100b5ff0 g     F .text	0000000000000044 xlat_arch_get_max_supported_pa
00000000100b562c g     F .text	00000000000001c8 bl2_load_images
00000000100b5620 g     F .text	000000000000000c bl2_arch_setup
00000000100b5f5c g     F .text	0000000000000008 rpi3_get_spsr_for_bl32_entry
00000000100b8000 g       .text	0000000000000000 __TEXT_END__
00000000100b5034 g     F .text	0000000000000038 bl2_early_platform_setup2
00000000100b5bc8 g     F .text	000000000000006c console_flush
00000000100b4ca0 g     F .text	0000000000000068 io_dev_init
00000000100b4f54 g     F .text	000000000000007c io_read
00000000100bd440 g       .bss	0000000000000000 __BSS_START__
00000000100b5f64 g     F .text	0000000000000020 rpi3_get_spsr_for_bl33_entry
00000000100b6700 g     F .text	0000000000000278 mmap_add_region_ctx
00000000100b5c48  w    F .text	0000000000000008 plat_try_next_boot_source
00000000100b6bc0 g     F .text	000000000000000c plat_crash_console_putc
00000000100b4d68 g     F .text	0000000000000108 io_open
00000000100b5a64 g     F .text	0000000000000048 console_is_registered
00000000100b60c8 g     F .text	000000000000008c is_mmu_enabled_ctx
00000000100b52e8 g     F .text	0000000000000080 plat_get_image_source
00000000100b599c g     F .text	00000000000000c8 tf_log
00000000100b4c18 g     F .text	0000000000000044 io_register_device
00000000100b540c g     F .text	00000000000001a8 parse_optee_header
00000000100c2000 g       xlat_table	0000000000000000 __RW_END__
00000000100c2000 g       coherent_ram	0000000000000000 __COHERENT_RAM_END_UNALIGNED__
00000000100b6ff0 g     F .text	000000000000001c console_16550_getc
00000000100b418c g     F .text	000000000000007c get_bl_load_info_from_mem_params_desc
00000000100b9440 g       stacks	0000000000000000 __STACKS_START__
00000000100b5258 g     F .text	0000000000000090 plat_rpi3_io_setup
00000000100b69b4 g     F .text	00000000000001a4 init_xlat_tables_ctx
00000000100b6b8c g     F .text	0000000000000008 plat_my_core_pos
00000000100b5c40  w    F .text	0000000000000008 bl2_plat_handle_pre_image_load
00000000100b4b00 g     F .text	000000000000004c register_io_dev_memmap
00000000100b4d08 g     F .text	0000000000000060 io_dev_close
00000000100b70c4 g     F .text	0000000000000030 __assert
00000000100b6c98  w      .text	0000000000000000 el3_panic
00000000100b6b58 g     F .text	0000000000000004 xlat_mmap_print
00000000100b4814 g     F .text	000000000000004c register_io_dev_fip
00000000100b6e98 g     F .text	0000000000000070 console_16550_core_init
00000000100bd740 g     O .bss	0000000000000008 console_list
00000000100b5194 g     F .text	0000000000000004 plat_get_next_bl_params
00000000100b6b60  w    F .text	000000000000001c plat_get_my_stack
00000000100b6234 g     F .text	0000000000000034 mmap_add_region
00000000100b4000 g       .text	0000000000000000 __TEXT_START__
00000000100b8dd8 g       .rodata	0000000000000000 __PARSER_LIB_DESCS_START__



Disassembly of section .text:

00000000100b4000 <bl2_entrypoint>:
    100b4000:	aa0003f4 	mov	x20, x0
    100b4004:	aa0103f5 	mov	x21, x1
    100b4008:	aa0203f6 	mov	x22, x2
    100b400c:	aa0303f7 	mov	x23, x3
    100b4010:	1001bf80 	adr	x0, 100b7800 <SynchronousExceptionSP0>
    100b4014:	d518c000 	msr	vbar_el1, x0
    100b4018:	d5033fdf 	isb
    100b401c:	d50344ff 	msr	daifclr, #0x4
    100b4020:	d2820141 	mov	x1, #0x100a                	// #4106
    100b4024:	d5381000 	mrs	x0, sctlr_el1
    100b4028:	aa010000 	orr	x0, x0, x1
    100b402c:	d5181000 	msr	sctlr_el1, x0
    100b4030:	d5033fdf 	isb
    100b4034:	10027e60 	adr	x0, 100b9000 <__RODATA_END__>
    100b4038:	1006fe41 	adr	x1, 100c2000 <__BL2_END__>
    100b403c:	cb000021 	sub	x1, x1, x0
    100b4040:	94000b3d 	bl	100b6d34 <inv_dcache_range>
    100b4044:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b4048:	91110000 	add	x0, x0, #0x440
    100b404c:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b4050:	911d8021 	add	x1, x1, #0x760
    100b4054:	cb000021 	sub	x1, x1, x0
    100b4058:	94000b46 	bl	100b6d70 <zeromem>
    100b405c:	d0000060 	adrp	x0, 100c2000 <__BL2_END__>
    100b4060:	91000000 	add	x0, x0, #0x0
    100b4064:	d0000061 	adrp	x1, 100c2000 <__BL2_END__>
    100b4068:	91000021 	add	x1, x1, #0x0
    100b406c:	cb000021 	sub	x1, x1, x0
    100b4070:	94000b40 	bl	100b6d70 <zeromem>
    100b4074:	94000ac2 	bl	100b6b7c <plat_set_my_stack>
    100b4078:	aa1403e0 	mov	x0, x20
    100b407c:	aa1503e1 	mov	x1, x21
    100b4080:	aa1603e2 	mov	x2, x22
    100b4084:	aa1703e3 	mov	x3, x23
    100b4088:	940003eb 	bl	100b5034 <bl2_early_platform_setup2>
    100b408c:	940003f9 	bl	100b5070 <bl2_plat_arch_setup>
    100b4090:	94000549 	bl	100b55b4 <bl2_main>
    100b4094:	94000b7f 	bl	100b6e90 <plat_panic_handler>
    100b4098:	d503201f 	nop

00000000100b409c <flush_bl_params_desc>:
    100b409c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b40a0:	910003fd 	mov	x29, sp
    100b40a4:	b0000020 	adrp	x0, 100b9000 <__RODATA_END__>
    100b40a8:	b9439801 	ldr	w1, [x0, #920]
    100b40ac:	52801700 	mov	w0, #0xb8                  	// #184
    100b40b0:	9ba07c21 	umull	x1, w1, w0
    100b40b4:	b0000020 	adrp	x0, 100b9000 <__RODATA_END__>
    100b40b8:	f941d000 	ldr	x0, [x0, #928]
    100b40bc:	94000b02 	bl	100b6cc4 <flush_dcache_range>
    100b40c0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b40c4:	d2800201 	mov	x1, #0x10                  	// #16
    100b40c8:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b40cc:	91124000 	add	x0, x0, #0x490
    100b40d0:	14000afd 	b	100b6cc4 <flush_dcache_range>

00000000100b40d4 <get_bl_params_node_index>:
    100b40d4:	3100041f 	cmn	w0, #0x1
    100b40d8:	54000180 	b.eq	100b4108 <get_bl_params_node_index+0x34>  // b.none
    100b40dc:	b0000021 	adrp	x1, 100b9000 <__RODATA_END__>
    100b40e0:	b9439824 	ldr	w4, [x1, #920]
    100b40e4:	b0000021 	adrp	x1, 100b9000 <__RODATA_END__>
    100b40e8:	f941d022 	ldr	x2, [x1, #928]
    100b40ec:	d2801705 	mov	x5, #0xb8                  	// #184
    100b40f0:	d2800001 	mov	x1, #0x0                   	// #0
    100b40f4:	d102e042 	sub	x2, x2, #0xb8
    100b40f8:	6b01009f 	cmp	w4, w1
    100b40fc:	54000128 	b.hi	100b4120 <get_bl_params_node_index+0x4c>  // b.pmore
    100b4100:	12800000 	mov	w0, #0xffffffff            	// #-1
    100b4104:	d65f03c0 	ret
    100b4108:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b410c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4110:	9100e800 	add	x0, x0, #0x3a
    100b4114:	910003fd 	mov	x29, sp
    100b4118:	528004c1 	mov	w1, #0x26                  	// #38
    100b411c:	94000bea 	bl	100b70c4 <__assert>
    100b4120:	91000423 	add	x3, x1, #0x1
    100b4124:	9b057c66 	mul	x6, x3, x5
    100b4128:	b8666846 	ldr	w6, [x2, x6]
    100b412c:	6b0000df 	cmp	w6, w0
    100b4130:	54000061 	b.ne	100b413c <get_bl_params_node_index+0x68>  // b.any
    100b4134:	2a0103e0 	mov	w0, w1
    100b4138:	d65f03c0 	ret
    100b413c:	aa0303e1 	mov	x1, x3
    100b4140:	17ffffee 	b	100b40f8 <get_bl_params_node_index+0x24>

00000000100b4144 <get_bl_mem_params_node>:
    100b4144:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4148:	3100041f 	cmn	w0, #0x1
    100b414c:	910003fd 	mov	x29, sp
    100b4150:	540000a1 	b.ne	100b4164 <get_bl_mem_params_node+0x20>  // b.any
    100b4154:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4158:	9100e800 	add	x0, x0, #0x3a
    100b415c:	52800701 	mov	w1, #0x38                  	// #56
    100b4160:	94000bd9 	bl	100b70c4 <__assert>
    100b4164:	97ffffdc 	bl	100b40d4 <get_bl_params_node_index>
    100b4168:	37f800e0 	tbnz	w0, #31, 100b4184 <get_bl_mem_params_node+0x40>
    100b416c:	b0000021 	adrp	x1, 100b9000 <__RODATA_END__>
    100b4170:	f941d021 	ldr	x1, [x1, #928]
    100b4174:	52801702 	mov	w2, #0xb8                  	// #184
    100b4178:	9b220400 	smaddl	x0, w0, w2, x1
    100b417c:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4180:	d65f03c0 	ret
    100b4184:	d2800000 	mov	x0, #0x0                   	// #0
    100b4188:	17fffffd 	b	100b417c <get_bl_mem_params_node+0x38>

00000000100b418c <get_bl_load_info_from_mem_params_desc>:
    100b418c:	b0000020 	adrp	x0, 100b9000 <__RODATA_END__>
    100b4190:	b9439805 	ldr	w5, [x0, #920]
    100b4194:	34000365 	cbz	w5, 100b4200 <get_bl_load_info_from_mem_params_desc+0x74>
    100b4198:	b0000020 	adrp	x0, 100b9000 <__RODATA_END__>
    100b419c:	f941d006 	ldr	x6, [x0, #928]
    100b41a0:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b41a4:	91120020 	add	x0, x1, #0x480
    100b41a8:	d2804083 	mov	x3, #0x204                 	// #516
    100b41ac:	f2a00203 	movk	x3, #0x10, lsl #16
    100b41b0:	f9024023 	str	x3, [x1, #1152]
    100b41b4:	910020c3 	add	x3, x6, #0x8
    100b41b8:	910200c2 	add	x2, x6, #0x80
    100b41bc:	52800001 	mov	w1, #0x0                   	// #0
    100b41c0:	52801707 	mov	w7, #0xb8                  	// #184
    100b41c4:	f9000402 	str	x2, [x0, #8]
    100b41c8:	b85f8064 	ldur	w4, [x3, #-8]
    100b41cc:	11000421 	add	w1, w1, #0x1
    100b41d0:	b9000044 	str	w4, [x2]
    100b41d4:	6b0100bf 	cmp	w5, w1
    100b41d8:	f9000443 	str	x3, [x2, #8]
    100b41dc:	540000a9 	b.ls	100b41f0 <get_bl_load_info_from_mem_params_desc+0x64>  // b.plast
    100b41e0:	9ba71824 	umaddl	x4, w1, w7, x6
    100b41e4:	91020084 	add	x4, x4, #0x80
    100b41e8:	f9000844 	str	x4, [x2, #16]
    100b41ec:	aa0403e2 	mov	x2, x4
    100b41f0:	9102e063 	add	x3, x3, #0xb8
    100b41f4:	6b0100bf 	cmp	w5, w1
    100b41f8:	54fffe81 	b.ne	100b41c8 <get_bl_load_info_from_mem_params_desc+0x3c>  // b.any
    100b41fc:	d65f03c0 	ret
    100b4200:	d2800000 	mov	x0, #0x0                   	// #0
    100b4204:	17fffffe 	b	100b41fc <get_bl_load_info_from_mem_params_desc+0x70>

00000000100b4208 <get_next_bl_params_from_mem_params_desc>:
    100b4208:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b420c:	910003fd 	mov	x29, sp
    100b4210:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4214:	b0000020 	adrp	x0, 100b9000 <__RODATA_END__>
    100b4218:	b9439814 	ldr	w20, [x0, #920]
    100b421c:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b4220:	a90363f7 	stp	x23, x24, [sp, #48]
    100b4224:	340008b4 	cbz	w20, 100b4338 <get_next_bl_params_from_mem_params_desc+0x130>
    100b4228:	b0000020 	adrp	x0, 100b9000 <__RODATA_END__>
    100b422c:	f941d017 	ldr	x23, [x0, #928]
    100b4230:	d2801704 	mov	x4, #0xb8                  	// #184
    100b4234:	d2800000 	mov	x0, #0x0                   	// #0
    100b4238:	2a0003e1 	mov	w1, w0
    100b423c:	6b00029f 	cmp	w20, w0
    100b4240:	54000128 	b.hi	100b4264 <get_next_bl_params_from_mem_params_desc+0x5c>  // b.pmore
    100b4244:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b4248:	f9424c00 	ldr	x0, [x0, #1176]
    100b424c:	52800001 	mov	w1, #0x0                   	// #0
    100b4250:	b50001e0 	cbnz	x0, 100b428c <get_next_bl_params_from_mem_params_desc+0x84>
    100b4254:	52801161 	mov	w1, #0x8b                  	// #139
    100b4258:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b425c:	9100e800 	add	x0, x0, #0x3a
    100b4260:	94000b99 	bl	100b70c4 <__assert>
    100b4264:	d503201f 	nop
    100b4268:	9b045c02 	madd	x2, x0, x4, x23
    100b426c:	91000400 	add	x0, x0, #0x1
    100b4270:	b9402443 	ldr	w3, [x2, #36]
    100b4274:	121d0463 	and	w3, w3, #0x18
    100b4278:	7100607f 	cmp	w3, #0x18
    100b427c:	54fffde1 	b.ne	100b4238 <get_next_bl_params_from_mem_params_desc+0x30>  // b.any
    100b4280:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b4284:	91026042 	add	x2, x2, #0x98
    100b4288:	f9024c02 	str	x2, [x0, #1176]
    100b428c:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b4290:	d28040a2 	mov	x2, #0x205                 	// #517
    100b4294:	f2a00202 	movk	x2, #0x10, lsl #16
    100b4298:	aa0003f3 	mov	x19, x0
    100b429c:	f9024802 	str	x2, [x0, #1168]
    100b42a0:	52800016 	mov	w22, #0x0                   	// #0
    100b42a4:	d2800002 	mov	x2, #0x0                   	// #0
    100b42a8:	52801718 	mov	w24, #0xb8                  	// #184
    100b42ac:	9bb87c21 	umull	x1, w1, w24
    100b42b0:	8b0102e0 	add	x0, x23, x1
    100b42b4:	b9402403 	ldr	w3, [x0, #36]
    100b42b8:	37180063 	tbnz	w3, #3, 100b42c4 <get_next_bl_params_from_mem_params_desc+0xbc>
    100b42bc:	52801321 	mov	w1, #0x99                  	// #153
    100b42c0:	17ffffe6 	b	100b4258 <get_next_bl_params_from_mem_params_desc+0x50>
    100b42c4:	91026015 	add	x21, x0, #0x98
    100b42c8:	b8616ae1 	ldr	w1, [x23, x1]
    100b42cc:	b9009801 	str	w1, [x0, #152]
    100b42d0:	91002001 	add	x1, x0, #0x8
    100b42d4:	f90006a1 	str	x1, [x21, #8]
    100b42d8:	91008001 	add	x1, x0, #0x20
    100b42dc:	f9000aa1 	str	x1, [x21, #16]
    100b42e0:	b40000c2 	cbz	x2, 100b42f8 <get_next_bl_params_from_mem_params_desc+0xf0>
    100b42e4:	f9400c41 	ldr	x1, [x2, #24]
    100b42e8:	b4000061 	cbz	x1, 100b42f4 <get_next_bl_params_from_mem_params_desc+0xec>
    100b42ec:	528014a1 	mov	w1, #0xa5                  	// #165
    100b42f0:	17ffffda 	b	100b4258 <get_next_bl_params_from_mem_params_desc+0x50>
    100b42f4:	f9000c55 	str	x21, [x2, #24]
    100b42f8:	b9407800 	ldr	w0, [x0, #120]
    100b42fc:	3100041f 	cmn	w0, #0x1
    100b4300:	54000280 	b.eq	100b4350 <get_next_bl_params_from_mem_params_desc+0x148>  // b.none
    100b4304:	97ffff74 	bl	100b40d4 <get_bl_params_node_index>
    100b4308:	2a0003e1 	mov	w1, w0
    100b430c:	34000060 	cbz	w0, 100b4318 <get_next_bl_params_from_mem_params_desc+0x110>
    100b4310:	6b00029f 	cmp	w20, w0
    100b4314:	54000068 	b.hi	100b4320 <get_next_bl_params_from_mem_params_desc+0x118>  // b.pmore
    100b4318:	528016c1 	mov	w1, #0xb6                  	// #182
    100b431c:	17ffffcf 	b	100b4258 <get_next_bl_params_from_mem_params_desc+0x50>
    100b4320:	110006d6 	add	w22, w22, #0x1
    100b4324:	aa1503e2 	mov	x2, x21
    100b4328:	6b16029f 	cmp	w20, w22
    100b432c:	54fffc01 	b.ne	100b42ac <get_next_bl_params_from_mem_params_desc+0xa4>  // b.any
    100b4330:	52801741 	mov	w1, #0xba                  	// #186
    100b4334:	17ffffc9 	b	100b4258 <get_next_bl_params_from_mem_params_desc+0x50>
    100b4338:	d2800000 	mov	x0, #0x0                   	// #0
    100b433c:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4340:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b4344:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b4348:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b434c:	d65f03c0 	ret
    100b4350:	91124260 	add	x0, x19, #0x490
    100b4354:	17fffffa 	b	100b433c <get_next_bl_params_from_mem_params_desc+0x134>

00000000100b4358 <device_type_fip>:
    100b4358:	52800080 	mov	w0, #0x4                   	// #4
    100b435c:	d65f03c0 	ret

00000000100b4360 <fip_file_close>:
    100b4360:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b4364:	910003fd 	mov	x29, sp
    100b4368:	f9000bf3 	str	x19, [sp, #16]
    100b436c:	aa0003f3 	mov	x19, x0
    100b4370:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b4374:	9112c000 	add	x0, x0, #0x4b0
    100b4378:	f9400c01 	ldr	x1, [x0, #24]
    100b437c:	b4000061 	cbz	x1, 100b4388 <fip_file_close+0x28>
    100b4380:	d2800601 	mov	x1, #0x30                  	// #48
    100b4384:	94000a7b 	bl	100b6d70 <zeromem>
    100b4388:	f900067f 	str	xzr, [x19, #8]
    100b438c:	52800000 	mov	w0, #0x0                   	// #0
    100b4390:	f9400bf3 	ldr	x19, [sp, #16]
    100b4394:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4398:	d65f03c0 	ret

00000000100b439c <fip_dev_init>:
    100b439c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    100b43a0:	910003fd 	mov	x29, sp
    100b43a4:	a90153f3 	stp	x19, x20, [sp, #16]
    100b43a8:	aa0103f3 	mov	x19, x1
    100b43ac:	2a1303e0 	mov	w0, w19
    100b43b0:	b0000054 	adrp	x20, 100bd000 <__STACKS_START__+0x3bc0>
    100b43b4:	91128281 	add	x1, x20, #0x4a0
    100b43b8:	f90013f5 	str	x21, [sp, #32]
    100b43bc:	b0000055 	adrp	x21, 100bd000 <__STACKS_START__+0x3bc0>
    100b43c0:	9112a2a2 	add	x2, x21, #0x4a8
    100b43c4:	940003c9 	bl	100b52e8 <plat_get_image_source>
    100b43c8:	34000180 	cbz	w0, 100b43f8 <fip_dev_init+0x5c>
    100b43cc:	2a0003e2 	mov	w2, w0
    100b43d0:	2a1303e1 	mov	w1, w19
    100b43d4:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b43d8:	9102a000 	add	x0, x0, #0xa8
    100b43dc:	12800033 	mov	w19, #0xfffffffe            	// #-2
    100b43e0:	9400056f 	bl	100b599c <tf_log>
    100b43e4:	2a1303e0 	mov	w0, w19
    100b43e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b43ec:	f94013f5 	ldr	x21, [sp, #32]
    100b43f0:	a8c57bfd 	ldp	x29, x30, [sp], #80
    100b43f4:	d65f03c0 	ret
    100b43f8:	f94256a1 	ldr	x1, [x21, #1192]
    100b43fc:	9100c3e2 	add	x2, sp, #0x30
    100b4400:	f9425280 	ldr	x0, [x20, #1184]
    100b4404:	94000259 	bl	100b4d68 <io_open>
    100b4408:	340000c0 	cbz	w0, 100b4420 <fip_dev_init+0x84>
    100b440c:	2a0003e2 	mov	w2, w0
    100b4410:	2a1303e1 	mov	w1, w19
    100b4414:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4418:	91036400 	add	x0, x0, #0xd9
    100b441c:	17fffff0 	b	100b43dc <fip_dev_init+0x40>
    100b4420:	f9401be0 	ldr	x0, [sp, #48]
    100b4424:	9100e3e3 	add	x3, sp, #0x38
    100b4428:	d2800202 	mov	x2, #0x10                  	// #16
    100b442c:	910103e1 	add	x1, sp, #0x40
    100b4430:	940002c9 	bl	100b4f54 <io_read>
    100b4434:	2a0003f3 	mov	w19, w0
    100b4438:	35000180 	cbnz	w0, 100b4468 <fip_dev_init+0xcc>
    100b443c:	b94043e1 	ldr	w1, [sp, #64]
    100b4440:	52800020 	mov	w0, #0x1                   	// #1
    100b4444:	72b54c80 	movk	w0, #0xaa64, lsl #16
    100b4448:	6b00003f 	cmp	w1, w0
    100b444c:	54000061 	b.ne	100b4458 <fip_dev_init+0xbc>  // b.any
    100b4450:	b94047e0 	ldr	w0, [sp, #68]
    100b4454:	350000a0 	cbnz	w0, 100b4468 <fip_dev_init+0xcc>
    100b4458:	12800033 	mov	w19, #0xfffffffe            	// #-2
    100b445c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4460:	9103f400 	add	x0, x0, #0xfd
    100b4464:	9400054e 	bl	100b599c <tf_log>
    100b4468:	f9401be0 	ldr	x0, [sp, #48]
    100b446c:	940002d9 	bl	100b4fd0 <io_close>
    100b4470:	17ffffdd 	b	100b43e4 <fip_dev_init+0x48>

00000000100b4474 <fip_file_read>:
    100b4474:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    100b4478:	910003fd 	mov	x29, sp
    100b447c:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4480:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b4484:	f9001bf7 	str	x23, [sp, #48]
    100b4488:	b50000a0 	cbnz	x0, 100b449c <fip_file_read+0x28>
    100b448c:	52802f01 	mov	w1, #0x178                 	// #376
    100b4490:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4494:	91070800 	add	x0, x0, #0x1c2
    100b4498:	94000b0b 	bl	100b70c4 <__assert>
    100b449c:	aa0303f5 	mov	x21, x3
    100b44a0:	b5000063 	cbnz	x3, 100b44ac <fip_file_read+0x38>
    100b44a4:	52802f21 	mov	w1, #0x179                 	// #377
    100b44a8:	17fffffa 	b	100b4490 <fip_file_read+0x1c>
    100b44ac:	aa0003f3 	mov	x19, x0
    100b44b0:	f9400400 	ldr	x0, [x0, #8]
    100b44b4:	b5000060 	cbnz	x0, 100b44c0 <fip_file_read+0x4c>
    100b44b8:	52802f41 	mov	w1, #0x17a                 	// #378
    100b44bc:	17fffff5 	b	100b4490 <fip_file_read+0x1c>
    100b44c0:	aa0103f6 	mov	x22, x1
    100b44c4:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b44c8:	f9425401 	ldr	x1, [x0, #1192]
    100b44cc:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b44d0:	f9425000 	ldr	x0, [x0, #1184]
    100b44d4:	aa0203f7 	mov	x23, x2
    100b44d8:	910123e2 	add	x2, sp, #0x48
    100b44dc:	94000223 	bl	100b4d68 <io_open>
    100b44e0:	34000180 	cbz	w0, 100b4510 <fip_file_read+0x9c>
    100b44e4:	12800033 	mov	w19, #0xfffffffe            	// #-2
    100b44e8:	2a0003e1 	mov	w1, w0
    100b44ec:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b44f0:	91075800 	add	x0, x0, #0x1d6
    100b44f4:	9400052a 	bl	100b599c <tf_log>
    100b44f8:	2a1303e0 	mov	w0, w19
    100b44fc:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4500:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b4504:	f9401bf7 	ldr	x23, [sp, #48]
    100b4508:	a8c57bfd 	ldp	x29, x30, [sp], #80
    100b450c:	d65f03c0 	ret
    100b4510:	f9400674 	ldr	x20, [x19, #8]
    100b4514:	52800021 	mov	w1, #0x1                   	// #1
    100b4518:	f9400e80 	ldr	x0, [x20, #24]
    100b451c:	b9400282 	ldr	w2, [x20]
    100b4520:	8b000042 	add	x2, x2, x0
    100b4524:	f94027e0 	ldr	x0, [sp, #72]
    100b4528:	94000252 	bl	100b4e70 <io_seek>
    100b452c:	34000100 	cbz	w0, 100b454c <fip_file_read+0xd8>
    100b4530:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4534:	9107c000 	add	x0, x0, #0x1f0
    100b4538:	94000519 	bl	100b599c <tf_log>
    100b453c:	12800033 	mov	w19, #0xfffffffe            	// #-2
    100b4540:	f94027e0 	ldr	x0, [sp, #72]
    100b4544:	940002a3 	bl	100b4fd0 <io_close>
    100b4548:	17ffffec 	b	100b44f8 <fip_file_read+0x84>
    100b454c:	f94027e0 	ldr	x0, [sp, #72]
    100b4550:	910103e3 	add	x3, sp, #0x40
    100b4554:	aa1703e2 	mov	x2, x23
    100b4558:	aa1603e1 	mov	x1, x22
    100b455c:	9400027e 	bl	100b4f54 <io_read>
    100b4560:	2a0003f3 	mov	w19, w0
    100b4564:	340000c0 	cbz	w0, 100b457c <fip_file_read+0x108>
    100b4568:	2a0003e1 	mov	w1, w0
    100b456c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4570:	91084000 	add	x0, x0, #0x210
    100b4574:	9400050a 	bl	100b599c <tf_log>
    100b4578:	17fffff1 	b	100b453c <fip_file_read+0xc8>
    100b457c:	f94023e1 	ldr	x1, [sp, #64]
    100b4580:	b9400280 	ldr	w0, [x20]
    100b4584:	f90002a1 	str	x1, [x21]
    100b4588:	0b010000 	add	w0, w0, w1
    100b458c:	b9000280 	str	w0, [x20]
    100b4590:	17ffffec 	b	100b4540 <fip_file_read+0xcc>

00000000100b4594 <fip_dev_open>:
    100b4594:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4598:	910003fd 	mov	x29, sp
    100b459c:	b50000a1 	cbnz	x1, 100b45b0 <fip_dev_open+0x1c>
    100b45a0:	528018a1 	mov	w1, #0xc5                  	// #197
    100b45a4:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b45a8:	91070800 	add	x0, x0, #0x1c2
    100b45ac:	94000ac6 	bl	100b70c4 <__assert>
    100b45b0:	b0000045 	adrp	x5, 100bd000 <__STACKS_START__+0x3bc0>
    100b45b4:	b94730a2 	ldr	w2, [x5, #1840]
    100b45b8:	35000282 	cbnz	w2, 100b4608 <fip_dev_open+0x74>
    100b45bc:	b0000042 	adrp	x2, 100bd000 <__STACKS_START__+0x3bc0>
    100b45c0:	9113c047 	add	x7, x2, #0x4f0
    100b45c4:	f9427843 	ldr	x3, [x2, #1264]
    100b45c8:	b50001c3 	cbnz	x3, 100b4600 <fip_dev_open+0x6c>
    100b45cc:	b0000046 	adrp	x6, 100bd000 <__STACKS_START__+0x3bc0>
    100b45d0:	911380c4 	add	x4, x6, #0x4e0
    100b45d4:	f9027840 	str	x0, [x2, #1264]
    100b45d8:	90000023 	adrp	x3, 100b8000 <__TEXT_END__>
    100b45dc:	91018063 	add	x3, x3, #0x60
    100b45e0:	f90270c3 	str	x3, [x6, #1248]
    100b45e4:	f9000487 	str	x7, [x4, #8]
    100b45e8:	52800023 	mov	w3, #0x1                   	// #1
    100b45ec:	52800000 	mov	w0, #0x0                   	// #0
    100b45f0:	b90730a3 	str	w3, [x5, #1840]
    100b45f4:	f9000024 	str	x4, [x1]
    100b45f8:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b45fc:	d65f03c0 	ret
    100b4600:	52801321 	mov	w1, #0x99                  	// #153
    100b4604:	17ffffe8 	b	100b45a4 <fip_dev_open+0x10>
    100b4608:	12800160 	mov	w0, #0xfffffff4            	// #-12
    100b460c:	17fffffb 	b	100b45f8 <fip_dev_open+0x64>

00000000100b4610 <fip_file_len>:
    100b4610:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4614:	910003fd 	mov	x29, sp
    100b4618:	b50000a0 	cbnz	x0, 100b462c <fip_file_len+0x1c>
    100b461c:	52802ca1 	mov	w1, #0x165                 	// #357
    100b4620:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4624:	91070800 	add	x0, x0, #0x1c2
    100b4628:	94000aa7 	bl	100b70c4 <__assert>
    100b462c:	b5000061 	cbnz	x1, 100b4638 <fip_file_len+0x28>
    100b4630:	52802cc1 	mov	w1, #0x166                 	// #358
    100b4634:	17fffffb 	b	100b4620 <fip_file_len+0x10>
    100b4638:	f9400400 	ldr	x0, [x0, #8]
    100b463c:	f9401000 	ldr	x0, [x0, #32]
    100b4640:	f9000020 	str	x0, [x1]
    100b4644:	52800000 	mov	w0, #0x0                   	// #0
    100b4648:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b464c:	d65f03c0 	ret

00000000100b4650 <fip_file_open>:
    100b4650:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    100b4654:	910003fd 	mov	x29, sp
    100b4658:	a90153f3 	stp	x19, x20, [sp, #16]
    100b465c:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b4660:	a90363f7 	stp	x23, x24, [sp, #48]
    100b4664:	b50000a1 	cbnz	x1, 100b4678 <fip_file_open+0x28>
    100b4668:	52802381 	mov	w1, #0x11c                 	// #284
    100b466c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4670:	91070800 	add	x0, x0, #0x1c2
    100b4674:	94000a94 	bl	100b70c4 <__assert>
    100b4678:	aa0203f7 	mov	x23, x2
    100b467c:	b5000062 	cbnz	x2, 100b4688 <fip_file_open+0x38>
    100b4680:	528023a1 	mov	w1, #0x11d                 	// #285
    100b4684:	17fffffa 	b	100b466c <fip_file_open+0x1c>
    100b4688:	b0000054 	adrp	x20, 100bd000 <__STACKS_START__+0x3bc0>
    100b468c:	9112c294 	add	x20, x20, #0x4b0
    100b4690:	f9400e80 	ldr	x0, [x20, #24]
    100b4694:	b4000160 	cbz	x0, 100b46c0 <fip_file_open+0x70>
    100b4698:	12800173 	mov	w19, #0xfffffff4            	// #-12
    100b469c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b46a0:	9104ac00 	add	x0, x0, #0x12b
    100b46a4:	940004be 	bl	100b599c <tf_log>
    100b46a8:	2a1303e0 	mov	w0, w19
    100b46ac:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b46b0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b46b4:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b46b8:	a8c57bfd 	ldp	x29, x30, [sp], #80
    100b46bc:	d65f03c0 	ret
    100b46c0:	aa0103f8 	mov	x24, x1
    100b46c4:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b46c8:	f9425401 	ldr	x1, [x0, #1192]
    100b46cc:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b46d0:	f9425000 	ldr	x0, [x0, #1184]
    100b46d4:	910103e2 	add	x2, sp, #0x40
    100b46d8:	940001a4 	bl	100b4d68 <io_open>
    100b46dc:	340000e0 	cbz	w0, 100b46f8 <fip_file_open+0xa8>
    100b46e0:	2a0003e1 	mov	w1, w0
    100b46e4:	12800033 	mov	w19, #0xfffffffe            	// #-2
    100b46e8:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b46ec:	91056c00 	add	x0, x0, #0x15b
    100b46f0:	940004ab 	bl	100b599c <tf_log>
    100b46f4:	17ffffed 	b	100b46a8 <fip_file_open+0x58>
    100b46f8:	f94023e0 	ldr	x0, [sp, #64]
    100b46fc:	d2800202 	mov	x2, #0x10                  	// #16
    100b4700:	52800021 	mov	w1, #0x1                   	// #1
    100b4704:	940001db 	bl	100b4e70 <io_seek>
    100b4708:	35000280 	cbnz	w0, 100b4758 <fip_file_open+0x108>
    100b470c:	90000036 	adrp	x22, 100b8000 <__TEXT_END__>
    100b4710:	9108bad6 	add	x22, x22, #0x22e
    100b4714:	91002295 	add	x21, x20, #0x8
    100b4718:	f94023e0 	ldr	x0, [sp, #64]
    100b471c:	910123e3 	add	x3, sp, #0x48
    100b4720:	d2800502 	mov	x2, #0x28                  	// #40
    100b4724:	aa1503e1 	mov	x1, x21
    100b4728:	9400020b 	bl	100b4f54 <io_read>
    100b472c:	2a0003f3 	mov	w19, w0
    100b4730:	350001e0 	cbnz	w0, 100b476c <fip_file_open+0x11c>
    100b4734:	d2800202 	mov	x2, #0x10                  	// #16
    100b4738:	aa1803e1 	mov	x1, x24
    100b473c:	aa1503e0 	mov	x0, x21
    100b4740:	94000a6d 	bl	100b70f4 <memcmp>
    100b4744:	2a0003f3 	mov	w19, w0
    100b4748:	35000200 	cbnz	w0, 100b4788 <fip_file_open+0x138>
    100b474c:	b900029f 	str	wzr, [x20]
    100b4750:	f90006f4 	str	x20, [x23, #8]
    100b4754:	1400000a 	b	100b477c <fip_file_open+0x12c>
    100b4758:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b475c:	91062000 	add	x0, x0, #0x188
    100b4760:	9400048f 	bl	100b599c <tf_log>
    100b4764:	12800033 	mov	w19, #0xfffffffe            	// #-2
    100b4768:	14000005 	b	100b477c <fip_file_open+0x12c>
    100b476c:	2a0003e1 	mov	w1, w0
    100b4770:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4774:	9106a000 	add	x0, x0, #0x1a8
    100b4778:	94000489 	bl	100b599c <tf_log>
    100b477c:	f94023e0 	ldr	x0, [sp, #64]
    100b4780:	94000214 	bl	100b4fd0 <io_close>
    100b4784:	17ffffc9 	b	100b46a8 <fip_file_open+0x58>
    100b4788:	d2800202 	mov	x2, #0x10                  	// #16
    100b478c:	aa1603e1 	mov	x1, x22
    100b4790:	aa1503e0 	mov	x0, x21
    100b4794:	94000a58 	bl	100b70f4 <memcmp>
    100b4798:	35fffc00 	cbnz	w0, 100b4718 <fip_file_open+0xc8>
    100b479c:	f9000e9f 	str	xzr, [x20, #24]
    100b47a0:	17fffff1 	b	100b4764 <fip_file_open+0x114>

00000000100b47a4 <fip_dev_close>:
    100b47a4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b47a8:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b47ac:	910003fd 	mov	x29, sp
    100b47b0:	f902503f 	str	xzr, [x1, #1184]
    100b47b4:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b47b8:	f902543f 	str	xzr, [x1, #1192]
    100b47bc:	b50000a0 	cbnz	x0, 100b47d0 <fip_dev_close+0x2c>
    100b47c0:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b47c4:	91070800 	add	x0, x0, #0x1c2
    100b47c8:	52801581 	mov	w1, #0xac                  	// #172
    100b47cc:	94000a3e 	bl	100b70c4 <__assert>
    100b47d0:	f9400400 	ldr	x0, [x0, #8]
    100b47d4:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b47d8:	f9427821 	ldr	x1, [x1, #1264]
    100b47dc:	f9400002 	ldr	x2, [x0]
    100b47e0:	eb01005f 	cmp	x2, x1
    100b47e4:	54000141 	b.ne	100b480c <fip_dev_close+0x68>  // b.any
    100b47e8:	d2800101 	mov	x1, #0x8                   	// #8
    100b47ec:	94000961 	bl	100b6d70 <zeromem>
    100b47f0:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b47f4:	b9473020 	ldr	w0, [x1, #1840]
    100b47f8:	51000400 	sub	w0, w0, #0x1
    100b47fc:	b9073020 	str	w0, [x1, #1840]
    100b4800:	52800000 	mov	w0, #0x0                   	// #0
    100b4804:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4808:	d65f03c0 	ret
    100b480c:	12800020 	mov	w0, #0xfffffffe            	// #-2
    100b4810:	17fffffd 	b	100b4804 <fip_dev_close+0x60>

00000000100b4814 <register_io_dev_fip>:
    100b4814:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b4818:	910003fd 	mov	x29, sp
    100b481c:	f9000bf3 	str	x19, [sp, #16]
    100b4820:	b50000a0 	cbnz	x0, 100b4834 <register_io_dev_fip+0x20>
    100b4824:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4828:	91070800 	add	x0, x0, #0x1c2
    100b482c:	52803761 	mov	w1, #0x1bb                 	// #443
    100b4830:	94000a25 	bl	100b70c4 <__assert>
    100b4834:	aa0003f3 	mov	x19, x0
    100b4838:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b483c:	91138000 	add	x0, x0, #0x4e0
    100b4840:	940000f6 	bl	100b4c18 <io_register_device>
    100b4844:	35000080 	cbnz	w0, 100b4854 <register_io_dev_fip+0x40>
    100b4848:	90000021 	adrp	x1, 100b8000 <__TEXT_END__>
    100b484c:	91016021 	add	x1, x1, #0x58
    100b4850:	f9000261 	str	x1, [x19]
    100b4854:	f9400bf3 	ldr	x19, [sp, #16]
    100b4858:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b485c:	d65f03c0 	ret

00000000100b4860 <device_type_memmap>:
    100b4860:	52800040 	mov	w0, #0x2                   	// #2
    100b4864:	d65f03c0 	ret

00000000100b4868 <memmap_dev_close>:
    100b4868:	52800000 	mov	w0, #0x0                   	// #0
    100b486c:	d65f03c0 	ret

00000000100b4870 <memmap_dev_open>:
    100b4870:	b50000e1 	cbnz	x1, 100b488c <memmap_dev_open+0x1c>
    100b4874:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4878:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b487c:	910b4000 	add	x0, x0, #0x2d0
    100b4880:	910003fd 	mov	x29, sp
    100b4884:	52800a81 	mov	w1, #0x54                  	// #84
    100b4888:	94000a0f 	bl	100b70c4 <__assert>
    100b488c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4890:	910b0000 	add	x0, x0, #0x2c0
    100b4894:	f9000020 	str	x0, [x1]
    100b4898:	52800000 	mov	w0, #0x0                   	// #0
    100b489c:	d65f03c0 	ret

00000000100b48a0 <memmap_block_len>:
    100b48a0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b48a4:	910003fd 	mov	x29, sp
    100b48a8:	b50000a0 	cbnz	x0, 100b48bc <memmap_block_len+0x1c>
    100b48ac:	528013c1 	mov	w1, #0x9e                  	// #158
    100b48b0:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b48b4:	910b4000 	add	x0, x0, #0x2d0
    100b48b8:	94000a03 	bl	100b70c4 <__assert>
    100b48bc:	b5000061 	cbnz	x1, 100b48c8 <memmap_block_len+0x28>
    100b48c0:	528013e1 	mov	w1, #0x9f                  	// #159
    100b48c4:	17fffffb 	b	100b48b0 <memmap_block_len+0x10>
    100b48c8:	f9400400 	ldr	x0, [x0, #8]
    100b48cc:	f9400c00 	ldr	x0, [x0, #24]
    100b48d0:	f9000020 	str	x0, [x1]
    100b48d4:	52800000 	mov	w0, #0x0                   	// #0
    100b48d8:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b48dc:	d65f03c0 	ret

00000000100b48e0 <memmap_block_seek>:
    100b48e0:	7100043f 	cmp	w1, #0x1
    100b48e4:	540002a1 	b.ne	100b4938 <memmap_block_seek+0x58>  // b.any
    100b48e8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b48ec:	910003fd 	mov	x29, sp
    100b48f0:	b50000a0 	cbnz	x0, 100b4904 <memmap_block_seek+0x24>
    100b48f4:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b48f8:	910b4000 	add	x0, x0, #0x2d0
    100b48fc:	52801161 	mov	w1, #0x8b                  	// #139
    100b4900:	940009f1 	bl	100b70c4 <__assert>
    100b4904:	f9400400 	ldr	x0, [x0, #8]
    100b4908:	b7f80082 	tbnz	x2, #63, 100b4918 <memmap_block_seek+0x38>
    100b490c:	f9400c01 	ldr	x1, [x0, #24]
    100b4910:	eb02003f 	cmp	x1, x2
    100b4914:	540000a8 	b.hi	100b4928 <memmap_block_seek+0x48>  // b.pmore
    100b4918:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b491c:	910b4000 	add	x0, x0, #0x2d0
    100b4920:	52801201 	mov	w1, #0x90                  	// #144
    100b4924:	940009e8 	bl	100b70c4 <__assert>
    100b4928:	f9000802 	str	x2, [x0, #16]
    100b492c:	52800000 	mov	w0, #0x0                   	// #0
    100b4930:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4934:	d65f03c0 	ret
    100b4938:	12800020 	mov	w0, #0xfffffffe            	// #-2
    100b493c:	d65f03c0 	ret

00000000100b4940 <memmap_block_close>:
    100b4940:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4944:	910003fd 	mov	x29, sp
    100b4948:	b50000a0 	cbnz	x0, 100b495c <memmap_block_close+0x1c>
    100b494c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4950:	910b4000 	add	x0, x0, #0x2d0
    100b4954:	52801c01 	mov	w1, #0xe0                  	// #224
    100b4958:	940009db 	bl	100b70c4 <__assert>
    100b495c:	f900041f 	str	xzr, [x0, #8]
    100b4960:	d2800401 	mov	x1, #0x20                  	// #32
    100b4964:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b4968:	9113e000 	add	x0, x0, #0x4f8
    100b496c:	94000901 	bl	100b6d70 <zeromem>
    100b4970:	52800000 	mov	w0, #0x0                   	// #0
    100b4974:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4978:	d65f03c0 	ret

00000000100b497c <memmap_block_write>:
    100b497c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b4980:	910003fd 	mov	x29, sp
    100b4984:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4988:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b498c:	b50000a0 	cbnz	x0, 100b49a0 <memmap_block_write+0x24>
    100b4990:	52801921 	mov	w1, #0xc9                  	// #201
    100b4994:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4998:	910b4000 	add	x0, x0, #0x2d0
    100b499c:	940009ca 	bl	100b70c4 <__assert>
    100b49a0:	aa0303f5 	mov	x21, x3
    100b49a4:	b5000063 	cbnz	x3, 100b49b0 <memmap_block_write+0x34>
    100b49a8:	52801941 	mov	w1, #0xca                  	// #202
    100b49ac:	17fffffa 	b	100b4994 <memmap_block_write+0x18>
    100b49b0:	f9400413 	ldr	x19, [x0, #8]
    100b49b4:	aa0203f6 	mov	x22, x2
    100b49b8:	f9400a60 	ldr	x0, [x19, #16]
    100b49bc:	8b020014 	add	x20, x0, x2
    100b49c0:	eb14001f 	cmp	x0, x20
    100b49c4:	54000088 	b.hi	100b49d4 <memmap_block_write+0x58>  // b.pmore
    100b49c8:	f9400e63 	ldr	x3, [x19, #24]
    100b49cc:	eb14007f 	cmp	x3, x20
    100b49d0:	54000062 	b.cs	100b49dc <memmap_block_write+0x60>  // b.hs, b.nlast
    100b49d4:	52801a01 	mov	w1, #0xd0                  	// #208
    100b49d8:	17ffffef 	b	100b4994 <memmap_block_write+0x18>
    100b49dc:	f9400663 	ldr	x3, [x19, #8]
    100b49e0:	8b030000 	add	x0, x0, x3
    100b49e4:	940009d1 	bl	100b7128 <memcpy>
    100b49e8:	f90002b6 	str	x22, [x21]
    100b49ec:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b49f0:	f9000a74 	str	x20, [x19, #16]
    100b49f4:	52800000 	mov	w0, #0x0                   	// #0
    100b49f8:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b49fc:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b4a00:	d65f03c0 	ret

00000000100b4a04 <memmap_block_read>:
    100b4a04:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b4a08:	910003fd 	mov	x29, sp
    100b4a0c:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4a10:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b4a14:	b50000a0 	cbnz	x0, 100b4a28 <memmap_block_read+0x24>
    100b4a18:	528015c1 	mov	w1, #0xae                  	// #174
    100b4a1c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4a20:	910b4000 	add	x0, x0, #0x2d0
    100b4a24:	940009a8 	bl	100b70c4 <__assert>
    100b4a28:	aa0303f5 	mov	x21, x3
    100b4a2c:	b5000063 	cbnz	x3, 100b4a38 <memmap_block_read+0x34>
    100b4a30:	528015e1 	mov	w1, #0xaf                  	// #175
    100b4a34:	17fffffa 	b	100b4a1c <memmap_block_read+0x18>
    100b4a38:	f9400413 	ldr	x19, [x0, #8]
    100b4a3c:	aa0103e4 	mov	x4, x1
    100b4a40:	aa0203f6 	mov	x22, x2
    100b4a44:	f9400a61 	ldr	x1, [x19, #16]
    100b4a48:	8b020034 	add	x20, x1, x2
    100b4a4c:	eb14003f 	cmp	x1, x20
    100b4a50:	54000088 	b.hi	100b4a60 <memmap_block_read+0x5c>  // b.pmore
    100b4a54:	f9400e60 	ldr	x0, [x19, #24]
    100b4a58:	eb14001f 	cmp	x0, x20
    100b4a5c:	54000062 	b.cs	100b4a68 <memmap_block_read+0x64>  // b.hs, b.nlast
    100b4a60:	528016a1 	mov	w1, #0xb5                  	// #181
    100b4a64:	17ffffee 	b	100b4a1c <memmap_block_read+0x18>
    100b4a68:	f9400660 	ldr	x0, [x19, #8]
    100b4a6c:	8b000021 	add	x1, x1, x0
    100b4a70:	aa0403e0 	mov	x0, x4
    100b4a74:	940009ad 	bl	100b7128 <memcpy>
    100b4a78:	f90002b6 	str	x22, [x21]
    100b4a7c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b4a80:	f9000a74 	str	x20, [x19, #16]
    100b4a84:	52800000 	mov	w0, #0x0                   	// #0
    100b4a88:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4a8c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b4a90:	d65f03c0 	ret

00000000100b4a94 <memmap_block_open>:
    100b4a94:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4a98:	910003fd 	mov	x29, sp
    100b4a9c:	b0000044 	adrp	x4, 100bd000 <__STACKS_START__+0x3bc0>
    100b4aa0:	b944f880 	ldr	w0, [x4, #1272]
    100b4aa4:	35000240 	cbnz	w0, 100b4aec <memmap_block_open+0x58>
    100b4aa8:	b50000a1 	cbnz	x1, 100b4abc <memmap_block_open+0x28>
    100b4aac:	52800e21 	mov	w1, #0x71                  	// #113
    100b4ab0:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4ab4:	910b4000 	add	x0, x0, #0x2d0
    100b4ab8:	94000983 	bl	100b70c4 <__assert>
    100b4abc:	b5000062 	cbnz	x2, 100b4ac8 <memmap_block_open+0x34>
    100b4ac0:	52800e41 	mov	w1, #0x72                  	// #114
    100b4ac4:	17fffffb 	b	100b4ab0 <memmap_block_open+0x1c>
    100b4ac8:	9113e083 	add	x3, x4, #0x4f8
    100b4acc:	52800025 	mov	w5, #0x1                   	// #1
    100b4ad0:	b904f885 	str	w5, [x4, #1272]
    100b4ad4:	a9400424 	ldp	x4, x1, [x1]
    100b4ad8:	a900fc64 	stp	x4, xzr, [x3, #8]
    100b4adc:	f9000c61 	str	x1, [x3, #24]
    100b4ae0:	f9000443 	str	x3, [x2, #8]
    100b4ae4:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4ae8:	d65f03c0 	ret
    100b4aec:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4af0:	9108f800 	add	x0, x0, #0x23e
    100b4af4:	940003aa 	bl	100b599c <tf_log>
    100b4af8:	12800160 	mov	w0, #0xfffffff4            	// #-12
    100b4afc:	17fffffa 	b	100b4ae4 <memmap_block_open+0x50>

00000000100b4b00 <register_io_dev_memmap>:
    100b4b00:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b4b04:	910003fd 	mov	x29, sp
    100b4b08:	f9000bf3 	str	x19, [sp, #16]
    100b4b0c:	b50000a0 	cbnz	x0, 100b4b20 <register_io_dev_memmap+0x20>
    100b4b10:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4b14:	910b4000 	add	x0, x0, #0x2d0
    100b4b18:	52801e21 	mov	w1, #0xf1                  	// #241
    100b4b1c:	9400096a 	bl	100b70c4 <__assert>
    100b4b20:	aa0003f3 	mov	x19, x0
    100b4b24:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4b28:	910b0000 	add	x0, x0, #0x2c0
    100b4b2c:	9400003b 	bl	100b4c18 <io_register_device>
    100b4b30:	35000080 	cbnz	w0, 100b4b40 <register_io_dev_memmap+0x40>
    100b4b34:	90000021 	adrp	x1, 100b8000 <__TEXT_END__>
    100b4b38:	9109c021 	add	x1, x1, #0x270
    100b4b3c:	f9000261 	str	x1, [x19]
    100b4b40:	f9400bf3 	ldr	x19, [sp, #16]
    100b4b44:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4b48:	d65f03c0 	ret

00000000100b4b4c <is_valid_dev>:
    100b4b4c:	b4000180 	cbz	x0, 100b4b7c <is_valid_dev+0x30>
    100b4b50:	f9400000 	ldr	x0, [x0]
    100b4b54:	b4000140 	cbz	x0, 100b4b7c <is_valid_dev+0x30>
    100b4b58:	f9400000 	ldr	x0, [x0]
    100b4b5c:	b4000100 	cbz	x0, 100b4b7c <is_valid_dev+0x30>
    100b4b60:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4b64:	910003fd 	mov	x29, sp
    100b4b68:	d63f0000 	blr	x0
    100b4b6c:	71001c1f 	cmp	w0, #0x7
    100b4b70:	1a9f87e0 	cset	w0, ls  // ls = plast
    100b4b74:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4b78:	d65f03c0 	ret
    100b4b7c:	52800000 	mov	w0, #0x0                   	// #0
    100b4b80:	d65f03c0 	ret

00000000100b4b84 <is_valid_entity>:
    100b4b84:	b4000120 	cbz	x0, 100b4ba8 <is_valid_entity+0x24>
    100b4b88:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4b8c:	910003fd 	mov	x29, sp
    100b4b90:	f9400000 	ldr	x0, [x0]
    100b4b94:	97ffffee 	bl	100b4b4c <is_valid_dev>
    100b4b98:	7100001f 	cmp	w0, #0x0
    100b4b9c:	1a9f07e0 	cset	w0, ne  // ne = any
    100b4ba0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4ba4:	d65f03c0 	ret
    100b4ba8:	52800000 	mov	w0, #0x0                   	// #0
    100b4bac:	d65f03c0 	ret

00000000100b4bb0 <free_entity>:
    100b4bb0:	b40001a0 	cbz	x0, 100b4be4 <free_entity+0x34>
    100b4bb4:	b0000042 	adrp	x2, 100bd000 <__STACKS_START__+0x3bc0>
    100b4bb8:	91146042 	add	x2, x2, #0x518
    100b4bbc:	d2800001 	mov	x1, #0x0                   	// #0
    100b4bc0:	f8617844 	ldr	x4, [x2, x1, lsl #3]
    100b4bc4:	2a0103e3 	mov	w3, w1
    100b4bc8:	eb04001f 	cmp	x0, x4
    100b4bcc:	54000180 	b.eq	100b4bfc <free_entity+0x4c>  // b.none
    100b4bd0:	91000421 	add	x1, x1, #0x1
    100b4bd4:	f100103f 	cmp	x1, #0x4
    100b4bd8:	54ffff41 	b.ne	100b4bc0 <free_entity+0x10>  // b.any
    100b4bdc:	12800020 	mov	w0, #0xfffffffe            	// #-2
    100b4be0:	d65f03c0 	ret
    100b4be4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4be8:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4bec:	910b9c00 	add	x0, x0, #0x2e7
    100b4bf0:	910003fd 	mov	x29, sp
    100b4bf4:	52801081 	mov	w1, #0x84                  	// #132
    100b4bf8:	94000933 	bl	100b70c4 <__assert>
    100b4bfc:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b4c00:	b9473820 	ldr	w0, [x1, #1848]
    100b4c04:	f823585f 	str	xzr, [x2, w3, uxtw #3]
    100b4c08:	51000400 	sub	w0, w0, #0x1
    100b4c0c:	b9073820 	str	w0, [x1, #1848]
    100b4c10:	52800000 	mov	w0, #0x0                   	// #0
    100b4c14:	d65f03c0 	ret

00000000100b4c18 <io_register_device>:
    100b4c18:	b50000e0 	cbnz	x0, 100b4c34 <io_register_device+0x1c>
    100b4c1c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4c20:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4c24:	910b9c00 	add	x0, x0, #0x2e7
    100b4c28:	910003fd 	mov	x29, sp
    100b4c2c:	528012c1 	mov	w1, #0x96                  	// #150
    100b4c30:	94000925 	bl	100b70c4 <__assert>
    100b4c34:	b0000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b4c38:	b9473420 	ldr	w0, [x1, #1844]
    100b4c3c:	7100081f 	cmp	w0, #0x2
    100b4c40:	540000a8 	b.hi	100b4c54 <io_register_device+0x3c>  // b.pmore
    100b4c44:	11000400 	add	w0, w0, #0x1
    100b4c48:	b9073420 	str	w0, [x1, #1844]
    100b4c4c:	52800000 	mov	w0, #0x0                   	// #0
    100b4c50:	d65f03c0 	ret
    100b4c54:	12800160 	mov	w0, #0xfffffff4            	// #-12
    100b4c58:	d65f03c0 	ret

00000000100b4c5c <io_dev_open>:
    100b4c5c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b4c60:	910003fd 	mov	x29, sp
    100b4c64:	b50000a2 	cbnz	x2, 100b4c78 <io_dev_open+0x1c>
    100b4c68:	528014e1 	mov	w1, #0xa7                  	// #167
    100b4c6c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4c70:	910b9c00 	add	x0, x0, #0x2e7
    100b4c74:	94000914 	bl	100b70c4 <__assert>
    100b4c78:	b4000100 	cbz	x0, 100b4c98 <io_dev_open+0x3c>
    100b4c7c:	f9400003 	ldr	x3, [x0]
    100b4c80:	b40000c3 	cbz	x3, 100b4c98 <io_dev_open+0x3c>
    100b4c84:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b4c88:	aa0103e4 	mov	x4, x1
    100b4c8c:	aa0403e0 	mov	x0, x4
    100b4c90:	aa0203e1 	mov	x1, x2
    100b4c94:	d61f0060 	br	x3
    100b4c98:	528009e1 	mov	w1, #0x4f                  	// #79
    100b4c9c:	17fffff4 	b	100b4c6c <io_dev_open+0x10>

00000000100b4ca0 <io_dev_init>:
    100b4ca0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b4ca4:	910003fd 	mov	x29, sp
    100b4ca8:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4cac:	b50000a0 	cbnz	x0, 100b4cc0 <io_dev_init+0x20>
    100b4cb0:	52801661 	mov	w1, #0xb3                  	// #179
    100b4cb4:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4cb8:	910b9c00 	add	x0, x0, #0x2e7
    100b4cbc:	94000902 	bl	100b70c4 <__assert>
    100b4cc0:	aa0003f3 	mov	x19, x0
    100b4cc4:	aa0103f4 	mov	x20, x1
    100b4cc8:	97ffffa1 	bl	100b4b4c <is_valid_dev>
    100b4ccc:	35000060 	cbnz	w0, 100b4cd8 <io_dev_init+0x38>
    100b4cd0:	52801681 	mov	w1, #0xb4                  	// #180
    100b4cd4:	17fffff8 	b	100b4cb4 <io_dev_init+0x14>
    100b4cd8:	f9400260 	ldr	x0, [x19]
    100b4cdc:	f9401c02 	ldr	x2, [x0, #56]
    100b4ce0:	b40000c2 	cbz	x2, 100b4cf8 <io_dev_init+0x58>
    100b4ce4:	aa1403e1 	mov	x1, x20
    100b4ce8:	aa1303e0 	mov	x0, x19
    100b4cec:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4cf0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4cf4:	d61f0040 	br	x2
    100b4cf8:	52800000 	mov	w0, #0x0                   	// #0
    100b4cfc:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4d00:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4d04:	d65f03c0 	ret

00000000100b4d08 <io_dev_close>:
    100b4d08:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b4d0c:	910003fd 	mov	x29, sp
    100b4d10:	f9000bf3 	str	x19, [sp, #16]
    100b4d14:	b50000a0 	cbnz	x0, 100b4d28 <io_dev_close+0x20>
    100b4d18:	528018e1 	mov	w1, #0xc7                  	// #199
    100b4d1c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4d20:	910b9c00 	add	x0, x0, #0x2e7
    100b4d24:	940008e8 	bl	100b70c4 <__assert>
    100b4d28:	aa0003f3 	mov	x19, x0
    100b4d2c:	97ffff88 	bl	100b4b4c <is_valid_dev>
    100b4d30:	35000060 	cbnz	w0, 100b4d3c <io_dev_close+0x34>
    100b4d34:	52801901 	mov	w1, #0xc8                  	// #200
    100b4d38:	17fffff9 	b	100b4d1c <io_dev_close+0x14>
    100b4d3c:	f9400260 	ldr	x0, [x19]
    100b4d40:	f9402001 	ldr	x1, [x0, #64]
    100b4d44:	b40000a1 	cbz	x1, 100b4d58 <io_dev_close+0x50>
    100b4d48:	aa1303e0 	mov	x0, x19
    100b4d4c:	f9400bf3 	ldr	x19, [sp, #16]
    100b4d50:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4d54:	d61f0020 	br	x1
    100b4d58:	52800000 	mov	w0, #0x0                   	// #0
    100b4d5c:	f9400bf3 	ldr	x19, [sp, #16]
    100b4d60:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4d64:	d65f03c0 	ret

00000000100b4d68 <io_open>:
    100b4d68:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b4d6c:	f100003f 	cmp	x1, #0x0
    100b4d70:	fa401844 	ccmp	x2, #0x0, #0x4, ne  // ne = any
    100b4d74:	910003fd 	mov	x29, sp
    100b4d78:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4d7c:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b4d80:	a90363f7 	stp	x23, x24, [sp, #48]
    100b4d84:	540000a1 	b.ne	100b4d98 <io_open+0x30>  // b.any
    100b4d88:	52801b81 	mov	w1, #0xdc                  	// #220
    100b4d8c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4d90:	910b9c00 	add	x0, x0, #0x2e7
    100b4d94:	940008cc 	bl	100b70c4 <__assert>
    100b4d98:	aa0003f8 	mov	x24, x0
    100b4d9c:	aa0103f7 	mov	x23, x1
    100b4da0:	aa0203f5 	mov	x21, x2
    100b4da4:	97ffff6a 	bl	100b4b4c <is_valid_dev>
    100b4da8:	35000060 	cbnz	w0, 100b4db4 <io_open+0x4c>
    100b4dac:	52801ba1 	mov	w1, #0xdd                  	// #221
    100b4db0:	17fffff7 	b	100b4d8c <io_open+0x24>
    100b4db4:	b0000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b4db8:	b9473803 	ldr	w3, [x0, #1848]
    100b4dbc:	aa0003e2 	mov	x2, x0
    100b4dc0:	71000c7f 	cmp	w3, #0x3
    100b4dc4:	540003c8 	b.hi	100b4e3c <io_open+0xd4>  // b.pmore
    100b4dc8:	b0000044 	adrp	x4, 100bd000 <__STACKS_START__+0x3bc0>
    100b4dcc:	91146084 	add	x4, x4, #0x518
    100b4dd0:	d2800000 	mov	x0, #0x0                   	// #0
    100b4dd4:	f8607881 	ldr	x1, [x4, x0, lsl #3]
    100b4dd8:	2a0003f4 	mov	w20, w0
    100b4ddc:	b4000341 	cbz	x1, 100b4e44 <io_open+0xdc>
    100b4de0:	91000400 	add	x0, x0, #0x1
    100b4de4:	f100101f 	cmp	x0, #0x4
    100b4de8:	54ffff61 	b.ne	100b4dd4 <io_open+0x6c>  // b.any
    100b4dec:	52800ec1 	mov	w1, #0x76                  	// #118
    100b4df0:	17ffffe7 	b	100b4d8c <io_open+0x24>
    100b4df4:	aa1703e1 	mov	x1, x23
    100b4df8:	aa1303e2 	mov	x2, x19
    100b4dfc:	aa1803e0 	mov	x0, x24
    100b4e00:	d63f0060 	blr	x3
    100b4e04:	2a0003f7 	mov	w23, w0
    100b4e08:	35000140 	cbnz	w0, 100b4e30 <io_open+0xc8>
    100b4e0c:	d37cee94 	lsl	x20, x20, #4
    100b4e10:	f8346ad8 	str	x24, [x22, x20]
    100b4e14:	f90002b3 	str	x19, [x21]
    100b4e18:	2a1703e0 	mov	w0, w23
    100b4e1c:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4e20:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b4e24:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b4e28:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b4e2c:	d65f03c0 	ret
    100b4e30:	aa1303e0 	mov	x0, x19
    100b4e34:	97ffff5f 	bl	100b4bb0 <free_entity>
    100b4e38:	17fffff8 	b	100b4e18 <io_open+0xb0>
    100b4e3c:	12800177 	mov	w23, #0xfffffff4            	// #-12
    100b4e40:	17fffff6 	b	100b4e18 <io_open+0xb0>
    100b4e44:	b0000056 	adrp	x22, 100bd000 <__STACKS_START__+0x3bc0>
    100b4e48:	9114e2d6 	add	x22, x22, #0x538
    100b4e4c:	8b0012d3 	add	x19, x22, x0, lsl #4
    100b4e50:	11000463 	add	w3, w3, #0x1
    100b4e54:	f9400300 	ldr	x0, [x24]
    100b4e58:	b9073843 	str	w3, [x2, #1848]
    100b4e5c:	f8347893 	str	x19, [x4, x20, lsl #3]
    100b4e60:	f9400403 	ldr	x3, [x0, #8]
    100b4e64:	b5fffc83 	cbnz	x3, 100b4df4 <io_open+0x8c>
    100b4e68:	52801ca1 	mov	w1, #0xe5                  	// #229
    100b4e6c:	17ffffc8 	b	100b4d8c <io_open+0x24>

00000000100b4e70 <io_seek>:
    100b4e70:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b4e74:	910003fd 	mov	x29, sp
    100b4e78:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4e7c:	aa0003f3 	mov	x19, x0
    100b4e80:	2a0103f4 	mov	w20, w1
    100b4e84:	f90013f5 	str	x21, [sp, #32]
    100b4e88:	aa0203f5 	mov	x21, x2
    100b4e8c:	97ffff3e 	bl	100b4b84 <is_valid_entity>
    100b4e90:	34000080 	cbz	w0, 100b4ea0 <io_seek+0x30>
    100b4e94:	51000680 	sub	w0, w20, #0x1
    100b4e98:	7100081f 	cmp	w0, #0x2
    100b4e9c:	540000a9 	b.ls	100b4eb0 <io_seek+0x40>  // b.plast
    100b4ea0:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4ea4:	910b9c00 	add	x0, x0, #0x2e7
    100b4ea8:	52801ec1 	mov	w1, #0xf6                  	// #246
    100b4eac:	94000886 	bl	100b70c4 <__assert>
    100b4eb0:	f9400260 	ldr	x0, [x19]
    100b4eb4:	f9400000 	ldr	x0, [x0]
    100b4eb8:	f9400803 	ldr	x3, [x0, #16]
    100b4ebc:	b4000103 	cbz	x3, 100b4edc <io_seek+0x6c>
    100b4ec0:	aa1503e2 	mov	x2, x21
    100b4ec4:	2a1403e1 	mov	w1, w20
    100b4ec8:	aa1303e0 	mov	x0, x19
    100b4ecc:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4ed0:	f94013f5 	ldr	x21, [sp, #32]
    100b4ed4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b4ed8:	d61f0060 	br	x3
    100b4edc:	12800240 	mov	w0, #0xffffffed            	// #-19
    100b4ee0:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4ee4:	f94013f5 	ldr	x21, [sp, #32]
    100b4ee8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b4eec:	d65f03c0 	ret

00000000100b4ef0 <io_size>:
    100b4ef0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b4ef4:	910003fd 	mov	x29, sp
    100b4ef8:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4efc:	aa0003f3 	mov	x19, x0
    100b4f00:	aa0103f4 	mov	x20, x1
    100b4f04:	97ffff20 	bl	100b4b84 <is_valid_entity>
    100b4f08:	34000040 	cbz	w0, 100b4f10 <io_size+0x20>
    100b4f0c:	b50000b4 	cbnz	x20, 100b4f20 <io_size+0x30>
    100b4f10:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4f14:	910b9c00 	add	x0, x0, #0x2e7
    100b4f18:	528020e1 	mov	w1, #0x107                 	// #263
    100b4f1c:	9400086a 	bl	100b70c4 <__assert>
    100b4f20:	f9400260 	ldr	x0, [x19]
    100b4f24:	f9400000 	ldr	x0, [x0]
    100b4f28:	f9400c02 	ldr	x2, [x0, #24]
    100b4f2c:	b40000c2 	cbz	x2, 100b4f44 <io_size+0x54>
    100b4f30:	aa1403e1 	mov	x1, x20
    100b4f34:	aa1303e0 	mov	x0, x19
    100b4f38:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4f3c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4f40:	d61f0040 	br	x2
    100b4f44:	12800240 	mov	w0, #0xffffffed            	// #-19
    100b4f48:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4f4c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b4f50:	d65f03c0 	ret

00000000100b4f54 <io_read>:
    100b4f54:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b4f58:	910003fd 	mov	x29, sp
    100b4f5c:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4f60:	aa0003f3 	mov	x19, x0
    100b4f64:	aa0103f4 	mov	x20, x1
    100b4f68:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b4f6c:	aa0203f5 	mov	x21, x2
    100b4f70:	aa0303f6 	mov	x22, x3
    100b4f74:	97ffff04 	bl	100b4b84 <is_valid_entity>
    100b4f78:	350000a0 	cbnz	w0, 100b4f8c <io_read+0x38>
    100b4f7c:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4f80:	910b9c00 	add	x0, x0, #0x2e7
    100b4f84:	52802361 	mov	w1, #0x11b                 	// #283
    100b4f88:	9400084f 	bl	100b70c4 <__assert>
    100b4f8c:	f9400260 	ldr	x0, [x19]
    100b4f90:	f9400000 	ldr	x0, [x0]
    100b4f94:	f9401004 	ldr	x4, [x0, #32]
    100b4f98:	b4000124 	cbz	x4, 100b4fbc <io_read+0x68>
    100b4f9c:	aa1603e3 	mov	x3, x22
    100b4fa0:	aa1503e2 	mov	x2, x21
    100b4fa4:	aa1403e1 	mov	x1, x20
    100b4fa8:	aa1303e0 	mov	x0, x19
    100b4fac:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4fb0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b4fb4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b4fb8:	d61f0080 	br	x4
    100b4fbc:	12800240 	mov	w0, #0xffffffed            	// #-19
    100b4fc0:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b4fc4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b4fc8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b4fcc:	d65f03c0 	ret

00000000100b4fd0 <io_close>:
    100b4fd0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b4fd4:	910003fd 	mov	x29, sp
    100b4fd8:	a90153f3 	stp	x19, x20, [sp, #16]
    100b4fdc:	aa0003f3 	mov	x19, x0
    100b4fe0:	97fffee9 	bl	100b4b84 <is_valid_entity>
    100b4fe4:	350000a0 	cbnz	w0, 100b4ff8 <io_close+0x28>
    100b4fe8:	90000020 	adrp	x0, 100b8000 <__TEXT_END__>
    100b4fec:	910b9c00 	add	x0, x0, #0x2e7
    100b4ff0:	52802841 	mov	w1, #0x142                 	// #322
    100b4ff4:	94000834 	bl	100b70c4 <__assert>
    100b4ff8:	f9400260 	ldr	x0, [x19]
    100b4ffc:	f9400000 	ldr	x0, [x0]
    100b5000:	f9401801 	ldr	x1, [x0, #48]
    100b5004:	b4000141 	cbz	x1, 100b502c <io_close+0x5c>
    100b5008:	aa1303e0 	mov	x0, x19
    100b500c:	d63f0020 	blr	x1
    100b5010:	2a0003f4 	mov	w20, w0
    100b5014:	aa1303e0 	mov	x0, x19
    100b5018:	97fffee6 	bl	100b4bb0 <free_entity>
    100b501c:	2a1403e0 	mov	w0, w20
    100b5020:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5024:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b5028:	d65f03c0 	ret
    100b502c:	52800014 	mov	w20, #0x0                   	// #0
    100b5030:	17fffff9 	b	100b5014 <io_close+0x44>

00000000100b5034 <bl2_early_platform_setup2>:
    100b5034:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b5038:	910003fd 	mov	x29, sp
    100b503c:	f9000bf3 	str	x19, [sp, #16]
    100b5040:	aa0103f3 	mov	x19, x1
    100b5044:	94000388 	bl	100b5e64 <rpi3_console_init>
    100b5048:	90000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b504c:	91110001 	add	x1, x0, #0x440
    100b5050:	f9400262 	ldr	x2, [x19]
    100b5054:	f9022002 	str	x2, [x0, #1088]
    100b5058:	f9400660 	ldr	x0, [x19, #8]
    100b505c:	f9400bf3 	ldr	x19, [sp, #16]
    100b5060:	f9000420 	str	x0, [x1, #8]
    100b5064:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b5068:	1400007c 	b	100b5258 <plat_rpi3_io_setup>

00000000100b506c <bl2_platform_setup>:
    100b506c:	d65f03c0 	ret

00000000100b5070 <bl2_plat_arch_setup>:
    100b5070:	90000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b5074:	91110001 	add	x1, x0, #0x440
    100b5078:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b507c:	b0000067 	adrp	x7, 100c2000 <__BL2_END__>
    100b5080:	910000e7 	add	x7, x7, #0x0
    100b5084:	910003fd 	mov	x29, sp
    100b5088:	f9422000 	ldr	x0, [x0, #1088]
    100b508c:	b0000066 	adrp	x6, 100c2000 <__BL2_END__>
    100b5090:	910000c6 	add	x6, x6, #0x0
    100b5094:	90000025 	adrp	x5, 100b9000 <__RODATA_END__>
    100b5098:	910000a5 	add	x5, x5, #0x0
    100b509c:	f0000004 	adrp	x4, 100b8000 <__TEXT_END__>
    100b50a0:	91000084 	add	x4, x4, #0x0
    100b50a4:	f0000003 	adrp	x3, 100b8000 <__TEXT_END__>
    100b50a8:	91000063 	add	x3, x3, #0x0
    100b50ac:	f0ffffe2 	adrp	x2, 100b4000 <bl2_entrypoint>
    100b50b0:	91000042 	add	x2, x2, #0x0
    100b50b4:	f9400421 	ldr	x1, [x1, #8]
    100b50b8:	94000383 	bl	100b5ec4 <rpi3_setup_page_tables>
    100b50bc:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b50c0:	52800000 	mov	w0, #0x0                   	// #0
    100b50c4:	14000487 	b	100b62e0 <enable_mmu_el1>

00000000100b50c8 <bl2_plat_handle_post_image_load>:
    100b50c8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b50cc:	910003fd 	mov	x29, sp
    100b50d0:	a90153f3 	stp	x19, x20, [sp, #16]
    100b50d4:	2a0003f4 	mov	w20, w0
    100b50d8:	97fffc1b 	bl	100b4144 <get_bl_mem_params_node>
    100b50dc:	b50000a0 	cbnz	x0, 100b50f0 <bl2_plat_handle_post_image_load+0x28>
    100b50e0:	52800a41 	mov	w1, #0x52                  	// #82
    100b50e4:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b50e8:	910bfc00 	add	x0, x0, #0x2ff
    100b50ec:	940007f6 	bl	100b70c4 <__assert>
    100b50f0:	aa0003f3 	mov	x19, x0
    100b50f4:	7100129f 	cmp	w20, #0x4
    100b50f8:	540000a0 	b.eq	100b510c <bl2_plat_handle_post_image_load+0x44>  // b.none
    100b50fc:	7100169f 	cmp	w20, #0x5
    100b5100:	540003a0 	b.eq	100b5174 <bl2_plat_handle_post_image_load+0xac>  // b.none
    100b5104:	52800014 	mov	w20, #0x0                   	// #0
    100b5108:	14000017 	b	100b5164 <bl2_plat_handle_post_image_load+0x9c>
    100b510c:	528002a0 	mov	w0, #0x15                  	// #21
    100b5110:	97fffc0d 	bl	100b4144 <get_bl_mem_params_node>
    100b5114:	aa0003f4 	mov	x20, x0
    100b5118:	b5000060 	cbnz	x0, 100b5124 <bl2_plat_handle_post_image_load+0x5c>
    100b511c:	52800b01 	mov	w1, #0x58                  	// #88
    100b5120:	17fffff1 	b	100b50e4 <bl2_plat_handle_post_image_load+0x1c>
    100b5124:	528002c0 	mov	w0, #0x16                  	// #22
    100b5128:	97fffc07 	bl	100b4144 <get_bl_mem_params_node>
    100b512c:	b5000060 	cbnz	x0, 100b5138 <bl2_plat_handle_post_image_load+0x70>
    100b5130:	52800b61 	mov	w1, #0x5b                  	// #91
    100b5134:	17ffffec 	b	100b50e4 <bl2_plat_handle_post_image_load+0x1c>
    100b5138:	91002002 	add	x2, x0, #0x8
    100b513c:	91002281 	add	x1, x20, #0x8
    100b5140:	91008260 	add	x0, x19, #0x20
    100b5144:	940000b2 	bl	100b540c <parse_optee_header>
    100b5148:	2a0003f4 	mov	w20, w0
    100b514c:	34000080 	cbz	w0, 100b515c <bl2_plat_handle_post_image_load+0x94>
    100b5150:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5154:	910c6800 	add	x0, x0, #0x31a
    100b5158:	94000211 	bl	100b599c <tf_log>
    100b515c:	94000380 	bl	100b5f5c <rpi3_get_spsr_for_bl32_entry>
    100b5160:	b9003260 	str	w0, [x19, #48]
    100b5164:	2a1403e0 	mov	w0, w20
    100b5168:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b516c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b5170:	d65f03c0 	ret
    100b5174:	d53800a0 	mrs	x0, mpidr_el1
    100b5178:	92403c00 	and	x0, x0, #0xffff
    100b517c:	f9001e60 	str	x0, [x19, #56]
    100b5180:	94000379 	bl	100b5f64 <rpi3_get_spsr_for_bl33_entry>
    100b5184:	b9003260 	str	w0, [x19, #48]
    100b5188:	17ffffdf 	b	100b5104 <bl2_plat_handle_post_image_load+0x3c>

00000000100b518c <plat_flush_next_bl_params>:
    100b518c:	17fffbc4 	b	100b409c <flush_bl_params_desc>

00000000100b5190 <plat_get_bl_image_load_info>:
    100b5190:	17fffbff 	b	100b418c <get_bl_load_info_from_mem_params_desc>

00000000100b5194 <plat_get_next_bl_params>:
    100b5194:	17fffc1d 	b	100b4208 <get_next_bl_params_from_mem_params_desc>

00000000100b5198 <open_fip>:
    100b5198:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b519c:	d2800001 	mov	x1, #0x0                   	// #0
    100b51a0:	910003fd 	mov	x29, sp
    100b51a4:	a90153f3 	stp	x19, x20, [sp, #16]
    100b51a8:	90000054 	adrp	x20, 100bd000 <__STACKS_START__+0x3bc0>
    100b51ac:	f90013f5 	str	x21, [sp, #32]
    100b51b0:	aa0003f5 	mov	x21, x0
    100b51b4:	f942c280 	ldr	x0, [x20, #1408]
    100b51b8:	97fffeba 	bl	100b4ca0 <io_dev_init>
    100b51bc:	2a0003f3 	mov	w19, w0
    100b51c0:	35000120 	cbnz	w0, 100b51e4 <open_fip+0x4c>
    100b51c4:	f942c280 	ldr	x0, [x20, #1408]
    100b51c8:	9100e3e2 	add	x2, sp, #0x38
    100b51cc:	aa1503e1 	mov	x1, x21
    100b51d0:	97fffee6 	bl	100b4d68 <io_open>
    100b51d4:	2a0003f3 	mov	w19, w0
    100b51d8:	35000060 	cbnz	w0, 100b51e4 <open_fip+0x4c>
    100b51dc:	f9401fe0 	ldr	x0, [sp, #56]
    100b51e0:	97ffff7c 	bl	100b4fd0 <io_close>
    100b51e4:	2a1303e0 	mov	w0, w19
    100b51e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b51ec:	f94013f5 	ldr	x21, [sp, #32]
    100b51f0:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b51f4:	d65f03c0 	ret

00000000100b51f8 <open_memmap>:
    100b51f8:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b51fc:	d2800001 	mov	x1, #0x0                   	// #0
    100b5200:	910003fd 	mov	x29, sp
    100b5204:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5208:	90000054 	adrp	x20, 100bd000 <__STACKS_START__+0x3bc0>
    100b520c:	f90013f5 	str	x21, [sp, #32]
    100b5210:	aa0003f5 	mov	x21, x0
    100b5214:	f942ca80 	ldr	x0, [x20, #1424]
    100b5218:	97fffea2 	bl	100b4ca0 <io_dev_init>
    100b521c:	2a0003f3 	mov	w19, w0
    100b5220:	35000120 	cbnz	w0, 100b5244 <open_memmap+0x4c>
    100b5224:	f942ca80 	ldr	x0, [x20, #1424]
    100b5228:	9100e3e2 	add	x2, sp, #0x38
    100b522c:	aa1503e1 	mov	x1, x21
    100b5230:	97fffece 	bl	100b4d68 <io_open>
    100b5234:	2a0003f3 	mov	w19, w0
    100b5238:	35000060 	cbnz	w0, 100b5244 <open_memmap+0x4c>
    100b523c:	f9401fe0 	ldr	x0, [sp, #56]
    100b5240:	97ffff64 	bl	100b4fd0 <io_close>
    100b5244:	2a1303e0 	mov	w0, w19
    100b5248:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b524c:	f94013f5 	ldr	x21, [sp, #32]
    100b5250:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b5254:	d65f03c0 	ret

00000000100b5258 <plat_rpi3_io_setup>:
    100b5258:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b525c:	910003fd 	mov	x29, sp
    100b5260:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5264:	90000054 	adrp	x20, 100bd000 <__STACKS_START__+0x3bc0>
    100b5268:	9115e280 	add	x0, x20, #0x578
    100b526c:	97fffd6a 	bl	100b4814 <register_io_dev_fip>
    100b5270:	340000a0 	cbz	w0, 100b5284 <plat_rpi3_io_setup+0x2c>
    100b5274:	52801dc1 	mov	w1, #0xee                  	// #238
    100b5278:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b527c:	910ea000 	add	x0, x0, #0x3a8
    100b5280:	94000791 	bl	100b70c4 <__assert>
    100b5284:	90000053 	adrp	x19, 100bd000 <__STACKS_START__+0x3bc0>
    100b5288:	91162260 	add	x0, x19, #0x588
    100b528c:	97fffe1d 	bl	100b4b00 <register_io_dev_memmap>
    100b5290:	34000060 	cbz	w0, 100b529c <plat_rpi3_io_setup+0x44>
    100b5294:	52801e21 	mov	w1, #0xf1                  	// #241
    100b5298:	17fffff8 	b	100b5278 <plat_rpi3_io_setup+0x20>
    100b529c:	f942be80 	ldr	x0, [x20, #1400]
    100b52a0:	90000042 	adrp	x2, 100bd000 <__STACKS_START__+0x3bc0>
    100b52a4:	91160042 	add	x2, x2, #0x580
    100b52a8:	d2800001 	mov	x1, #0x0                   	// #0
    100b52ac:	97fffe6c 	bl	100b4c5c <io_dev_open>
    100b52b0:	34000060 	cbz	w0, 100b52bc <plat_rpi3_io_setup+0x64>
    100b52b4:	52801ec1 	mov	w1, #0xf6                  	// #246
    100b52b8:	17fffff0 	b	100b5278 <plat_rpi3_io_setup+0x20>
    100b52bc:	f942c660 	ldr	x0, [x19, #1416]
    100b52c0:	90000042 	adrp	x2, 100bd000 <__STACKS_START__+0x3bc0>
    100b52c4:	91164042 	add	x2, x2, #0x590
    100b52c8:	d2800001 	mov	x1, #0x0                   	// #0
    100b52cc:	97fffe64 	bl	100b4c5c <io_dev_open>
    100b52d0:	34000060 	cbz	w0, 100b52dc <plat_rpi3_io_setup+0x84>
    100b52d4:	52801f41 	mov	w1, #0xfa                  	// #250
    100b52d8:	17ffffe8 	b	100b5278 <plat_rpi3_io_setup+0x20>
    100b52dc:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b52e0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b52e4:	d65f03c0 	ret

00000000100b52e8 <plat_get_image_source>:
    100b52e8:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b52ec:	7100581f 	cmp	w0, #0x16
    100b52f0:	910003fd 	mov	x29, sp
    100b52f4:	a90153f3 	stp	x19, x20, [sp, #16]
    100b52f8:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b52fc:	f9001bf7 	str	x23, [sp, #48]
    100b5300:	540000a9 	b.ls	100b5314 <plat_get_image_source+0x2c>  // b.plast
    100b5304:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5308:	910ea000 	add	x0, x0, #0x3a8
    100b530c:	52802141 	mov	w1, #0x10a                 	// #266
    100b5310:	9400076d 	bl	100b70c4 <__assert>
    100b5314:	2a0003e0 	mov	w0, w0
    100b5318:	d2800313 	mov	x19, #0x18                  	// #24
    100b531c:	f0000014 	adrp	x20, 100b8000 <__TEXT_END__>
    100b5320:	910f2294 	add	x20, x20, #0x3c8
    100b5324:	aa0103f6 	mov	x22, x1
    100b5328:	aa0203f7 	mov	x23, x2
    100b532c:	9b137c13 	mul	x19, x0, x19
    100b5330:	8b130280 	add	x0, x20, x19
    100b5334:	a9408415 	ldp	x21, x1, [x0, #8]
    100b5338:	aa1503e0 	mov	x0, x21
    100b533c:	d63f0020 	blr	x1
    100b5340:	350000a0 	cbnz	w0, 100b5354 <plat_get_image_source+0x6c>
    100b5344:	f8736a81 	ldr	x1, [x20, x19]
    100b5348:	f90002f5 	str	x21, [x23]
    100b534c:	f9400021 	ldr	x1, [x1]
    100b5350:	f90002c1 	str	x1, [x22]
    100b5354:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5358:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b535c:	f9401bf7 	ldr	x23, [sp, #48]
    100b5360:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b5364:	d65f03c0 	ret

00000000100b5368 <parse_optee_image>:
    100b5368:	aa0103e3 	mov	x3, x1
    100b536c:	b9401404 	ldr	w4, [x0, #20]
    100b5370:	29400422 	ldp	w2, w1, [x1]
    100b5374:	51000485 	sub	w5, w4, #0x1
    100b5378:	b9400c66 	ldr	w6, [x3, #12]
    100b537c:	aa2503e7 	mvn	x7, x5
    100b5380:	f9400403 	ldr	x3, [x0, #8]
    100b5384:	aa028021 	orr	x1, x1, x2, lsl #32
    100b5388:	b100043f 	cmn	x1, #0x1
    100b538c:	9a831021 	csel	x1, x1, x3, ne  // ne = any
    100b5390:	eb0300ff 	cmp	x7, x3
    100b5394:	54000383 	b.cc	100b5404 <parse_optee_image+0x9c>  // b.lo, b.ul, b.last
    100b5398:	2a0603e2 	mov	w2, w6
    100b539c:	8b0300a5 	add	x5, x5, x3
    100b53a0:	cb0203e7 	neg	x7, x2
    100b53a4:	eb0100ff 	cmp	x7, x1
    100b53a8:	540002e3 	b.cc	100b5404 <parse_optee_image+0x9c>  // b.lo, b.ul, b.last
    100b53ac:	8b020022 	add	x2, x1, x2
    100b53b0:	eb03003f 	cmp	x1, x3
    100b53b4:	d1000447 	sub	x7, x2, #0x1
    100b53b8:	54000063 	b.cc	100b53c4 <parse_optee_image+0x5c>  // b.lo, b.ul, b.last
    100b53bc:	eb0700bf 	cmp	x5, x7
    100b53c0:	54000142 	b.cs	100b53e8 <parse_optee_image+0x80>  // b.hs, b.nlast
    100b53c4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b53c8:	8b244064 	add	x4, x3, w4, uxtw
    100b53cc:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b53d0:	911c1800 	add	x0, x0, #0x706
    100b53d4:	910003fd 	mov	x29, sp
    100b53d8:	94000171 	bl	100b599c <tf_log>
    100b53dc:	12800000 	mov	w0, #0xffffffff            	// #-1
    100b53e0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b53e4:	d65f03c0 	ret
    100b53e8:	b9400402 	ldr	w2, [x0, #4]
    100b53ec:	f9000401 	str	x1, [x0, #8]
    100b53f0:	121e7842 	and	w2, w2, #0xfffffffd
    100b53f4:	b9000402 	str	w2, [x0, #4]
    100b53f8:	b9001006 	str	w6, [x0, #16]
    100b53fc:	52800000 	mov	w0, #0x0                   	// #0
    100b5400:	d65f03c0 	ret
    100b5404:	12800000 	mov	w0, #0xffffffff            	// #-1
    100b5408:	d65f03c0 	ret

00000000100b540c <parse_optee_header>:
    100b540c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    100b5410:	910003fd 	mov	x29, sp
    100b5414:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5418:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b541c:	a90363f7 	stp	x23, x24, [sp, #48]
    100b5420:	f90023f9 	str	x25, [sp, #64]
    100b5424:	b50000a0 	cbnz	x0, 100b5438 <parse_optee_header+0x2c>
    100b5428:	52801261 	mov	w1, #0x93                  	// #147
    100b542c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5430:	9117c000 	add	x0, x0, #0x5f0
    100b5434:	94000724 	bl	100b70c4 <__assert>
    100b5438:	f9400413 	ldr	x19, [x0, #8]
    100b543c:	aa0003f4 	mov	x20, x0
    100b5440:	b5000073 	cbnz	x19, 100b544c <parse_optee_header+0x40>
    100b5444:	528012a1 	mov	w1, #0x95                  	// #149
    100b5448:	17fffff9 	b	100b542c <parse_optee_header+0x20>
    100b544c:	aa0103f8 	mov	x24, x1
    100b5450:	2a1303e1 	mov	w1, w19
    100b5454:	aa0203f6 	mov	x22, x2
    100b5458:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b545c:	91182000 	add	x0, x0, #0x608
    100b5460:	9400014f 	bl	100b599c <tf_log>
    100b5464:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5468:	91186000 	add	x0, x0, #0x618
    100b546c:	9400014c 	bl	100b599c <tf_log>
    100b5470:	b9400261 	ldr	w1, [x19]
    100b5474:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5478:	9118b400 	add	x0, x0, #0x62d
    100b547c:	94000148 	bl	100b599c <tf_log>
    100b5480:	39401261 	ldrb	w1, [x19, #4]
    100b5484:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5488:	91190000 	add	x0, x0, #0x640
    100b548c:	94000144 	bl	100b599c <tf_log>
    100b5490:	39401661 	ldrb	w1, [x19, #5]
    100b5494:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5498:	91195400 	add	x0, x0, #0x655
    100b549c:	94000140 	bl	100b599c <tf_log>
    100b54a0:	79400e61 	ldrh	w1, [x19, #6]
    100b54a4:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b54a8:	91199c00 	add	x0, x0, #0x667
    100b54ac:	9400013c 	bl	100b599c <tf_log>
    100b54b0:	b9400a61 	ldr	w1, [x19, #8]
    100b54b4:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b54b8:	9119e800 	add	x0, x0, #0x67a
    100b54bc:	94000138 	bl	100b599c <tf_log>
    100b54c0:	b9400261 	ldr	w1, [x19]
    100b54c4:	528a09e0 	mov	w0, #0x504f                	// #20559
    100b54c8:	72a8aa80 	movk	w0, #0x4554, lsl #16
    100b54cc:	6b00003f 	cmp	w1, w0
    100b54d0:	54000101 	b.ne	100b54f0 <parse_optee_header+0xe4>  // b.any
    100b54d4:	39401260 	ldrb	w0, [x19, #4]
    100b54d8:	7100081f 	cmp	w0, #0x2
    100b54dc:	540000a1 	b.ne	100b54f0 <parse_optee_header+0xe4>  // b.any
    100b54e0:	b9400a60 	ldr	w0, [x19, #8]
    100b54e4:	51000400 	sub	w0, w0, #0x1
    100b54e8:	7100041f 	cmp	w0, #0x1
    100b54ec:	540001e9 	b.ls	100b5528 <parse_optee_header+0x11c>  // b.plast
    100b54f0:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b54f4:	911a4400 	add	x0, x0, #0x691
    100b54f8:	94000129 	bl	100b599c <tf_log>
    100b54fc:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5500:	911b0400 	add	x0, x0, #0x6c1
    100b5504:	94000126 	bl	100b599c <tf_log>
    100b5508:	f9000e9f 	str	xzr, [x20, #24]
    100b550c:	52800000 	mov	w0, #0x0                   	// #0
    100b5510:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5514:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b5518:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b551c:	f94023f9 	ldr	x25, [sp, #64]
    100b5520:	a8c57bfd 	ldp	x29, x30, [sp], #80
    100b5524:	d65f03c0 	ret
    100b5528:	91003275 	add	x21, x19, #0xc
    100b552c:	52800017 	mov	w23, #0x0                   	// #0
    100b5530:	d2800119 	mov	x25, #0x8                   	// #8
    100b5534:	b8756b20 	ldr	w0, [x25, x21]
    100b5538:	350002a0 	cbnz	w0, 100b558c <parse_optee_header+0x180>
    100b553c:	aa1503e1 	mov	x1, x21
    100b5540:	aa1803e0 	mov	x0, x24
    100b5544:	97ffff89 	bl	100b5368 <parse_optee_image>
    100b5548:	35000320 	cbnz	w0, 100b55ac <parse_optee_header+0x1a0>
    100b554c:	b9400a61 	ldr	w1, [x19, #8]
    100b5550:	110006f7 	add	w23, w23, #0x1
    100b5554:	910042b5 	add	x21, x21, #0x10
    100b5558:	6b17003f 	cmp	w1, w23
    100b555c:	54fffec8 	b.hi	100b5534 <parse_optee_header+0x128>  // b.pmore
    100b5560:	f9400701 	ldr	x1, [x24, #8]
    100b5564:	f9000681 	str	x1, [x20, #8]
    100b5568:	f94006c1 	ldr	x1, [x22, #8]
    100b556c:	f9001281 	str	x1, [x20, #32]
    100b5570:	b94012c1 	ldr	w1, [x22, #16]
    100b5574:	f9001681 	str	x1, [x20, #40]
    100b5578:	39401661 	ldrb	w1, [x19, #5]
    100b557c:	7100003f 	cmp	w1, #0x0
    100b5580:	9a9f17e1 	cset	x1, eq  // eq = none
    100b5584:	f9000e81 	str	x1, [x20, #24]
    100b5588:	17ffffe2 	b	100b5510 <parse_optee_header+0x104>
    100b558c:	7100041f 	cmp	w0, #0x1
    100b5590:	54000081 	b.ne	100b55a0 <parse_optee_header+0x194>  // b.any
    100b5594:	aa1503e1 	mov	x1, x21
    100b5598:	aa1603e0 	mov	x0, x22
    100b559c:	17ffffea 	b	100b5544 <parse_optee_header+0x138>
    100b55a0:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b55a4:	911ba800 	add	x0, x0, #0x6ea
    100b55a8:	940000fd 	bl	100b599c <tf_log>
    100b55ac:	12800000 	mov	w0, #0xffffffff            	// #-1
    100b55b0:	17ffffd8 	b	100b5510 <parse_optee_header+0x104>

00000000100b55b4 <bl2_main>:
    100b55b4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b55b8:	f0000001 	adrp	x1, 100b8000 <__TEXT_END__>
    100b55bc:	91007821 	add	x1, x1, #0x1e
    100b55c0:	910003fd 	mov	x29, sp
    100b55c4:	f9000bf3 	str	x19, [sp, #16]
    100b55c8:	f0000013 	adrp	x19, 100b8000 <__TEXT_END__>
    100b55cc:	911d4e73 	add	x19, x19, #0x753
    100b55d0:	aa1303e0 	mov	x0, x19
    100b55d4:	940000f2 	bl	100b599c <tf_log>
    100b55d8:	aa1303e0 	mov	x0, x19
    100b55dc:	f0000001 	adrp	x1, 100b8000 <__TEXT_END__>
    100b55e0:	91000021 	add	x1, x1, #0x0
    100b55e4:	940000ee 	bl	100b599c <tf_log>
    100b55e8:	9400000e 	bl	100b5620 <bl2_arch_setup>
    100b55ec:	94000194 	bl	100b5c3c <bl2_plat_preload_setup>
    100b55f0:	9400000f 	bl	100b562c <bl2_load_images>
    100b55f4:	aa0003f3 	mov	x19, x0
    100b55f8:	94000174 	bl	100b5bc8 <console_flush>
    100b55fc:	d2800007 	mov	x7, #0x0                   	// #0
    100b5600:	d2800006 	mov	x6, #0x0                   	// #0
    100b5604:	d2800005 	mov	x5, #0x0                   	// #0
    100b5608:	d2800004 	mov	x4, #0x0                   	// #0
    100b560c:	d2800003 	mov	x3, #0x0                   	// #0
    100b5610:	d2800002 	mov	x2, #0x0                   	// #0
    100b5614:	aa1303e1 	mov	x1, x19
    100b5618:	d2800080 	mov	x0, #0x4                   	// #4
    100b561c:	940005d4 	bl	100b6d6c <smc>

00000000100b5620 <bl2_arch_setup>:
    100b5620:	d2a00600 	mov	x0, #0x300000              	// #3145728
    100b5624:	d5181040 	msr	cpacr_el1, x0
    100b5628:	d65f03c0 	ret

00000000100b562c <bl2_load_images>:
    100b562c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b5630:	910003fd 	mov	x29, sp
    100b5634:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5638:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b563c:	f9001bf7 	str	x23, [sp, #48]
    100b5640:	97fffed4 	bl	100b5190 <plat_get_bl_image_load_info>
    100b5644:	b50000a0 	cbnz	x0, 100b5658 <bl2_load_images+0x2c>
    100b5648:	528004c1 	mov	w1, #0x26                  	// #38
    100b564c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5650:	911d7400 	add	x0, x0, #0x75d
    100b5654:	9400069c 	bl	100b70c4 <__assert>
    100b5658:	f9400413 	ldr	x19, [x0, #8]
    100b565c:	b5000073 	cbnz	x19, 100b5668 <bl2_load_images+0x3c>
    100b5660:	528004e1 	mov	w1, #0x27                  	// #39
    100b5664:	17fffffa 	b	100b564c <bl2_load_images+0x20>
    100b5668:	39400001 	ldrb	w1, [x0]
    100b566c:	7100103f 	cmp	w1, #0x4
    100b5670:	54000060 	b.eq	100b567c <bl2_load_images+0x50>  // b.none
    100b5674:	52800501 	mov	w1, #0x28                  	// #40
    100b5678:	17fffff5 	b	100b564c <bl2_load_images+0x20>
    100b567c:	39400400 	ldrb	w0, [x0, #1]
    100b5680:	52800017 	mov	w23, #0x0                   	// #0
    100b5684:	7100041f 	cmp	w0, #0x1
    100b5688:	540002a9 	b.ls	100b56dc <bl2_load_images+0xb0>  // b.plast
    100b568c:	f0000014 	adrp	x20, 100b8000 <__TEXT_END__>
    100b5690:	911e6a94 	add	x20, x20, #0x79a
    100b5694:	f0000015 	adrp	x21, 100b8000 <__TEXT_END__>
    100b5698:	911dd6b5 	add	x21, x21, #0x775
    100b569c:	f9400660 	ldr	x0, [x19, #8]
    100b56a0:	b9400400 	ldr	w0, [x0, #4]
    100b56a4:	36100080 	tbz	w0, #2, 100b56b4 <bl2_load_images+0x88>
    100b56a8:	340001f7 	cbz	w23, 100b56e4 <bl2_load_images+0xb8>
    100b56ac:	aa1503e0 	mov	x0, x21
    100b56b0:	940000bb 	bl	100b599c <tf_log>
    100b56b4:	b9400260 	ldr	w0, [x19]
    100b56b8:	94000162 	bl	100b5c40 <bl2_plat_handle_pre_image_load>
    100b56bc:	2a0003f6 	mov	w22, w0
    100b56c0:	340001c0 	cbz	w0, 100b56f8 <bl2_load_images+0xcc>
    100b56c4:	2a0003e1 	mov	w1, w0
    100b56c8:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b56cc:	911ed800 	add	x0, x0, #0x7b6
    100b56d0:	940000b3 	bl	100b599c <tf_log>
    100b56d4:	2a1603e0 	mov	w0, w22
    100b56d8:	94000157 	bl	100b5c34 <plat_error_handler>
    100b56dc:	52800521 	mov	w1, #0x29                  	// #41
    100b56e0:	17ffffdb 	b	100b564c <bl2_load_images+0x20>
    100b56e4:	aa1403e0 	mov	x0, x20
    100b56e8:	52800037 	mov	w23, #0x1                   	// #1
    100b56ec:	940000ac 	bl	100b599c <tf_log>
    100b56f0:	97fffe5f 	bl	100b506c <bl2_platform_setup>
    100b56f4:	17fffff0 	b	100b56b4 <bl2_load_images+0x88>
    100b56f8:	f9400660 	ldr	x0, [x19, #8]
    100b56fc:	b9400261 	ldr	w1, [x19]
    100b5700:	b9400400 	ldr	w0, [x0, #4]
    100b5704:	370801a0 	tbnz	w0, #1, 100b5738 <bl2_load_images+0x10c>
    100b5708:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b570c:	911f9400 	add	x0, x0, #0x7e5
    100b5710:	940000a3 	bl	100b599c <tf_log>
    100b5714:	b9400260 	ldr	w0, [x19]
    100b5718:	f9400661 	ldr	x1, [x19, #8]
    100b571c:	94000036 	bl	100b57f4 <load_auth_image>
    100b5720:	2a0003f6 	mov	w22, w0
    100b5724:	34000100 	cbz	w0, 100b5744 <bl2_load_images+0x118>
    100b5728:	2a0003e1 	mov	w1, w0
    100b572c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5730:	91200000 	add	x0, x0, #0x800
    100b5734:	17ffffe7 	b	100b56d0 <bl2_load_images+0xa4>
    100b5738:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b573c:	91208400 	add	x0, x0, #0x821
    100b5740:	94000097 	bl	100b599c <tf_log>
    100b5744:	b9400260 	ldr	w0, [x19]
    100b5748:	97fffe60 	bl	100b50c8 <bl2_plat_handle_post_image_load>
    100b574c:	2a0003f6 	mov	w22, w0
    100b5750:	340000a0 	cbz	w0, 100b5764 <bl2_load_images+0x138>
    100b5754:	2a0003e1 	mov	w1, w0
    100b5758:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b575c:	91210400 	add	x0, x0, #0x841
    100b5760:	17ffffdc 	b	100b56d0 <bl2_load_images+0xa4>
    100b5764:	f9400a73 	ldr	x19, [x19, #16]
    100b5768:	b5fff9b3 	cbnz	x19, 100b569c <bl2_load_images+0x70>
    100b576c:	97fffe8a 	bl	100b5194 <plat_get_next_bl_params>
    100b5770:	aa0003f3 	mov	x19, x0
    100b5774:	b5000060 	cbnz	x0, 100b5780 <bl2_load_images+0x154>
    100b5778:	52800ba1 	mov	w1, #0x5d                  	// #93
    100b577c:	17ffffb4 	b	100b564c <bl2_load_images+0x20>
    100b5780:	f9400400 	ldr	x0, [x0, #8]
    100b5784:	b5000060 	cbnz	x0, 100b5790 <bl2_load_images+0x164>
    100b5788:	52800bc1 	mov	w1, #0x5e                  	// #94
    100b578c:	17ffffb0 	b	100b564c <bl2_load_images+0x20>
    100b5790:	39400261 	ldrb	w1, [x19]
    100b5794:	7100143f 	cmp	w1, #0x5
    100b5798:	54000060 	b.eq	100b57a4 <bl2_load_images+0x178>  // b.none
    100b579c:	52800be1 	mov	w1, #0x5f                  	// #95
    100b57a0:	17ffffab 	b	100b564c <bl2_load_images+0x20>
    100b57a4:	39400661 	ldrb	w1, [x19, #1]
    100b57a8:	7100043f 	cmp	w1, #0x1
    100b57ac:	54000068 	b.hi	100b57b8 <bl2_load_images+0x18c>  // b.pmore
    100b57b0:	52800c01 	mov	w1, #0x60                  	// #96
    100b57b4:	17ffffa6 	b	100b564c <bl2_load_images+0x20>
    100b57b8:	f9400800 	ldr	x0, [x0, #16]
    100b57bc:	b5000060 	cbnz	x0, 100b57c8 <bl2_load_images+0x19c>
    100b57c0:	52800c21 	mov	w1, #0x61                  	// #97
    100b57c4:	17ffffa2 	b	100b564c <bl2_load_images+0x20>
    100b57c8:	f9400c01 	ldr	x1, [x0, #24]
    100b57cc:	b5000041 	cbnz	x1, 100b57d4 <bl2_load_images+0x1a8>
    100b57d0:	f9000c13 	str	x19, [x0, #24]
    100b57d4:	97fffe6e 	bl	100b518c <plat_flush_next_bl_params>
    100b57d8:	f9400660 	ldr	x0, [x19, #8]
    100b57dc:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b57e0:	f9400800 	ldr	x0, [x0, #16]
    100b57e4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b57e8:	f9401bf7 	ldr	x23, [sp, #48]
    100b57ec:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b57f0:	d65f03c0 	ret

00000000100b57f4 <load_auth_image>:
    100b57f4:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    100b57f8:	910003fd 	mov	x29, sp
    100b57fc:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5800:	2a0003f4 	mov	w20, w0
    100b5804:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b5808:	aa0103f5 	mov	x21, x1
    100b580c:	f9001bf7 	str	x23, [sp, #48]
    100b5810:	f0000017 	adrp	x23, 100b8000 <__TEXT_END__>
    100b5814:	9122eef7 	add	x23, x23, #0x8bb
    100b5818:	b50000b5 	cbnz	x21, 100b582c <load_auth_image+0x38>
    100b581c:	528014a1 	mov	w1, #0xa5                  	// #165
    100b5820:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5824:	9122a000 	add	x0, x0, #0x8a8
    100b5828:	94000627 	bl	100b70c4 <__assert>
    100b582c:	394006a0 	ldrb	w0, [x21, #1]
    100b5830:	7100041f 	cmp	w0, #0x1
    100b5834:	54000068 	b.hi	100b5840 <load_auth_image+0x4c>  // b.pmore
    100b5838:	528014c1 	mov	w1, #0xa6                  	// #166
    100b583c:	17fffff9 	b	100b5820 <load_auth_image+0x2c>
    100b5840:	910163e2 	add	x2, sp, #0x58
    100b5844:	910123e1 	add	x1, sp, #0x48
    100b5848:	2a1403e0 	mov	w0, w20
    100b584c:	f94006b6 	ldr	x22, [x21, #8]
    100b5850:	97fffea6 	bl	100b52e8 <plat_get_image_source>
    100b5854:	2a0003f3 	mov	w19, w0
    100b5858:	34000120 	cbz	w0, 100b587c <load_auth_image+0x88>
    100b585c:	2a0003e2 	mov	w2, w0
    100b5860:	2a1403e1 	mov	w1, w20
    100b5864:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5868:	9102a000 	add	x0, x0, #0xa8
    100b586c:	9400004c 	bl	100b599c <tf_log>
    100b5870:	940000f6 	bl	100b5c48 <plat_try_next_boot_source>
    100b5874:	35fffd20 	cbnz	w0, 100b5818 <load_auth_image+0x24>
    100b5878:	1400002d 	b	100b592c <load_auth_image+0x138>
    100b587c:	f94027e0 	ldr	x0, [sp, #72]
    100b5880:	910143e2 	add	x2, sp, #0x50
    100b5884:	f9402fe1 	ldr	x1, [sp, #88]
    100b5888:	97fffd38 	bl	100b4d68 <io_open>
    100b588c:	2a0003f3 	mov	w19, w0
    100b5890:	340000c0 	cbz	w0, 100b58a8 <load_auth_image+0xb4>
    100b5894:	2a0003e2 	mov	w2, w0
    100b5898:	2a1403e1 	mov	w1, w20
    100b589c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b58a0:	91036400 	add	x0, x0, #0xd9
    100b58a4:	17fffff2 	b	100b586c <load_auth_image+0x78>
    100b58a8:	aa1603e2 	mov	x2, x22
    100b58ac:	2a1403e1 	mov	w1, w20
    100b58b0:	aa1703e0 	mov	x0, x23
    100b58b4:	9400003a 	bl	100b599c <tf_log>
    100b58b8:	f9402be0 	ldr	x0, [sp, #80]
    100b58bc:	910183e1 	add	x1, sp, #0x60
    100b58c0:	97fffd8c 	bl	100b4ef0 <io_size>
    100b58c4:	2a0003f3 	mov	w19, w0
    100b58c8:	35000060 	cbnz	w0, 100b58d4 <load_auth_image+0xe0>
    100b58cc:	f94033e2 	ldr	x2, [sp, #96]
    100b58d0:	b50000e2 	cbnz	x2, 100b58ec <load_auth_image+0xf8>
    100b58d4:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b58d8:	9121c400 	add	x0, x0, #0x871
    100b58dc:	2a1303e2 	mov	w2, w19
    100b58e0:	2a1403e1 	mov	w1, w20
    100b58e4:	9400002e 	bl	100b599c <tf_log>
    100b58e8:	14000009 	b	100b590c <load_auth_image+0x118>
    100b58ec:	b94016a0 	ldr	w0, [x21, #20]
    100b58f0:	eb00005f 	cmp	x2, x0
    100b58f4:	54000289 	b.ls	100b5944 <load_auth_image+0x150>  // b.plast
    100b58f8:	12800353 	mov	w19, #0xffffffe5            	// #-27
    100b58fc:	2a1403e1 	mov	w1, w20
    100b5900:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5904:	91238800 	add	x0, x0, #0x8e2
    100b5908:	94000025 	bl	100b599c <tf_log>
    100b590c:	f9402be0 	ldr	x0, [sp, #80]
    100b5910:	97fffdb0 	bl	100b4fd0 <io_close>
    100b5914:	f94027e0 	ldr	x0, [sp, #72]
    100b5918:	97fffcfc 	bl	100b4d08 <io_dev_close>
    100b591c:	35fffab3 	cbnz	w19, 100b5870 <load_auth_image+0x7c>
    100b5920:	b94012a1 	ldr	w1, [x21, #16]
    100b5924:	f94006a0 	ldr	x0, [x21, #8]
    100b5928:	940004e7 	bl	100b6cc4 <flush_dcache_range>
    100b592c:	2a1303e0 	mov	w0, w19
    100b5930:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5934:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b5938:	f9401bf7 	ldr	x23, [sp, #48]
    100b593c:	a8c77bfd 	ldp	x29, x30, [sp], #112
    100b5940:	d65f03c0 	ret
    100b5944:	f9402be0 	ldr	x0, [sp, #80]
    100b5948:	b90012a2 	str	w2, [x21, #16]
    100b594c:	9101a3e3 	add	x3, sp, #0x68
    100b5950:	aa1603e1 	mov	x1, x22
    100b5954:	97fffd80 	bl	100b4f54 <io_read>
    100b5958:	2a0003f3 	mov	w19, w0
    100b595c:	35000080 	cbnz	w0, 100b596c <load_auth_image+0x178>
    100b5960:	a94603e3 	ldp	x3, x0, [sp, #96]
    100b5964:	eb03001f 	cmp	x0, x3
    100b5968:	540000c2 	b.cs	100b5980 <load_auth_image+0x18c>  // b.hs, b.nlast
    100b596c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5970:	91240c00 	add	x0, x0, #0x903
    100b5974:	2a1303e2 	mov	w2, w19
    100b5978:	2a1403e1 	mov	w1, w20
    100b597c:	17ffffda 	b	100b58e4 <load_auth_image+0xf0>
    100b5980:	8b0302c3 	add	x3, x22, x3
    100b5984:	aa1603e2 	mov	x2, x22
    100b5988:	2a1403e1 	mov	w1, w20
    100b598c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5990:	91249400 	add	x0, x0, #0x925
    100b5994:	94000002 	bl	100b599c <tf_log>
    100b5998:	17ffffdd 	b	100b590c <load_auth_image+0x118>

00000000100b599c <tf_log>:
    100b599c:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
    100b59a0:	910003fd 	mov	x29, sp
    100b59a4:	a90153f3 	stp	x19, x20, [sp, #16]
    100b59a8:	aa0003f4 	mov	x20, x0
    100b59ac:	a9068be1 	stp	x1, x2, [sp, #104]
    100b59b0:	a90793e3 	stp	x3, x4, [sp, #120]
    100b59b4:	a9089be5 	stp	x5, x6, [sp, #136]
    100b59b8:	f9004fe7 	str	x7, [sp, #152]
    100b59bc:	39400000 	ldrb	w0, [x0]
    100b59c0:	51000401 	sub	w1, w0, #0x1
    100b59c4:	7100c43f 	cmp	w1, #0x31
    100b59c8:	540000a9 	b.ls	100b59dc <tf_log+0x40>  // b.plast
    100b59cc:	52800441 	mov	w1, #0x22                  	// #34
    100b59d0:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b59d4:	91252400 	add	x0, x0, #0x949
    100b59d8:	940005bb 	bl	100b70c4 <__assert>
    100b59dc:	52800142 	mov	w2, #0xa                   	// #10
    100b59e0:	1ac20801 	udiv	w1, w0, w2
    100b59e4:	1b028021 	msub	w1, w1, w2, w0
    100b59e8:	34000061 	cbz	w1, 100b59f4 <tf_log+0x58>
    100b59ec:	52800461 	mov	w1, #0x23                  	// #35
    100b59f0:	17fffff8 	b	100b59d0 <tf_log+0x34>
    100b59f4:	90000021 	adrp	x1, 100b9000 <__RODATA_END__>
    100b59f8:	b943a821 	ldr	w1, [x1, #936]
    100b59fc:	6b00003f 	cmp	w1, w0
    100b5a00:	54000263 	b.cc	100b5a4c <tf_log+0xb0>  // b.lo, b.ul, b.last
    100b5a04:	94000093 	bl	100b5c50 <plat_log_get_prefix>
    100b5a08:	aa0003f3 	mov	x19, x0
    100b5a0c:	39400260 	ldrb	w0, [x19]
    100b5a10:	35000240 	cbnz	w0, 100b5a58 <tf_log+0xbc>
    100b5a14:	910283e0 	add	x0, sp, #0xa0
    100b5a18:	a90403e0 	stp	x0, x0, [sp, #64]
    100b5a1c:	910183e0 	add	x0, sp, #0x60
    100b5a20:	f9002be0 	str	x0, [sp, #80]
    100b5a24:	128006e0 	mov	w0, #0xffffffc8            	// #-56
    100b5a28:	b9005be0 	str	w0, [sp, #88]
    100b5a2c:	b9005fff 	str	wzr, [sp, #92]
    100b5a30:	a94407e0 	ldp	x0, x1, [sp, #64]
    100b5a34:	a90207e0 	stp	x0, x1, [sp, #32]
    100b5a38:	a94507e0 	ldp	x0, x1, [sp, #80]
    100b5a3c:	a90307e0 	stp	x0, x1, [sp, #48]
    100b5a40:	910083e1 	add	x1, sp, #0x20
    100b5a44:	91000680 	add	x0, x20, #0x1
    100b5a48:	940005fe 	bl	100b7240 <vprintf>
    100b5a4c:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5a50:	a8ca7bfd 	ldp	x29, x30, [sp], #160
    100b5a54:	d65f03c0 	ret
    100b5a58:	94000713 	bl	100b76a4 <putchar>
    100b5a5c:	91000673 	add	x19, x19, #0x1
    100b5a60:	17ffffeb 	b	100b5a0c <tf_log+0x70>

00000000100b5a64 <console_is_registered>:
    100b5a64:	b50000e0 	cbnz	x0, 100b5a80 <console_is_registered+0x1c>
    100b5a68:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b5a6c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5a70:	91256400 	add	x0, x0, #0x959
    100b5a74:	910003fd 	mov	x29, sp
    100b5a78:	52800681 	mov	w1, #0x34                  	// #52
    100b5a7c:	94000592 	bl	100b70c4 <__assert>
    100b5a80:	90000041 	adrp	x1, 100bd000 <__STACKS_START__+0x3bc0>
    100b5a84:	f943a021 	ldr	x1, [x1, #1856]
    100b5a88:	b5000061 	cbnz	x1, 100b5a94 <console_is_registered+0x30>
    100b5a8c:	52800000 	mov	w0, #0x0                   	// #0
    100b5a90:	d65f03c0 	ret
    100b5a94:	eb00003f 	cmp	x1, x0
    100b5a98:	54000060 	b.eq	100b5aa4 <console_is_registered+0x40>  // b.none
    100b5a9c:	f9400021 	ldr	x1, [x1]
    100b5aa0:	17fffffa 	b	100b5a88 <console_is_registered+0x24>
    100b5aa4:	52800020 	mov	w0, #0x1                   	// #1
    100b5aa8:	d65f03c0 	ret

00000000100b5aac <console_register>:
    100b5aac:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b5ab0:	910003fd 	mov	x29, sp
    100b5ab4:	f9000bf3 	str	x19, [sp, #16]
    100b5ab8:	aa0003f3 	mov	x19, x0
    100b5abc:	90000020 	adrp	x0, 100b9000 <__RODATA_END__>
    100b5ac0:	91110000 	add	x0, x0, #0x440
    100b5ac4:	eb00027f 	cmp	x19, x0
    100b5ac8:	54000123 	b.cc	100b5aec <console_register+0x40>  // b.lo, b.ul, b.last
    100b5acc:	90000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b5ad0:	91110000 	add	x0, x0, #0x440
    100b5ad4:	eb00027f 	cmp	x19, x0
    100b5ad8:	540000a2 	b.cs	100b5aec <console_register+0x40>  // b.hs, b.nlast
    100b5adc:	528002c1 	mov	w1, #0x16                  	// #22
    100b5ae0:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5ae4:	91256400 	add	x0, x0, #0x959
    100b5ae8:	94000577 	bl	100b70c4 <__assert>
    100b5aec:	aa1303e0 	mov	x0, x19
    100b5af0:	97ffffdd 	bl	100b5a64 <console_is_registered>
    100b5af4:	34000060 	cbz	w0, 100b5b00 <console_register+0x54>
    100b5af8:	52800301 	mov	w1, #0x18                  	// #24
    100b5afc:	17fffff9 	b	100b5ae0 <console_register+0x34>
    100b5b00:	90000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b5b04:	f943a001 	ldr	x1, [x0, #1856]
    100b5b08:	f9000261 	str	x1, [x19]
    100b5b0c:	f903a013 	str	x19, [x0, #1856]
    100b5b10:	52800020 	mov	w0, #0x1                   	// #1
    100b5b14:	f9400bf3 	ldr	x19, [sp, #16]
    100b5b18:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b5b1c:	d65f03c0 	ret

00000000100b5b20 <console_set_scope>:
    100b5b20:	b50000e0 	cbnz	x0, 100b5b3c <console_set_scope+0x1c>
    100b5b24:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b5b28:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5b2c:	91256400 	add	x0, x0, #0x959
    100b5b30:	910003fd 	mov	x29, sp
    100b5b34:	52800881 	mov	w1, #0x44                  	// #68
    100b5b38:	94000563 	bl	100b70c4 <__assert>
    100b5b3c:	f9400402 	ldr	x2, [x0, #8]
    100b5b40:	2a0103e1 	mov	w1, w1
    100b5b44:	92785c42 	and	x2, x2, #0xffffff00
    100b5b48:	aa010042 	orr	x2, x2, x1
    100b5b4c:	f9000402 	str	x2, [x0, #8]
    100b5b50:	d65f03c0 	ret

00000000100b5b54 <console_putc>:
    100b5b54:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b5b58:	910003fd 	mov	x29, sp
    100b5b5c:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5b60:	12800ff4 	mov	w20, #0xffffff80            	// #-128
    100b5b64:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b5b68:	2a0003f6 	mov	w22, w0
    100b5b6c:	90000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b5b70:	f943a013 	ldr	x19, [x0, #1856]
    100b5b74:	90000035 	adrp	x21, 100b9000 <__RODATA_END__>
    100b5b78:	910eb2b5 	add	x21, x21, #0x3ac
    100b5b7c:	b50000d3 	cbnz	x19, 100b5b94 <console_putc+0x40>
    100b5b80:	2a1403e0 	mov	w0, w20
    100b5b84:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5b88:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b5b8c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b5b90:	d65f03c0 	ret
    100b5b94:	f9400660 	ldr	x0, [x19, #8]
    100b5b98:	394002a1 	ldrb	w1, [x21]
    100b5b9c:	ea00003f 	tst	x1, x0
    100b5ba0:	54000100 	b.eq	100b5bc0 <console_putc+0x6c>  // b.none
    100b5ba4:	f9400a62 	ldr	x2, [x19, #16]
    100b5ba8:	aa1303e1 	mov	x1, x19
    100b5bac:	2a1603e0 	mov	w0, w22
    100b5bb0:	d63f0040 	blr	x2
    100b5bb4:	3102029f 	cmn	w20, #0x80
    100b5bb8:	7a401280 	ccmp	w20, w0, #0x0, ne  // ne = any
    100b5bbc:	1a80d294 	csel	w20, w20, w0, le
    100b5bc0:	f9400273 	ldr	x19, [x19]
    100b5bc4:	17ffffee 	b	100b5b7c <console_putc+0x28>

00000000100b5bc8 <console_flush>:
    100b5bc8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b5bcc:	910003fd 	mov	x29, sp
    100b5bd0:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5bd4:	90000040 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b5bd8:	f943a013 	ldr	x19, [x0, #1856]
    100b5bdc:	f90013f5 	str	x21, [sp, #32]
    100b5be0:	90000035 	adrp	x21, 100b9000 <__RODATA_END__>
    100b5be4:	910eb2b5 	add	x21, x21, #0x3ac
    100b5be8:	12800ff4 	mov	w20, #0xffffff80            	// #-128
    100b5bec:	b50000d3 	cbnz	x19, 100b5c04 <console_flush+0x3c>
    100b5bf0:	2a1403e0 	mov	w0, w20
    100b5bf4:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5bf8:	f94013f5 	ldr	x21, [sp, #32]
    100b5bfc:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b5c00:	d65f03c0 	ret
    100b5c04:	f9400660 	ldr	x0, [x19, #8]
    100b5c08:	394002a1 	ldrb	w1, [x21]
    100b5c0c:	ea00003f 	tst	x1, x0
    100b5c10:	540000e0 	b.eq	100b5c2c <console_flush+0x64>  // b.none
    100b5c14:	f9401261 	ldr	x1, [x19, #32]
    100b5c18:	aa1303e0 	mov	x0, x19
    100b5c1c:	d63f0020 	blr	x1
    100b5c20:	3102029f 	cmn	w20, #0x80
    100b5c24:	7a401280 	ccmp	w20, w0, #0x0, ne  // ne = any
    100b5c28:	1a80d294 	csel	w20, w20, w0, le
    100b5c2c:	f9400273 	ldr	x19, [x19]
    100b5c30:	17ffffef 	b	100b5bec <console_flush+0x24>

00000000100b5c34 <plat_error_handler>:
    100b5c34:	d503207f 	wfi
    100b5c38:	17ffffff 	b	100b5c34 <plat_error_handler>

00000000100b5c3c <bl2_plat_preload_setup>:
    100b5c3c:	d65f03c0 	ret

00000000100b5c40 <bl2_plat_handle_pre_image_load>:
    100b5c40:	52800000 	mov	w0, #0x0                   	// #0
    100b5c44:	d65f03c0 	ret

00000000100b5c48 <plat_try_next_boot_source>:
    100b5c48:	52800000 	mov	w0, #0x0                   	// #0
    100b5c4c:	d65f03c0 	ret

00000000100b5c50 <plat_log_get_prefix>:
    100b5c50:	7100c81f 	cmp	w0, #0x32
    100b5c54:	52800641 	mov	w1, #0x32                  	// #50
    100b5c58:	1a819000 	csel	w0, w0, w1, ls  // ls = plast
    100b5c5c:	52800141 	mov	w1, #0xa                   	// #10
    100b5c60:	6b01001f 	cmp	w0, w1
    100b5c64:	1a812000 	csel	w0, w0, w1, cs  // cs = hs, nlast
    100b5c68:	1ac10800 	udiv	w0, w0, w1
    100b5c6c:	f0000001 	adrp	x1, 100b8000 <__TEXT_END__>
    100b5c70:	91260021 	add	x1, x1, #0x980
    100b5c74:	51000400 	sub	w0, w0, #0x1
    100b5c78:	f8607820 	ldr	x0, [x1, x0, lsl #3]
    100b5c7c:	d65f03c0 	ret

00000000100b5c80 <is_address_readable>:
    100b5c80:	d5384241 	mrs	x1, currentel
    100b5c84:	53020c21 	ubfx	w1, w1, #2, #2
    100b5c88:	71000c3f 	cmp	w1, #0x3
    100b5c8c:	540000e1 	b.ne	100b5ca8 <is_address_readable+0x28>  // b.any
    100b5c90:	d50e7800 	at	s1e3r, x0
    100b5c94:	d5033fdf 	isb
    100b5c98:	d5387400 	mrs	x0, par_el1
    100b5c9c:	aa2003e0 	mvn	x0, x0
    100b5ca0:	12000000 	and	w0, w0, #0x1
    100b5ca4:	d65f03c0 	ret
    100b5ca8:	7100083f 	cmp	w1, #0x2
    100b5cac:	54000061 	b.ne	100b5cb8 <is_address_readable+0x38>  // b.any
    100b5cb0:	d50c7800 	at	s1e2r, x0
    100b5cb4:	17fffff8 	b	100b5c94 <is_address_readable+0x14>
    100b5cb8:	d5087800 	at	s1e1r, x0
    100b5cbc:	17fffff6 	b	100b5c94 <is_address_readable+0x14>

00000000100b5cc0 <is_valid_object.constprop.0>:
    100b5cc0:	d1000401 	sub	x1, x0, #0x1
    100b5cc4:	b100483f 	cmn	x1, #0x12
    100b5cc8:	54000248 	b.hi	100b5d10 <is_valid_object.constprop.0+0x50>  // b.pmore
    100b5ccc:	f240081f 	tst	x0, #0x7
    100b5cd0:	54000201 	b.ne	100b5d10 <is_valid_object.constprop.0+0x50>  // b.any
    100b5cd4:	aa0003e2 	mov	x2, x0
    100b5cd8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b5cdc:	d2800003 	mov	x3, #0x0                   	// #0
    100b5ce0:	910003fd 	mov	x29, sp
    100b5ce4:	8b030040 	add	x0, x2, x3
    100b5ce8:	97ffffe6 	bl	100b5c80 <is_address_readable>
    100b5cec:	72001c00 	ands	w0, w0, #0xff
    100b5cf0:	540000c0 	b.eq	100b5d08 <is_valid_object.constprop.0+0x48>  // b.none
    100b5cf4:	91000463 	add	x3, x3, #0x1
    100b5cf8:	f100407f 	cmp	x3, #0x10
    100b5cfc:	54ffff41 	b.ne	100b5ce4 <is_valid_object.constprop.0+0x24>  // b.any
    100b5d00:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b5d04:	d65f03c0 	ret
    100b5d08:	52800000 	mov	w0, #0x0                   	// #0
    100b5d0c:	17fffffd 	b	100b5d00 <is_valid_object.constprop.0+0x40>
    100b5d10:	52800000 	mov	w0, #0x0                   	// #0
    100b5d14:	d65f03c0 	ret

00000000100b5d18 <backtrace>:
    100b5d18:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b5d1c:	910003fd 	mov	x29, sp
    100b5d20:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5d24:	aa1d03f4 	mov	x20, x29
    100b5d28:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b5d2c:	aa1e03f5 	mov	x21, x30
    100b5d30:	f9001bf7 	str	x23, [sp, #48]
    100b5d34:	aa0003f7 	mov	x23, x0
    100b5d38:	97ffffa4 	bl	100b5bc8 <console_flush>
    100b5d3c:	aa1703e1 	mov	x1, x23
    100b5d40:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5d44:	9127a000 	add	x0, x0, #0x9e8
    100b5d48:	94000642 	bl	100b7650 <printf>
    100b5d4c:	d5384240 	mrs	x0, currentel
    100b5d50:	53020c00 	ubfx	w0, w0, #2, #2
    100b5d54:	71000c1f 	cmp	w0, #0x3
    100b5d58:	540002e0 	b.eq	100b5db4 <backtrace+0x9c>  // b.none
    100b5d5c:	f0000013 	adrp	x19, 100b8000 <__TEXT_END__>
    100b5d60:	7100081f 	cmp	w0, #0x2
    100b5d64:	f0000001 	adrp	x1, 100b8000 <__TEXT_END__>
    100b5d68:	91278a60 	add	x0, x19, #0x9e2
    100b5d6c:	91277833 	add	x19, x1, #0x9de
    100b5d70:	9a800273 	csel	x19, x19, x0, eq  // eq = none
    100b5d74:	aa1403e0 	mov	x0, x20
    100b5d78:	97ffffd2 	bl	100b5cc0 <is_valid_object.constprop.0>
    100b5d7c:	72001c1f 	tst	w0, #0xff
    100b5d80:	54000201 	b.ne	100b5dc0 <backtrace+0xa8>  // b.any
    100b5d84:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5d88:	9127f800 	add	x0, x0, #0x9fe
    100b5d8c:	aa1403e1 	mov	x1, x20
    100b5d90:	94000630 	bl	100b7650 <printf>
    100b5d94:	aa1703e1 	mov	x1, x23
    100b5d98:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5d9c:	912a8400 	add	x0, x0, #0xaa1
    100b5da0:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5da4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b5da8:	f9401bf7 	ldr	x23, [sp, #48]
    100b5dac:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b5db0:	14000628 	b	100b7650 <printf>
    100b5db4:	f0000013 	adrp	x19, 100b8000 <__TEXT_END__>
    100b5db8:	91276a73 	add	x19, x19, #0x9da
    100b5dbc:	17ffffee 	b	100b5d74 <backtrace+0x5c>
    100b5dc0:	f9400680 	ldr	x0, [x20, #8]
    100b5dc4:	eb0002bf 	cmp	x21, x0
    100b5dc8:	540000a0 	b.eq	100b5ddc <backtrace+0xc4>  // b.none
    100b5dcc:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5dd0:	9128e800 	add	x0, x0, #0xa3a
    100b5dd4:	aa1403e1 	mov	x1, x20
    100b5dd8:	17ffffee 	b	100b5d90 <backtrace+0x78>
    100b5ddc:	52800035 	mov	w21, #0x1                   	// #1
    100b5de0:	f0000016 	adrp	x22, 100b8000 <__TEXT_END__>
    100b5de4:	9129bad6 	add	x22, x22, #0xa6e
    100b5de8:	90000003 	adrp	x3, 100b5000 <io_close+0x30>
    100b5dec:	91346063 	add	x3, x3, #0xd18
    100b5df0:	aa1303e2 	mov	x2, x19
    100b5df4:	52800001 	mov	w1, #0x0                   	// #0
    100b5df8:	aa1603e0 	mov	x0, x22
    100b5dfc:	94000615 	bl	100b7650 <printf>
    100b5e00:	aa1403e0 	mov	x0, x20
    100b5e04:	97ffffaf 	bl	100b5cc0 <is_valid_object.constprop.0>
    100b5e08:	72001c1f 	tst	w0, #0xff
    100b5e0c:	54fffc40 	b.eq	100b5d94 <backtrace+0x7c>  // b.none
    100b5e10:	f9400683 	ldr	x3, [x20, #8]
    100b5e14:	f1001063 	subs	x3, x3, #0x4
    100b5e18:	54fffbe0 	b.eq	100b5d94 <backtrace+0x7c>  // b.none
    100b5e1c:	f240047f 	tst	x3, #0x3
    100b5e20:	54fffba1 	b.ne	100b5d94 <backtrace+0x7c>  // b.any
    100b5e24:	aa0303e0 	mov	x0, x3
    100b5e28:	97ffff96 	bl	100b5c80 <is_address_readable>
    100b5e2c:	72001c1f 	tst	w0, #0xff
    100b5e30:	54fffb20 	b.eq	100b5d94 <backtrace+0x7c>  // b.none
    100b5e34:	2a1503e1 	mov	w1, w21
    100b5e38:	aa1303e2 	mov	x2, x19
    100b5e3c:	aa1603e0 	mov	x0, x22
    100b5e40:	110006b5 	add	w21, w21, #0x1
    100b5e44:	94000603 	bl	100b7650 <printf>
    100b5e48:	710052bf 	cmp	w21, #0x14
    100b5e4c:	f9400294 	ldr	x20, [x20]
    100b5e50:	54fffd81 	b.ne	100b5e00 <backtrace+0xe8>  // b.any
    100b5e54:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5e58:	9129f400 	add	x0, x0, #0xa7d
    100b5e5c:	940005fd 	bl	100b7650 <printf>
    100b5e60:	17ffffcd 	b	100b5d94 <backtrace+0x7c>

00000000100b5e64 <rpi3_console_init>:
    100b5e64:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b5e68:	52984002 	mov	w2, #0xc200                	// #49664
    100b5e6c:	72a00022 	movk	w2, #0x1, lsl #16
    100b5e70:	910003fd 	mov	x29, sp
    100b5e74:	f9000bf3 	str	x19, [sp, #16]
    100b5e78:	90000053 	adrp	x19, 100bd000 <__STACKS_START__+0x3bc0>
    100b5e7c:	91166273 	add	x19, x19, #0x598
    100b5e80:	528ca001 	mov	w1, #0x6500                	// #25856
    100b5e84:	72a3b9a1 	movk	w1, #0x1dcd, lsl #16
    100b5e88:	d28a0800 	mov	x0, #0x5040                	// #20544
    100b5e8c:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    100b5e90:	aa1303e3 	mov	x3, x19
    100b5e94:	9400041d 	bl	100b6f08 <console_16550_register>
    100b5e98:	350000c0 	cbnz	w0, 100b5eb0 <rpi3_console_init+0x4c>
    100b5e9c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5ea0:	912ad400 	add	x0, x0, #0xab5
    100b5ea4:	97ffff9d 	bl	100b5d18 <backtrace>
    100b5ea8:	97ffff48 	bl	100b5bc8 <console_flush>
    100b5eac:	94000375 	bl	100b6c80 <do_panic>
    100b5eb0:	aa1303e0 	mov	x0, x19
    100b5eb4:	52800021 	mov	w1, #0x1                   	// #1
    100b5eb8:	f9400bf3 	ldr	x19, [sp, #16]
    100b5ebc:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b5ec0:	17ffff18 	b	100b5b20 <console_set_scope>

00000000100b5ec4 <rpi3_setup_page_tables>:
    100b5ec4:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b5ec8:	910003fd 	mov	x29, sp
    100b5ecc:	a90153f3 	stp	x19, x20, [sp, #16]
    100b5ed0:	aa0403f4 	mov	x20, x4
    100b5ed4:	aa0603f3 	mov	x19, x6
    100b5ed8:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b5edc:	aa0703f6 	mov	x22, x7
    100b5ee0:	aa0203f5 	mov	x21, x2
    100b5ee4:	aa0103e2 	mov	x2, x1
    100b5ee8:	aa0003e1 	mov	x1, x0
    100b5eec:	a90363f7 	stp	x23, x24, [sp, #48]
    100b5ef0:	aa0503f7 	mov	x23, x5
    100b5ef4:	aa0303f8 	mov	x24, x3
    100b5ef8:	52800143 	mov	w3, #0xa                   	// #10
    100b5efc:	940000ce 	bl	100b6234 <mmap_add_region>
    100b5f00:	cb150302 	sub	x2, x24, x21
    100b5f04:	aa1503e1 	mov	x1, x21
    100b5f08:	aa1503e0 	mov	x0, x21
    100b5f0c:	52800043 	mov	w3, #0x2                   	// #2
    100b5f10:	940000c9 	bl	100b6234 <mmap_add_region>
    100b5f14:	cb1402e2 	sub	x2, x23, x20
    100b5f18:	aa1403e1 	mov	x1, x20
    100b5f1c:	aa1403e0 	mov	x0, x20
    100b5f20:	52800443 	mov	w3, #0x22                  	// #34
    100b5f24:	940000c4 	bl	100b6234 <mmap_add_region>
    100b5f28:	cb1302c2 	sub	x2, x22, x19
    100b5f2c:	aa1303e1 	mov	x1, x19
    100b5f30:	52800103 	mov	w3, #0x8                   	// #8
    100b5f34:	aa1303e0 	mov	x0, x19
    100b5f38:	940000bf 	bl	100b6234 <mmap_add_region>
    100b5f3c:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5f40:	912b2000 	add	x0, x0, #0xac8
    100b5f44:	940000c9 	bl	100b6268 <mmap_add>
    100b5f48:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b5f4c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b5f50:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b5f54:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b5f58:	140000c8 	b	100b6278 <init_xlat_tables>

00000000100b5f5c <rpi3_get_spsr_for_bl32_entry>:
    100b5f5c:	52800000 	mov	w0, #0x0                   	// #0
    100b5f60:	d65f03c0 	ret

00000000100b5f64 <rpi3_get_spsr_for_bl33_entry>:
    100b5f64:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b5f68:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5f6c:	912ee000 	add	x0, x0, #0xbb8
    100b5f70:	910003fd 	mov	x29, sp
    100b5f74:	97fffe8a 	bl	100b599c <tf_log>
    100b5f78:	52803b40 	mov	w0, #0x1da                 	// #474
    100b5f7c:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b5f80:	d65f03c0 	ret

00000000100b5f84 <tcr_physical_addr_size_bits>:
    100b5f84:	f2503c1f 	tst	x0, #0xffff000000000000
    100b5f88:	540000e0 	b.eq	100b5fa4 <tcr_physical_addr_size_bits+0x20>  // b.none
    100b5f8c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b5f90:	f0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b5f94:	91303000 	add	x0, x0, #0xc0c
    100b5f98:	910003fd 	mov	x29, sp
    100b5f9c:	52800741 	mov	w1, #0x3a                  	// #58
    100b5fa0:	94000449 	bl	100b70c4 <__assert>
    100b5fa4:	f2540c1f 	tst	x0, #0xf00000000000
    100b5fa8:	54000141 	b.ne	100b5fd0 <tcr_physical_addr_size_bits+0x4c>  // b.any
    100b5fac:	f256041f 	tst	x0, #0xc0000000000
    100b5fb0:	54000141 	b.ne	100b5fd8 <tcr_physical_addr_size_bits+0x54>  // b.any
    100b5fb4:	f258041f 	tst	x0, #0x30000000000
    100b5fb8:	54000141 	b.ne	100b5fe0 <tcr_physical_addr_size_bits+0x5c>  // b.any
    100b5fbc:	f25c0c1f 	tst	x0, #0xf000000000
    100b5fc0:	54000141 	b.ne	100b5fe8 <tcr_physical_addr_size_bits+0x64>  // b.any
    100b5fc4:	f2600c1f 	tst	x0, #0xf00000000
    100b5fc8:	9a9f07e0 	cset	x0, ne  // ne = any
    100b5fcc:	d65f03c0 	ret
    100b5fd0:	d28000a0 	mov	x0, #0x5                   	// #5
    100b5fd4:	d65f03c0 	ret
    100b5fd8:	d2800080 	mov	x0, #0x4                   	// #4
    100b5fdc:	d65f03c0 	ret
    100b5fe0:	d2800060 	mov	x0, #0x3                   	// #3
    100b5fe4:	d65f03c0 	ret
    100b5fe8:	d2800040 	mov	x0, #0x2                   	// #2
    100b5fec:	d65f03c0 	ret

00000000100b5ff0 <xlat_arch_get_max_supported_pa>:
    100b5ff0:	d5380700 	mrs	x0, id_aa64mmfr0_el1
    100b5ff4:	92400c00 	and	x0, x0, #0xf
    100b5ff8:	f100181f 	cmp	x0, #0x6
    100b5ffc:	540000e9 	b.ls	100b6018 <xlat_arch_get_max_supported_pa+0x28>  // b.plast
    100b6000:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b6004:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6008:	91303000 	add	x0, x0, #0xc0c
    100b600c:	910003fd 	mov	x29, sp
    100b6010:	52800c61 	mov	w1, #0x63                  	// #99
    100b6014:	9400042c 	bl	100b70c4 <__assert>
    100b6018:	d0000001 	adrp	x1, 100b8000 <__TEXT_END__>
    100b601c:	912fc021 	add	x1, x1, #0xbf0
    100b6020:	b8607821 	ldr	w1, [x1, x0, lsl #2]
    100b6024:	d2800020 	mov	x0, #0x1                   	// #1
    100b6028:	9ac12000 	lsl	x0, x0, x1
    100b602c:	d1000400 	sub	x0, x0, #0x1
    100b6030:	d65f03c0 	ret

00000000100b6034 <is_dcache_enabled>:
    100b6034:	d5384240 	mrs	x0, currentel
    100b6038:	53020c00 	ubfx	w0, w0, #2, #2
    100b603c:	7100041f 	cmp	w0, #0x1
    100b6040:	54000081 	b.ne	100b6050 <is_dcache_enabled+0x1c>  // b.any
    100b6044:	d5381000 	mrs	x0, sctlr_el1
    100b6048:	53020800 	ubfx	w0, w0, #2, #1
    100b604c:	d65f03c0 	ret
    100b6050:	7100081f 	cmp	w0, #0x2
    100b6054:	54000061 	b.ne	100b6060 <is_dcache_enabled+0x2c>  // b.any
    100b6058:	d53c1000 	mrs	x0, sctlr_el2
    100b605c:	17fffffb 	b	100b6048 <is_dcache_enabled+0x14>
    100b6060:	d53e1000 	mrs	x0, sctlr_el3
    100b6064:	17fffff9 	b	100b6048 <is_dcache_enabled+0x14>

00000000100b6068 <xlat_arch_regime_get_xn_desc>:
    100b6068:	7100041f 	cmp	w0, #0x1
    100b606c:	54000160 	b.eq	100b6098 <xlat_arch_regime_get_xn_desc+0x30>  // b.none
    100b6070:	51000801 	sub	w1, w0, #0x2
    100b6074:	d2e00800 	mov	x0, #0x40000000000000      	// #18014398509481984
    100b6078:	7100043f 	cmp	w1, #0x1
    100b607c:	54000109 	b.ls	100b609c <xlat_arch_regime_get_xn_desc+0x34>  // b.plast
    100b6080:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b6084:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6088:	91303000 	add	x0, x0, #0xc0c
    100b608c:	910003fd 	mov	x29, sp
    100b6090:	52801161 	mov	w1, #0x8b                  	// #139
    100b6094:	9400040c 	bl	100b70c4 <__assert>
    100b6098:	d2e00c00 	mov	x0, #0x60000000000000      	// #27021597764222976
    100b609c:	d65f03c0 	ret

00000000100b60a0 <xlat_arch_current_el>:
    100b60a0:	d5384240 	mrs	x0, currentel
    100b60a4:	53020c00 	ubfx	w0, w0, #2, #2
    100b60a8:	350000e0 	cbnz	w0, 100b60c4 <xlat_arch_current_el+0x24>
    100b60ac:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b60b0:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b60b4:	91303000 	add	x0, x0, #0xc0c
    100b60b8:	910003fd 	mov	x29, sp
    100b60bc:	528018e1 	mov	w1, #0xc7                  	// #199
    100b60c0:	94000401 	bl	100b70c4 <__assert>
    100b60c4:	d65f03c0 	ret

00000000100b60c8 <is_mmu_enabled_ctx>:
    100b60c8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b60cc:	910003fd 	mov	x29, sp
    100b60d0:	b9405800 	ldr	w0, [x0, #88]
    100b60d4:	7100041f 	cmp	w0, #0x1
    100b60d8:	54000161 	b.ne	100b6104 <is_mmu_enabled_ctx+0x3c>  // b.any
    100b60dc:	97fffff1 	bl	100b60a0 <xlat_arch_current_el>
    100b60e0:	350000a0 	cbnz	w0, 100b60f4 <is_mmu_enabled_ctx+0x2c>
    100b60e4:	52800d81 	mov	w1, #0x6c                  	// #108
    100b60e8:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b60ec:	91303000 	add	x0, x0, #0xc0c
    100b60f0:	940003f5 	bl	100b70c4 <__assert>
    100b60f4:	d5381000 	mrs	x0, sctlr_el1
    100b60f8:	12000000 	and	w0, w0, #0x1
    100b60fc:	a8c17bfd 	ldp	x29, x30, [sp], #16
    100b6100:	d65f03c0 	ret
    100b6104:	7100081f 	cmp	w0, #0x2
    100b6108:	54000101 	b.ne	100b6128 <is_mmu_enabled_ctx+0x60>  // b.any
    100b610c:	97ffffe5 	bl	100b60a0 <xlat_arch_current_el>
    100b6110:	7100041f 	cmp	w0, #0x1
    100b6114:	54000068 	b.hi	100b6120 <is_mmu_enabled_ctx+0x58>  // b.pmore
    100b6118:	52800de1 	mov	w1, #0x6f                  	// #111
    100b611c:	17fffff3 	b	100b60e8 <is_mmu_enabled_ctx+0x20>
    100b6120:	d53c1000 	mrs	x0, sctlr_el2
    100b6124:	17fffff5 	b	100b60f8 <is_mmu_enabled_ctx+0x30>
    100b6128:	71000c1f 	cmp	w0, #0x3
    100b612c:	54000060 	b.eq	100b6138 <is_mmu_enabled_ctx+0x70>  // b.none
    100b6130:	52800e41 	mov	w1, #0x72                  	// #114
    100b6134:	17ffffed 	b	100b60e8 <is_mmu_enabled_ctx+0x20>
    100b6138:	97ffffda 	bl	100b60a0 <xlat_arch_current_el>
    100b613c:	7100081f 	cmp	w0, #0x2
    100b6140:	54000068 	b.hi	100b614c <is_mmu_enabled_ctx+0x84>  // b.pmore
    100b6144:	52800e61 	mov	w1, #0x73                  	// #115
    100b6148:	17ffffe8 	b	100b60e8 <is_mmu_enabled_ctx+0x20>
    100b614c:	d53e1000 	mrs	x0, sctlr_el3
    100b6150:	17ffffea 	b	100b60f8 <is_mmu_enabled_ctx+0x30>

00000000100b6154 <setup_mmu_cfg>:
    100b6154:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b6158:	b100049f 	cmn	x4, #0x1
    100b615c:	910003fd 	mov	x29, sp
    100b6160:	a90153f3 	stp	x19, x20, [sp, #16]
    100b6164:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b6168:	540000a1 	b.ne	100b617c <setup_mmu_cfg+0x28>  // b.any
    100b616c:	52801b81 	mov	w1, #0xdc                  	// #220
    100b6170:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6174:	91303000 	add	x0, x0, #0xc0c
    100b6178:	940003d3 	bl	100b70c4 <__assert>
    100b617c:	2a0503f5 	mov	w21, w5
    100b6180:	b2679fe5 	mov	x5, #0xfffffffffe000001    	// #-33554431
    100b6184:	8b050085 	add	x5, x4, x5
    100b6188:	aa0203f6 	mov	x22, x2
    100b618c:	91000493 	add	x19, x4, #0x1
    100b6190:	b2675be2 	mov	x2, #0xfffffe000000        	// #281474943156224
    100b6194:	eb0200bf 	cmp	x5, x2
    100b6198:	54000068 	b.hi	100b61a4 <setup_mmu_cfg+0x50>  // b.pmore
    100b619c:	ea13009f 	tst	x4, x19
    100b61a0:	54000060 	b.eq	100b61ac <setup_mmu_cfg+0x58>  // b.none
    100b61a4:	52801be1 	mov	w1, #0xdf                  	// #223
    100b61a8:	17fffff2 	b	100b6170 <setup_mmu_cfg+0x1c>
    100b61ac:	dac00264 	rbit	x4, x19
    100b61b0:	aa0003f4 	mov	x20, x0
    100b61b4:	dac01084 	clz	x4, x4
    100b61b8:	52800813 	mov	w19, #0x40                  	// #64
    100b61bc:	aa0303e0 	mov	x0, x3
    100b61c0:	4b040273 	sub	w19, w19, w4
    100b61c4:	37080061 	tbnz	w1, #1, 100b61d0 <setup_mmu_cfg+0x7c>
    100b61c8:	5286a001 	mov	w1, #0x3500                	// #13568
    100b61cc:	2a010273 	orr	w19, w19, w1
    100b61d0:	97ffff6d 	bl	100b5f84 <tcr_physical_addr_size_bits>
    100b61d4:	93407e73 	sxtw	x19, w19
    100b61d8:	710006bf 	cmp	w21, #0x1
    100b61dc:	54000161 	b.ne	100b6208 <setup_mmu_cfg+0xb4>  // b.any
    100b61e0:	aa008260 	orr	x0, x19, x0, lsl #32
    100b61e4:	b2690000 	orr	x0, x0, #0x800000
    100b61e8:	d2809fe1 	mov	x1, #0x4ff                 	// #1279
    100b61ec:	f2a00881 	movk	x1, #0x44, lsl #16
    100b61f0:	a9000281 	stp	x1, x0, [x20]
    100b61f4:	f9000a96 	str	x22, [x20, #16]
    100b61f8:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b61fc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b6200:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b6204:	d65f03c0 	ret
    100b6208:	71000abf 	cmp	w21, #0x2
    100b620c:	d370bc00 	lsl	x0, x0, #16
    100b6210:	540000a1 	b.ne	100b6224 <setup_mmu_cfg+0xd0>  // b.any
    100b6214:	aa130000 	orr	x0, x0, x19
    100b6218:	d2b01001 	mov	x1, #0x80800000            	// #2155872256
    100b621c:	aa010000 	orr	x0, x0, x1
    100b6220:	17fffff2 	b	100b61e8 <setup_mmu_cfg+0x94>
    100b6224:	71000ebf 	cmp	w21, #0x3
    100b6228:	54ffff60 	b.eq	100b6214 <setup_mmu_cfg+0xc0>  // b.none
    100b622c:	528020c1 	mov	w1, #0x106                 	// #262
    100b6230:	17ffffd0 	b	100b6170 <setup_mmu_cfg+0x1c>

00000000100b6234 <mmap_add_region>:
    100b6234:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b6238:	910003fd 	mov	x29, sp
    100b623c:	a90187e0 	stp	x0, x1, [sp, #24]
    100b6240:	d2a80000 	mov	x0, #0x40000000            	// #1073741824
    100b6244:	910063e1 	add	x1, sp, #0x18
    100b6248:	f90017e2 	str	x2, [sp, #40]
    100b624c:	b90033e3 	str	w3, [sp, #48]
    100b6250:	f9001fe0 	str	x0, [sp, #56]
    100b6254:	f0000000 	adrp	x0, 100b9000 <__RODATA_END__>
    100b6258:	910ec000 	add	x0, x0, #0x3b0
    100b625c:	94000129 	bl	100b6700 <mmap_add_region_ctx>
    100b6260:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b6264:	d65f03c0 	ret

00000000100b6268 <mmap_add>:
    100b6268:	aa0003e1 	mov	x1, x0
    100b626c:	f0000000 	adrp	x0, 100b9000 <__RODATA_END__>
    100b6270:	910ec000 	add	x0, x0, #0x3b0
    100b6274:	140001c1 	b	100b6978 <mmap_add_ctx>

00000000100b6278 <init_xlat_tables>:
    100b6278:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b627c:	910003fd 	mov	x29, sp
    100b6280:	f9000bf3 	str	x19, [sp, #16]
    100b6284:	f0000013 	adrp	x19, 100b9000 <__RODATA_END__>
    100b6288:	910ec273 	add	x19, x19, #0x3b0
    100b628c:	b9405a60 	ldr	w0, [x19, #88]
    100b6290:	3100041f 	cmn	w0, #0x1
    100b6294:	540000a0 	b.eq	100b62a8 <init_xlat_tables+0x30>  // b.none
    100b6298:	52800c01 	mov	w1, #0x60                  	// #96
    100b629c:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b62a0:	9130e800 	add	x0, x0, #0xc3a
    100b62a4:	94000388 	bl	100b70c4 <__assert>
    100b62a8:	97ffff7e 	bl	100b60a0 <xlat_arch_current_el>
    100b62ac:	7100041f 	cmp	w0, #0x1
    100b62b0:	540000c1 	b.ne	100b62c8 <init_xlat_tables+0x50>  // b.any
    100b62b4:	b9005a60 	str	w0, [x19, #88]
    100b62b8:	aa1303e0 	mov	x0, x19
    100b62bc:	f9400bf3 	ldr	x19, [sp, #16]
    100b62c0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b62c4:	140001bc 	b	100b69b4 <init_xlat_tables_ctx>
    100b62c8:	7100081f 	cmp	w0, #0x2
    100b62cc:	54ffff40 	b.eq	100b62b4 <init_xlat_tables+0x3c>  // b.none
    100b62d0:	71000c1f 	cmp	w0, #0x3
    100b62d4:	54ffff00 	b.eq	100b62b4 <init_xlat_tables+0x3c>  // b.none
    100b62d8:	52800d21 	mov	w1, #0x69                  	// #105
    100b62dc:	17fffff0 	b	100b629c <init_xlat_tables+0x24>

00000000100b62e0 <enable_mmu_el1>:
    100b62e0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b62e4:	52800025 	mov	w5, #0x1                   	// #1
    100b62e8:	910003fd 	mov	x29, sp
    100b62ec:	f9000bf3 	str	x19, [sp, #16]
    100b62f0:	2a0003f3 	mov	w19, w0
    100b62f4:	f0000000 	adrp	x0, 100b9000 <__RODATA_END__>
    100b62f8:	910ec000 	add	x0, x0, #0x3b0
    100b62fc:	2a1303e1 	mov	w1, w19
    100b6300:	f9400404 	ldr	x4, [x0, #8]
    100b6304:	f9401802 	ldr	x2, [x0, #48]
    100b6308:	f9402003 	ldr	x3, [x0, #64]
    100b630c:	f0000020 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b6310:	911d2000 	add	x0, x0, #0x748
    100b6314:	97ffff90 	bl	100b6154 <setup_mmu_cfg>
    100b6318:	2a1303e0 	mov	w0, w19
    100b631c:	f9400bf3 	ldr	x19, [sp, #16]
    100b6320:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b6324:	1400034c 	b	100b7054 <enable_mmu_direct_el1>

00000000100b6328 <xlat_clean_dcache_range>:
    100b6328:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b632c:	910003fd 	mov	x29, sp
    100b6330:	a90153f3 	stp	x19, x20, [sp, #16]
    100b6334:	aa0003f3 	mov	x19, x0
    100b6338:	aa0103f4 	mov	x20, x1
    100b633c:	97ffff3e 	bl	100b6034 <is_dcache_enabled>
    100b6340:	72001c1f 	tst	w0, #0xff
    100b6344:	540000c0 	b.eq	100b635c <xlat_clean_dcache_range+0x34>  // b.none
    100b6348:	aa1403e1 	mov	x1, x20
    100b634c:	aa1303e0 	mov	x0, x19
    100b6350:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b6354:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b6358:	14000269 	b	100b6cfc <clean_dcache_range>
    100b635c:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b6360:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b6364:	d65f03c0 	ret

00000000100b6368 <xlat_desc>:
    100b6368:	12800104 	mov	w4, #0xfffffff7            	// #-9
    100b636c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b6370:	92800005 	mov	x5, #0xffffffffffffffff    	// #-1
    100b6374:	1b047c64 	mul	w4, w3, w4
    100b6378:	910003fd 	mov	x29, sp
    100b637c:	11009c84 	add	w4, w4, #0x27
    100b6380:	a90153f3 	stp	x19, x20, [sp, #16]
    100b6384:	9ac420a4 	lsl	x4, x5, x4
    100b6388:	ea24005f 	bics	xzr, x2, x4
    100b638c:	540000a0 	b.eq	100b63a0 <xlat_desc+0x38>  // b.none
    100b6390:	52800e21 	mov	w1, #0x71                  	// #113
    100b6394:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6398:	9133c800 	add	x0, x0, #0xcf2
    100b639c:	9400034a 	bl	100b70c4 <__assert>
    100b63a0:	71000c7f 	cmp	w3, #0x3
    100b63a4:	d37f7c33 	ubfiz	x19, x1, #1, #32
    100b63a8:	927b0273 	and	x19, x19, #0x20
    100b63ac:	d2800063 	mov	x3, #0x3                   	// #3
    100b63b0:	9a9f0463 	csinc	x3, x3, xzr, eq  // eq = none
    100b63b4:	f27d003f 	tst	x1, #0x8
    100b63b8:	aa020262 	orr	x2, x19, x2
    100b63bc:	b9405800 	ldr	w0, [x0, #88]
    100b63c0:	d2801013 	mov	x19, #0x80                  	// #128
    100b63c4:	9a9313f3 	csel	x19, xzr, x19, ne  // ne = any
    100b63c8:	aa130073 	orr	x19, x3, x19
    100b63cc:	7100041f 	cmp	w0, #0x1
    100b63d0:	aa020273 	orr	x19, x19, x2
    100b63d4:	540001a1 	b.ne	100b6408 <xlat_desc+0xa0>  // b.any
    100b63d8:	b2760262 	orr	x2, x19, #0x400
    100b63dc:	d2808803 	mov	x3, #0x440                 	// #1088
    100b63e0:	f27a003f 	tst	x1, #0x40
    100b63e4:	aa030273 	orr	x19, x19, x3
    100b63e8:	9a821273 	csel	x19, x19, x2, ne  // ne = any
    100b63ec:	72000834 	ands	w20, w1, #0x7
    100b63f0:	540001c1 	b.ne	100b6428 <xlat_desc+0xc0>  // b.any
    100b63f4:	97ffff1d 	bl	100b6068 <xlat_arch_regime_get_xn_desc>
    100b63f8:	aa000260 	orr	x0, x19, x0
    100b63fc:	d2804093 	mov	x19, #0x204                 	// #516
    100b6400:	aa000260 	orr	x0, x19, x0
    100b6404:	14000011 	b	100b6448 <xlat_desc+0xe0>
    100b6408:	51000802 	sub	w2, w0, #0x2
    100b640c:	7100045f 	cmp	w2, #0x1
    100b6410:	54000069 	b.ls	100b641c <xlat_desc+0xb4>  // b.plast
    100b6414:	52801281 	mov	w1, #0x94                  	// #148
    100b6418:	17ffffdf 	b	100b6394 <xlat_desc+0x2c>
    100b641c:	d2808802 	mov	x2, #0x440                 	// #1088
    100b6420:	aa020273 	orr	x19, x19, x2
    100b6424:	17fffff2 	b	100b63ec <xlat_desc+0x84>
    100b6428:	52800502 	mov	w2, #0x28                  	// #40
    100b642c:	6a02003f 	tst	w1, w2
    100b6430:	54000060 	b.eq	100b643c <xlat_desc+0xd4>  // b.none
    100b6434:	97ffff0d 	bl	100b6068 <xlat_arch_regime_get_xn_desc>
    100b6438:	aa000273 	orr	x19, x19, x0
    100b643c:	71000a9f 	cmp	w20, #0x2
    100b6440:	540000a1 	b.ne	100b6454 <xlat_desc+0xec>  // b.any
    100b6444:	b2780660 	orr	x0, x19, #0x300
    100b6448:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b644c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b6450:	d65f03c0 	ret
    100b6454:	7100069f 	cmp	w20, #0x1
    100b6458:	54000060 	b.eq	100b6464 <xlat_desc+0xfc>  // b.none
    100b645c:	528018e1 	mov	w1, #0xc7                  	// #199
    100b6460:	17ffffcd 	b	100b6394 <xlat_desc+0x2c>
    100b6464:	d2804100 	mov	x0, #0x208                 	// #520
    100b6468:	17ffffe6 	b	100b6400 <xlat_desc+0x98>

00000000100b646c <xlat_tables_map_region>:
    100b646c:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    100b6470:	910003fd 	mov	x29, sp
    100b6474:	a90153f3 	stp	x19, x20, [sp, #16]
    100b6478:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b647c:	aa0003f5 	mov	x21, x0
    100b6480:	b9405000 	ldr	w0, [x0, #80]
    100b6484:	a90363f7 	stp	x23, x24, [sp, #48]
    100b6488:	6b05001f 	cmp	w0, w5
    100b648c:	a9046bf9 	stp	x25, x26, [sp, #64]
    100b6490:	a90573fb 	stp	x27, x28, [sp, #80]
    100b6494:	b9006fe4 	str	w4, [sp, #108]
    100b6498:	54000088 	b.hi	100b64a8 <xlat_tables_map_region+0x3c>  // b.pmore
    100b649c:	2a0503fa 	mov	w26, w5
    100b64a0:	71000cbf 	cmp	w5, #0x3
    100b64a4:	540000a9 	b.ls	100b64b8 <xlat_tables_map_region+0x4c>  // b.plast
    100b64a8:	52804081 	mov	w1, #0x204                 	// #516
    100b64ac:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b64b0:	9133c800 	add	x0, x0, #0xcf2
    100b64b4:	94000304 	bl	100b70c4 <__assert>
    100b64b8:	a940dc20 	ldp	x0, x23, [x1, #8]
    100b64bc:	12800116 	mov	w22, #0xfffffff7            	// #-9
    100b64c0:	aa0103f4 	mov	x20, x1
    100b64c4:	d2800039 	mov	x25, #0x1                   	// #1
    100b64c8:	1b167cb6 	mul	w22, w5, w22
    100b64cc:	11009ed6 	add	w22, w22, #0x27
    100b64d0:	8b170017 	add	x23, x0, x23
    100b64d4:	eb02001f 	cmp	x0, x2
    100b64d8:	d10006e1 	sub	x1, x23, #0x1
    100b64dc:	f9003be1 	str	x1, [sp, #112]
    100b64e0:	9ad62339 	lsl	x25, x25, x22
    100b64e4:	54000169 	b.ls	100b6510 <xlat_tables_map_region+0xa4>  // b.plast
    100b64e8:	cb1903f3 	neg	x19, x25
    100b64ec:	8a000273 	and	x19, x19, x0
    100b64f0:	b9406fe0 	ldr	w0, [sp, #108]
    100b64f4:	cb020262 	sub	x2, x19, x2
    100b64f8:	9ad62442 	lsr	x2, x2, x22
    100b64fc:	2a0203f7 	mov	w23, w2
    100b6500:	6b00005f 	cmp	w2, w0
    100b6504:	540000a3 	b.cc	100b6518 <xlat_tables_map_region+0xac>  // b.lo, b.ul, b.last
    100b6508:	528042e1 	mov	w1, #0x217                 	// #535
    100b650c:	17ffffe8 	b	100b64ac <xlat_tables_map_region+0x40>
    100b6510:	aa0203f3 	mov	x19, x2
    100b6514:	52800017 	mov	w23, #0x0                   	// #0
    100b6518:	92800018 	mov	x24, #0xffffffffffffffff    	// #-1
    100b651c:	1100075c 	add	w28, w26, #0x1
    100b6520:	9ad62318 	lsl	x24, x24, x22
    100b6524:	aa3803e0 	mvn	x0, x24
    100b6528:	8b374c78 	add	x24, x3, w23, uxtw #3
    100b652c:	f90043e0 	str	x0, [sp, #128]
    100b6530:	b9406fe0 	ldr	w0, [sp, #108]
    100b6534:	6b0002ff 	cmp	w23, w0
    100b6538:	54000822 	b.cs	100b663c <xlat_tables_map_region+0x1d0>  // b.hs, b.nlast
    100b653c:	a9409280 	ldp	x0, x4, [x20, #8]
    100b6540:	8b130322 	add	x2, x25, x19
    100b6544:	f9400308 	ldr	x8, [x24]
    100b6548:	f9003fe2 	str	x2, [sp, #120]
    100b654c:	d100045b 	sub	x27, x2, #0x1
    100b6550:	12000501 	and	w1, w8, #0x3
    100b6554:	8b040004 	add	x4, x0, x4
    100b6558:	eb13001f 	cmp	x0, x19
    100b655c:	d1000484 	sub	x4, x4, #0x1
    100b6560:	54000408 	b.hi	100b65e0 <xlat_tables_map_region+0x174>  // b.pmore
    100b6564:	eb1b009f 	cmp	x4, x27
    100b6568:	540003c3 	b.cc	100b65e0 <xlat_tables_map_region+0x174>  // b.lo, b.ul, b.last
    100b656c:	f9400282 	ldr	x2, [x20]
    100b6570:	71000f5f 	cmp	w26, #0x3
    100b6574:	cb000042 	sub	x2, x2, x0
    100b6578:	8b130042 	add	x2, x2, x19
    100b657c:	540000c1 	b.ne	100b6594 <xlat_tables_map_region+0x128>  // b.any
    100b6580:	71000c3f 	cmp	w1, #0x3
    100b6584:	54000520 	b.eq	100b6628 <xlat_tables_map_region+0x1bc>  // b.none
    100b6588:	34000461 	cbz	w1, 100b6614 <xlat_tables_map_region+0x1a8>
    100b658c:	52803361 	mov	w1, #0x19b                 	// #411
    100b6590:	17ffffc7 	b	100b64ac <xlat_tables_map_region+0x40>
    100b6594:	71000c3f 	cmp	w1, #0x3
    100b6598:	54000940 	b.eq	100b66c0 <xlat_tables_map_region+0x254>  // b.none
    100b659c:	350001a1 	cbnz	w1, 100b65d0 <xlat_tables_map_region+0x164>
    100b65a0:	f94043e0 	ldr	x0, [sp, #128]
    100b65a4:	ea00005f 	tst	x2, x0
    100b65a8:	540000a1 	b.ne	100b65bc <xlat_tables_map_region+0x150>  // b.any
    100b65ac:	3400009a 	cbz	w26, 100b65bc <xlat_tables_map_region+0x150>
    100b65b0:	f9401280 	ldr	x0, [x20, #32]
    100b65b4:	9ad62400 	lsr	x0, x0, x22
    100b65b8:	b50002e0 	cbnz	x0, 100b6614 <xlat_tables_map_region+0x1a8>
    100b65bc:	294506a0 	ldp	w0, w1, [x21, #40]
    100b65c0:	6b00003f 	cmp	w1, w0
    100b65c4:	5400040b 	b.lt	100b6644 <xlat_tables_map_region+0x1d8>  // b.tstop
    100b65c8:	52800c01 	mov	w1, #0x60                  	// #96
    100b65cc:	17ffffb8 	b	100b64ac <xlat_tables_map_region+0x40>
    100b65d0:	7100043f 	cmp	w1, #0x1
    100b65d4:	540002a0 	b.eq	100b6628 <xlat_tables_map_region+0x1bc>  // b.none
    100b65d8:	52803841 	mov	w1, #0x1c2                 	// #450
    100b65dc:	17ffffb4 	b	100b64ac <xlat_tables_map_region+0x40>
    100b65e0:	eb1b001f 	cmp	x0, x27
    100b65e4:	54000069 	b.ls	100b65f0 <xlat_tables_map_region+0x184>  // b.plast
    100b65e8:	eb04027f 	cmp	x19, x4
    100b65ec:	540001e8 	b.hi	100b6628 <xlat_tables_map_region+0x1bc>  // b.pmore
    100b65f0:	71000f5f 	cmp	w26, #0x3
    100b65f4:	54000061 	b.ne	100b6600 <xlat_tables_map_region+0x194>  // b.any
    100b65f8:	52803ae1 	mov	w1, #0x1d7                 	// #471
    100b65fc:	17ffffac 	b	100b64ac <xlat_tables_map_region+0x40>
    100b6600:	34fffde1 	cbz	w1, 100b65bc <xlat_tables_map_region+0x150>
    100b6604:	71000c3f 	cmp	w1, #0x3
    100b6608:	540005c0 	b.eq	100b66c0 <xlat_tables_map_region+0x254>  // b.none
    100b660c:	52803c41 	mov	w1, #0x1e2                 	// #482
    100b6610:	17ffffa7 	b	100b64ac <xlat_tables_map_region+0x40>
    100b6614:	b9401a81 	ldr	w1, [x20, #24]
    100b6618:	2a1a03e3 	mov	w3, w26
    100b661c:	aa1503e0 	mov	x0, x21
    100b6620:	97ffff52 	bl	100b6368 <xlat_desc>
    100b6624:	f9000300 	str	x0, [x24]
    100b6628:	a9474fe0 	ldp	x0, x19, [sp, #112]
    100b662c:	110006f7 	add	w23, w23, #0x1
    100b6630:	91002318 	add	x24, x24, #0x8
    100b6634:	eb13001f 	cmp	x0, x19
    100b6638:	54fff7c8 	b.hi	100b6530 <xlat_tables_map_region+0xc4>  // b.pmore
    100b663c:	d1000673 	sub	x19, x19, #0x1
    100b6640:	14000018 	b	100b66a0 <xlat_tables_map_region+0x234>
    100b6644:	f94012a8 	ldr	x8, [x21, #32]
    100b6648:	11000420 	add	w0, w1, #0x1
    100b664c:	b9002ea0 	str	w0, [x21, #44]
    100b6650:	93747c21 	sbfiz	x1, x1, #12, #32
    100b6654:	ab010108 	adds	x8, x8, x1
    100b6658:	54000240 	b.eq	100b66a0 <xlat_tables_map_region+0x234>  // b.none
    100b665c:	b2400500 	orr	x0, x8, #0x3
    100b6660:	f9000300 	str	x0, [x24]
    100b6664:	aa0803e3 	mov	x3, x8
    100b6668:	aa1303e2 	mov	x2, x19
    100b666c:	2a1c03e5 	mov	w5, w28
    100b6670:	52804004 	mov	w4, #0x200                 	// #512
    100b6674:	aa1403e1 	mov	x1, x20
    100b6678:	aa1503e0 	mov	x0, x21
    100b667c:	f90047e8 	str	x8, [sp, #136]
    100b6680:	97ffff7b 	bl	100b646c <xlat_tables_map_region>
    100b6684:	f94047e8 	ldr	x8, [sp, #136]
    100b6688:	aa0003f3 	mov	x19, x0
    100b668c:	d2820001 	mov	x1, #0x1000                	// #4096
    100b6690:	aa0803e0 	mov	x0, x8
    100b6694:	97ffff25 	bl	100b6328 <xlat_clean_dcache_range>
    100b6698:	eb13037f 	cmp	x27, x19
    100b669c:	54fffc60 	b.eq	100b6628 <xlat_tables_map_region+0x1bc>  // b.none
    100b66a0:	aa1303e0 	mov	x0, x19
    100b66a4:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b66a8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b66ac:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b66b0:	a9446bf9 	ldp	x25, x26, [sp, #64]
    100b66b4:	a94573fb 	ldp	x27, x28, [sp, #80]
    100b66b8:	a8c97bfd 	ldp	x29, x30, [sp], #144
    100b66bc:	d65f03c0 	ret
    100b66c0:	92748d08 	and	x8, x8, #0xfffffffff000
    100b66c4:	aa1303e2 	mov	x2, x19
    100b66c8:	aa0803e3 	mov	x3, x8
    100b66cc:	2a1c03e5 	mov	w5, w28
    100b66d0:	52804004 	mov	w4, #0x200                 	// #512
    100b66d4:	aa1403e1 	mov	x1, x20
    100b66d8:	aa1503e0 	mov	x0, x21
    100b66dc:	f90047e8 	str	x8, [sp, #136]
    100b66e0:	97ffff63 	bl	100b646c <xlat_tables_map_region>
    100b66e4:	aa0003f3 	mov	x19, x0
    100b66e8:	f94047e8 	ldr	x8, [sp, #136]
    100b66ec:	d2820001 	mov	x1, #0x1000                	// #4096
    100b66f0:	aa0803e0 	mov	x0, x8
    100b66f4:	97ffff0d 	bl	100b6328 <xlat_clean_dcache_range>
    100b66f8:	eb1b027f 	cmp	x19, x27
    100b66fc:	17ffffe8 	b	100b669c <xlat_tables_map_region+0x230>

00000000100b6700 <mmap_add_region_ctx>:
    100b6700:	f9400824 	ldr	x4, [x1, #16]
    100b6704:	b4001384 	cbz	x4, 100b6974 <mmap_add_region_ctx+0x274>
    100b6708:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    100b670c:	910003fd 	mov	x29, sp
    100b6710:	a90153f3 	stp	x19, x20, [sp, #16]
    100b6714:	aa0003f4 	mov	x20, x0
    100b6718:	39415000 	ldrb	w0, [x0, #84]
    100b671c:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b6720:	a90363f7 	stp	x23, x24, [sp, #48]
    100b6724:	aa0103f7 	mov	x23, x1
    100b6728:	340000a0 	cbz	w0, 100b673c <mmap_add_region_ctx+0x3c>
    100b672c:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6730:	9133c800 	add	x0, x0, #0xcf2
    100b6734:	52805c41 	mov	w1, #0x2e2                 	// #738
    100b6738:	94000263 	bl	100b70c4 <__assert>
    100b673c:	a9400025 	ldp	x5, x0, [x1]
    100b6740:	f9401021 	ldr	x1, [x1, #32]
    100b6744:	aa0400a2 	orr	x2, x5, x4
    100b6748:	aa000042 	orr	x2, x2, x0
    100b674c:	f2402c5f 	tst	x2, #0xfff
    100b6750:	54000b01 	b.ne	100b68b0 <mmap_add_region_ctx+0x1b0>  // b.any
    100b6754:	f148003f 	cmp	x1, #0x200, lsl #12
    100b6758:	d2a80002 	mov	x2, #0x40000000            	// #1073741824
    100b675c:	fa421024 	ccmp	x1, x2, #0x4, ne  // ne = any
    100b6760:	54000060 	b.eq	100b676c <mmap_add_region_ctx+0x6c>  // b.none
    100b6764:	f140043f 	cmp	x1, #0x1, lsl #12
    100b6768:	54000a41 	b.ne	100b68b0 <mmap_add_region_ctx+0x1b0>  // b.any
    100b676c:	8b0400b6 	add	x22, x5, x4
    100b6770:	8b000089 	add	x9, x4, x0
    100b6774:	d10006d6 	sub	x22, x22, #0x1
    100b6778:	d1000535 	sub	x21, x9, #0x1
    100b677c:	eb1600bf 	cmp	x5, x22
    100b6780:	fa559002 	ccmp	x0, x21, #0x2, ls  // ls = plast
    100b6784:	54000a68 	b.hi	100b68d0 <mmap_add_region_ctx+0x1d0>  // b.pmore
    100b6788:	f9400681 	ldr	x1, [x20, #8]
    100b678c:	eb0102bf 	cmp	x21, x1
    100b6790:	54000a08 	b.hi	100b68d0 <mmap_add_region_ctx+0x1d0>  // b.pmore
    100b6794:	f9400281 	ldr	x1, [x20]
    100b6798:	eb0102df 	cmp	x22, x1
    100b679c:	540009a8 	b.hi	100b68d0 <mmap_add_region_ctx+0x1d0>  // b.pmore
    100b67a0:	b9401a98 	ldr	w24, [x20, #24]
    100b67a4:	52800501 	mov	w1, #0x28                  	// #40
    100b67a8:	f9400a82 	ldr	x2, [x20, #16]
    100b67ac:	9b210b18 	smaddl	x24, w24, w1, x2
    100b67b0:	f85e8301 	ldur	x1, [x24, #-24]
    100b67b4:	b5000921 	cbnz	x1, 100b68d8 <mmap_add_region_ctx+0x1d8>
    100b67b8:	aa0203e6 	mov	x6, x2
    100b67bc:	cb05000a 	sub	x10, x0, x5
    100b67c0:	f94008c3 	ldr	x3, [x6, #16]
    100b67c4:	b50002e3 	cbnz	x3, 100b6820 <mmap_add_region_ctx+0x120>
    100b67c8:	aa0203f3 	mov	x19, x2
    100b67cc:	a9408660 	ldp	x0, x1, [x19, #8]
    100b67d0:	8b000020 	add	x0, x1, x0
    100b67d4:	d1000400 	sub	x0, x0, #0x1
    100b67d8:	eb15001f 	cmp	x0, x21
    100b67dc:	54000042 	b.cs	100b67e4 <mmap_add_region_ctx+0xe4>  // b.hs, b.nlast
    100b67e0:	b5000801 	cbnz	x1, 100b68e0 <mmap_add_region_ctx+0x1e0>
    100b67e4:	a9408261 	ldp	x1, x0, [x19, #8]
    100b67e8:	8b010001 	add	x1, x0, x1
    100b67ec:	eb01013f 	cmp	x9, x1
    100b67f0:	54000081 	b.ne	100b6800 <mmap_add_region_ctx+0x100>  // b.any
    100b67f4:	b4000060 	cbz	x0, 100b6800 <mmap_add_region_ctx+0x100>
    100b67f8:	eb00009f 	cmp	x4, x0
    100b67fc:	54000768 	b.hi	100b68e8 <mmap_add_region_ctx+0x1e8>  // b.pmore
    100b6800:	f9400840 	ldr	x0, [x2, #16]
    100b6804:	b40009c0 	cbz	x0, 100b693c <mmap_add_region_ctx+0x23c>
    100b6808:	eb18005f 	cmp	x2, x24
    100b680c:	54000723 	b.cc	100b68f0 <mmap_add_region_ctx+0x1f0>  // b.lo, b.ul, b.last
    100b6810:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6814:	9133c800 	add	x0, x0, #0xcf2
    100b6818:	52806341 	mov	w1, #0x31a                 	// #794
    100b681c:	9400022a 	bl	100b70c4 <__assert>
    100b6820:	a94004c8 	ldp	x8, x1, [x6]
    100b6824:	8b030027 	add	x7, x1, x3
    100b6828:	eb01001f 	cmp	x0, x1
    100b682c:	d10004e7 	sub	x7, x7, #0x1
    100b6830:	540001c3 	b.cc	100b6868 <mmap_add_region_ctx+0x168>  // b.lo, b.ul, b.last
    100b6834:	eb0702bf 	cmp	x21, x7
    100b6838:	54000069 	b.ls	100b6844 <mmap_add_region_ctx+0x144>  // b.plast
    100b683c:	eb01001f 	cmp	x0, x1
    100b6840:	54000181 	b.ne	100b6870 <mmap_add_region_ctx+0x170>  // b.any
    100b6844:	cb080028 	sub	x8, x1, x8
    100b6848:	eb0a011f 	cmp	x8, x10
    100b684c:	540000a1 	b.ne	100b6860 <mmap_add_region_ctx+0x160>  // b.any
    100b6850:	eb01001f 	cmp	x0, x1
    100b6854:	54000261 	b.ne	100b68a0 <mmap_add_region_ctx+0x1a0>  // b.any
    100b6858:	eb03009f 	cmp	x4, x3
    100b685c:	54000221 	b.ne	100b68a0 <mmap_add_region_ctx+0x1a0>  // b.any
    100b6860:	12800001 	mov	w1, #0xffffffff            	// #-1
    100b6864:	14000014 	b	100b68b4 <mmap_add_region_ctx+0x1b4>
    100b6868:	eb0702bf 	cmp	x21, x7
    100b686c:	54fffec2 	b.cs	100b6844 <mmap_add_region_ctx+0x144>  // b.hs, b.nlast
    100b6870:	eb0802df 	cmp	x22, x8
    100b6874:	54000783 	b.cc	100b6964 <mmap_add_region_ctx+0x264>  // b.lo, b.ul, b.last
    100b6878:	8b080063 	add	x3, x3, x8
    100b687c:	d1000463 	sub	x3, x3, #0x1
    100b6880:	eb0300bf 	cmp	x5, x3
    100b6884:	1a9f97e3 	cset	w3, hi  // hi = pmore
    100b6888:	eb0102bf 	cmp	x21, x1
    100b688c:	540000e3 	b.cc	100b68a8 <mmap_add_region_ctx+0x1a8>  // b.lo, b.ul, b.last
    100b6890:	eb07001f 	cmp	x0, x7
    100b6894:	1a9f97e1 	cset	w1, hi  // hi = pmore
    100b6898:	6a03003f 	tst	w1, w3
    100b689c:	54fffe20 	b.eq	100b6860 <mmap_add_region_ctx+0x160>  // b.none
    100b68a0:	9100a0c6 	add	x6, x6, #0x28
    100b68a4:	17ffffc7 	b	100b67c0 <mmap_add_region_ctx+0xc0>
    100b68a8:	52800021 	mov	w1, #0x1                   	// #1
    100b68ac:	17fffffb 	b	100b6898 <mmap_add_region_ctx+0x198>
    100b68b0:	128002a1 	mov	w1, #0xffffffea            	// #-22
    100b68b4:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b68b8:	91331c00 	add	x0, x0, #0xcc7
    100b68bc:	97fffc38 	bl	100b599c <tf_log>
    100b68c0:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b68c4:	9133c800 	add	x0, x0, #0xcf2
    100b68c8:	52805ce1 	mov	w1, #0x2e7                 	// #743
    100b68cc:	940001fe 	bl	100b70c4 <__assert>
    100b68d0:	12800421 	mov	w1, #0xffffffde            	// #-34
    100b68d4:	17fffff8 	b	100b68b4 <mmap_add_region_ctx+0x1b4>
    100b68d8:	12800161 	mov	w1, #0xfffffff4            	// #-12
    100b68dc:	17fffff6 	b	100b68b4 <mmap_add_region_ctx+0x1b4>
    100b68e0:	9100a273 	add	x19, x19, #0x28
    100b68e4:	17ffffba 	b	100b67cc <mmap_add_region_ctx+0xcc>
    100b68e8:	9100a273 	add	x19, x19, #0x28
    100b68ec:	17ffffbe 	b	100b67e4 <mmap_add_region_ctx+0xe4>
    100b68f0:	9100a042 	add	x2, x2, #0x28
    100b68f4:	17ffffc3 	b	100b6800 <mmap_add_region_ctx+0x100>
    100b68f8:	d2800502 	mov	x2, #0x28                  	// #40
    100b68fc:	aa1703e1 	mov	x1, x23
    100b6900:	aa1303e0 	mov	x0, x19
    100b6904:	94000209 	bl	100b7128 <memcpy>
    100b6908:	f9402280 	ldr	x0, [x20, #64]
    100b690c:	eb16001f 	cmp	x0, x22
    100b6910:	54000042 	b.cs	100b6918 <mmap_add_region_ctx+0x218>  // b.hs, b.nlast
    100b6914:	f9002296 	str	x22, [x20, #64]
    100b6918:	f9402680 	ldr	x0, [x20, #72]
    100b691c:	eb15001f 	cmp	x0, x21
    100b6920:	54000042 	b.cs	100b6928 <mmap_add_region_ctx+0x228>  // b.hs, b.nlast
    100b6924:	f9002695 	str	x21, [x20, #72]
    100b6928:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b692c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b6930:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b6934:	a8c47bfd 	ldp	x29, x30, [sp], #64
    100b6938:	d65f03c0 	ret
    100b693c:	cb130042 	sub	x2, x2, x19
    100b6940:	aa1303e1 	mov	x1, x19
    100b6944:	9100a260 	add	x0, x19, #0x28
    100b6948:	94000200 	bl	100b7148 <memmove>
    100b694c:	f9400b00 	ldr	x0, [x24, #16]
    100b6950:	b4fffd40 	cbz	x0, 100b68f8 <mmap_add_region_ctx+0x1f8>
    100b6954:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6958:	9133c800 	add	x0, x0, #0xcf2
    100b695c:	528064c1 	mov	w1, #0x326                 	// #806
    100b6960:	940001d9 	bl	100b70c4 <__assert>
    100b6964:	eb0102bf 	cmp	x21, x1
    100b6968:	54fff9c3 	b.cc	100b68a0 <mmap_add_region_ctx+0x1a0>  // b.lo, b.ul, b.last
    100b696c:	52800023 	mov	w3, #0x1                   	// #1
    100b6970:	17ffffc8 	b	100b6890 <mmap_add_region_ctx+0x190>
    100b6974:	d65f03c0 	ret

00000000100b6978 <mmap_add_ctx>:
    100b6978:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b697c:	910003fd 	mov	x29, sp
    100b6980:	a90153f3 	stp	x19, x20, [sp, #16]
    100b6984:	aa0003f4 	mov	x20, x0
    100b6988:	aa0103f3 	mov	x19, x1
    100b698c:	f9401260 	ldr	x0, [x19, #32]
    100b6990:	b5000080 	cbnz	x0, 100b69a0 <mmap_add_ctx+0x28>
    100b6994:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b6998:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b699c:	d65f03c0 	ret
    100b69a0:	aa1303e1 	mov	x1, x19
    100b69a4:	aa1403e0 	mov	x0, x20
    100b69a8:	9100a273 	add	x19, x19, #0x28
    100b69ac:	97ffff55 	bl	100b6700 <mmap_add_region_ctx>
    100b69b0:	17fffff7 	b	100b698c <mmap_add_ctx+0x14>

00000000100b69b4 <init_xlat_tables_ctx>:
    100b69b4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    100b69b8:	910003fd 	mov	x29, sp
    100b69bc:	a90153f3 	stp	x19, x20, [sp, #16]
    100b69c0:	f90013f5 	str	x21, [sp, #32]
    100b69c4:	b50000a0 	cbnz	x0, 100b69d8 <init_xlat_tables_ctx+0x24>
    100b69c8:	52808e81 	mov	w1, #0x474                 	// #1140
    100b69cc:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b69d0:	9133c800 	add	x0, x0, #0xcf2
    100b69d4:	940001bc 	bl	100b70c4 <__assert>
    100b69d8:	39415001 	ldrb	w1, [x0, #84]
    100b69dc:	aa0003f3 	mov	x19, x0
    100b69e0:	34000061 	cbz	w1, 100b69ec <init_xlat_tables_ctx+0x38>
    100b69e4:	52808ea1 	mov	w1, #0x475                 	// #1141
    100b69e8:	17fffff9 	b	100b69cc <init_xlat_tables_ctx+0x18>
    100b69ec:	b9405801 	ldr	w1, [x0, #88]
    100b69f0:	51000421 	sub	w1, w1, #0x1
    100b69f4:	7100083f 	cmp	w1, #0x2
    100b69f8:	54000069 	b.ls	100b6a04 <init_xlat_tables_ctx+0x50>  // b.plast
    100b69fc:	52808f01 	mov	w1, #0x478                 	// #1144
    100b6a00:	17fffff3 	b	100b69cc <init_xlat_tables_ctx+0x18>
    100b6a04:	97fffdb1 	bl	100b60c8 <is_mmu_enabled_ctx>
    100b6a08:	72001c1f 	tst	w0, #0xff
    100b6a0c:	54000060 	b.eq	100b6a18 <init_xlat_tables_ctx+0x64>  // b.none
    100b6a10:	52808f21 	mov	w1, #0x479                 	// #1145
    100b6a14:	17ffffee 	b	100b69cc <init_xlat_tables_ctx+0x18>
    100b6a18:	f9400a74 	ldr	x20, [x19, #16]
    100b6a1c:	aa1403e0 	mov	x0, x20
    100b6a20:	9400004e 	bl	100b6b58 <xlat_mmap_print>
    100b6a24:	b9403a61 	ldr	w1, [x19, #56]
    100b6a28:	d2800000 	mov	x0, #0x0                   	// #0
    100b6a2c:	6b00003f 	cmp	w1, w0
    100b6a30:	540001a8 	b.hi	100b6a64 <init_xlat_tables_ctx+0xb0>  // b.pmore
    100b6a34:	b9402a63 	ldr	w3, [x19, #40]
    100b6a38:	d2800000 	mov	x0, #0x0                   	// #0
    100b6a3c:	6b00007f 	cmp	w3, w0
    100b6a40:	540001ac 	b.gt	100b6a74 <init_xlat_tables_ctx+0xc0>
    100b6a44:	f9400a80 	ldr	x0, [x20, #16]
    100b6a48:	b5000280 	cbnz	x0, 100b6a98 <init_xlat_tables_ctx+0xe4>
    100b6a4c:	f9400274 	ldr	x20, [x19]
    100b6a50:	97fffd68 	bl	100b5ff0 <xlat_arch_get_max_supported_pa>
    100b6a54:	eb00029f 	cmp	x20, x0
    100b6a58:	540005a9 	b.ls	100b6b0c <init_xlat_tables_ctx+0x158>  // b.plast
    100b6a5c:	528093c1 	mov	w1, #0x49e                 	// #1182
    100b6a60:	17ffffdb 	b	100b69cc <init_xlat_tables_ctx+0x18>
    100b6a64:	f9401a62 	ldr	x2, [x19, #48]
    100b6a68:	f820785f 	str	xzr, [x2, x0, lsl #3]
    100b6a6c:	91000400 	add	x0, x0, #0x1
    100b6a70:	17ffffef 	b	100b6a2c <init_xlat_tables_ctx+0x78>
    100b6a74:	f9401262 	ldr	x2, [x19, #32]
    100b6a78:	d2800001 	mov	x1, #0x0                   	// #0
    100b6a7c:	8b003042 	add	x2, x2, x0, lsl #12
    100b6a80:	f821785f 	str	xzr, [x2, x1, lsl #3]
    100b6a84:	91000421 	add	x1, x1, #0x1
    100b6a88:	f108003f 	cmp	x1, #0x200
    100b6a8c:	54ffffa1 	b.ne	100b6a80 <init_xlat_tables_ctx+0xcc>  // b.any
    100b6a90:	91000400 	add	x0, x0, #0x1
    100b6a94:	17ffffea 	b	100b6a3c <init_xlat_tables_ctx+0x88>
    100b6a98:	b9403a64 	ldr	w4, [x19, #56]
    100b6a9c:	d2800002 	mov	x2, #0x0                   	// #0
    100b6aa0:	b9405265 	ldr	w5, [x19, #80]
    100b6aa4:	aa1403e1 	mov	x1, x20
    100b6aa8:	f9401a63 	ldr	x3, [x19, #48]
    100b6aac:	aa1303e0 	mov	x0, x19
    100b6ab0:	97fffe6f 	bl	100b646c <xlat_tables_map_region>
    100b6ab4:	aa0003f5 	mov	x21, x0
    100b6ab8:	f9401a60 	ldr	x0, [x19, #48]
    100b6abc:	b9403a61 	ldr	w1, [x19, #56]
    100b6ac0:	d37df021 	lsl	x1, x1, #3
    100b6ac4:	97fffe19 	bl	100b6328 <xlat_clean_dcache_range>
    100b6ac8:	a9408e81 	ldp	x1, x3, [x20, #8]
    100b6acc:	8b030020 	add	x0, x1, x3
    100b6ad0:	d1000400 	sub	x0, x0, #0x1
    100b6ad4:	eb15001f 	cmp	x0, x21
    100b6ad8:	54000160 	b.eq	100b6b04 <init_xlat_tables_ctx+0x150>  // b.none
    100b6adc:	b9401a84 	ldr	w4, [x20, #24]
    100b6ae0:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6ae4:	9131e000 	add	x0, x0, #0xc78
    100b6ae8:	f9400282 	ldr	x2, [x20]
    100b6aec:	97fffbac 	bl	100b599c <tf_log>
    100b6af0:	d0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b6af4:	91318c00 	add	x0, x0, #0xc63
    100b6af8:	97fffc88 	bl	100b5d18 <backtrace>
    100b6afc:	97fffc33 	bl	100b5bc8 <console_flush>
    100b6b00:	94000060 	bl	100b6c80 <do_panic>
    100b6b04:	9100a294 	add	x20, x20, #0x28
    100b6b08:	17ffffcf 	b	100b6a44 <init_xlat_tables_ctx+0x90>
    100b6b0c:	f9400660 	ldr	x0, [x19, #8]
    100b6b10:	f9402661 	ldr	x1, [x19, #72]
    100b6b14:	eb00003f 	cmp	x1, x0
    100b6b18:	54000069 	b.ls	100b6b24 <init_xlat_tables_ctx+0x170>  // b.plast
    100b6b1c:	528093e1 	mov	w1, #0x49f                 	// #1183
    100b6b20:	17ffffab 	b	100b69cc <init_xlat_tables_ctx+0x18>
    100b6b24:	f9400260 	ldr	x0, [x19]
    100b6b28:	f9402261 	ldr	x1, [x19, #64]
    100b6b2c:	eb00003f 	cmp	x1, x0
    100b6b30:	54000069 	b.ls	100b6b3c <init_xlat_tables_ctx+0x188>  // b.plast
    100b6b34:	52809401 	mov	w1, #0x4a0                 	// #1184
    100b6b38:	17ffffa5 	b	100b69cc <init_xlat_tables_ctx+0x18>
    100b6b3c:	52800020 	mov	w0, #0x1                   	// #1
    100b6b40:	39015260 	strb	w0, [x19, #84]
    100b6b44:	aa1303e0 	mov	x0, x19
    100b6b48:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b6b4c:	f94013f5 	ldr	x21, [sp, #32]
    100b6b50:	a8c37bfd 	ldp	x29, x30, [sp], #48
    100b6b54:	14000002 	b	100b6b5c <xlat_tables_print>

00000000100b6b58 <xlat_mmap_print>:
    100b6b58:	d65f03c0 	ret

00000000100b6b5c <xlat_tables_print>:
    100b6b5c:	d65f03c0 	ret

00000000100b6b60 <plat_get_my_stack>:
    100b6b60:	aa1e03ea 	mov	x10, x30
    100b6b64:	9400000a 	bl	100b6b8c <plat_my_core_pos>
    100b6b68:	90000022 	adrp	x2, 100ba000 <__STACKS_START__+0xbc0>
    100b6b6c:	91110042 	add	x2, x2, #0x440
    100b6b70:	d2820001 	mov	x1, #0x1000                	// #4096
    100b6b74:	9b010800 	madd	x0, x0, x1, x2
    100b6b78:	d65f0140 	ret	x10

00000000100b6b7c <plat_set_my_stack>:
    100b6b7c:	aa1e03e9 	mov	x9, x30
    100b6b80:	97fffff8 	bl	100b6b60 <plat_get_my_stack>
    100b6b84:	9100001f 	mov	sp, x0
    100b6b88:	d65f0120 	ret	x9

00000000100b6b8c <plat_my_core_pos>:
    100b6b8c:	d53800a0 	mrs	x0, mpidr_el1
    100b6b90:	14000001 	b	100b6b94 <plat_rpi3_calc_core_pos>

00000000100b6b94 <plat_rpi3_calc_core_pos>:
    100b6b94:	92401c01 	and	x1, x0, #0xff
    100b6b98:	92781c00 	and	x0, x0, #0xff00
    100b6b9c:	8b401820 	add	x0, x1, x0, lsr #6
    100b6ba0:	d65f03c0 	ret

00000000100b6ba4 <plat_crash_console_init>:
    100b6ba4:	d28a0800 	mov	x0, #0x5040                	// #20544
    100b6ba8:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    100b6bac:	d28ca001 	mov	x1, #0x6500                	// #25856
    100b6bb0:	f2a3b9a1 	movk	x1, #0x1dcd, lsl #16
    100b6bb4:	d2984002 	mov	x2, #0xc200                	// #49664
    100b6bb8:	f2a00022 	movk	x2, #0x1, lsl #16
    100b6bbc:	140000b7 	b	100b6e98 <console_16550_core_init>

00000000100b6bc0 <plat_crash_console_putc>:
    100b6bc0:	d28a0801 	mov	x1, #0x5040                	// #20544
    100b6bc4:	f2a7e421 	movk	x1, #0x3f21, lsl #16
    100b6bc8:	140000e5 	b	100b6f5c <console_16550_core_putc>

00000000100b6bcc <plat_crash_console_flush>:
    100b6bcc:	d28a0800 	mov	x0, #0x5040                	// #20544
    100b6bd0:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    100b6bd4:	1400010e 	b	100b700c <console_16550_core_flush>

00000000100b6bd8 <asm_assert>:
    100b6bd8:	aa0003e5 	mov	x5, x0
    100b6bdc:	aa0103e6 	mov	x6, x1
    100b6be0:	97fffff1 	bl	100b6ba4 <plat_crash_console_init>
    100b6be4:	b4000260 	cbz	x0, 100b6c30 <_assert_loop>
    100b6be8:	10010984 	adr	x4, 100b8d18 <assert_msg1>
    100b6bec:	94000013 	bl	100b6c38 <asm_print_str>
    100b6bf0:	aa0503e4 	mov	x4, x5
    100b6bf4:	94000011 	bl	100b6c38 <asm_print_str>
    100b6bf8:	50010964 	adr	x4, 100b8d26 <assert_msg2>
    100b6bfc:	9400000f 	bl	100b6c38 <asm_print_str>
    100b6c00:	f270bcdf 	tst	x6, #0xffffffffffff0000
    100b6c04:	54000161 	b.ne	100b6c30 <_assert_loop>  // b.any
    100b6c08:	aa0603e4 	mov	x4, x6
    100b6c0c:	d2800146 	mov	x6, #0xa                   	// #10
    100b6c10:	d284e205 	mov	x5, #0x2710                	// #10000

00000000100b6c14 <dec_print_loop>:
    100b6c14:	9ac50880 	udiv	x0, x4, x5
    100b6c18:	9b059004 	msub	x4, x0, x5, x4
    100b6c1c:	9100c000 	add	x0, x0, #0x30
    100b6c20:	97ffffe8 	bl	100b6bc0 <plat_crash_console_putc>
    100b6c24:	9ac608a5 	udiv	x5, x5, x6
    100b6c28:	b5ffff65 	cbnz	x5, 100b6c14 <dec_print_loop>
    100b6c2c:	97ffffe8 	bl	100b6bcc <plat_crash_console_flush>

00000000100b6c30 <_assert_loop>:
    100b6c30:	94000098 	bl	100b6e90 <plat_panic_handler>
    100b6c34:	d503201f 	nop

00000000100b6c38 <asm_print_str>:
    100b6c38:	aa1e03e3 	mov	x3, x30
    100b6c3c:	38401480 	ldrb	w0, [x4], #1
    100b6c40:	b4000060 	cbz	x0, 100b6c4c <asm_print_str+0x14>
    100b6c44:	97ffffdf 	bl	100b6bc0 <plat_crash_console_putc>
    100b6c48:	17fffffd 	b	100b6c3c <asm_print_str+0x4>
    100b6c4c:	d65f0060 	ret	x3

00000000100b6c50 <asm_print_hex>:
    100b6c50:	aa1e03e3 	mov	x3, x30
    100b6c54:	d2800805 	mov	x5, #0x40                  	// #64
    100b6c58:	d10010a5 	sub	x5, x5, #0x4
    100b6c5c:	9ac52480 	lsr	x0, x4, x5
    100b6c60:	92400c00 	and	x0, x0, #0xf
    100b6c64:	f100281f 	cmp	x0, #0xa
    100b6c68:	54000043 	b.cc	100b6c70 <asm_print_hex+0x20>  // b.lo, b.ul, b.last
    100b6c6c:	91009c00 	add	x0, x0, #0x27
    100b6c70:	9100c000 	add	x0, x0, #0x30
    100b6c74:	97ffffd3 	bl	100b6bc0 <plat_crash_console_putc>
    100b6c78:	b5ffff05 	cbnz	x5, 100b6c58 <asm_print_hex+0x8>
    100b6c7c:	d65f0060 	ret	x3

00000000100b6c80 <do_panic>:
    100b6c80:	f81f0fe0 	str	x0, [sp, #-16]!
    100b6c84:	d5384240 	mrs	x0, currentel
    100b6c88:	d3420c00 	ubfx	x0, x0, #2, #2
    100b6c8c:	f1000c1f 	cmp	x0, #0x3
    100b6c90:	f84107e0 	ldr	x0, [sp], #16
    100b6c94:	54000020 	b.eq	100b6c98 <el3_panic>  // b.none

00000000100b6c98 <el3_panic>:
    100b6c98:	aa1e03e6 	mov	x6, x30
    100b6c9c:	97ffffc2 	bl	100b6ba4 <plat_crash_console_init>
    100b6ca0:	b40000e0 	cbz	x0, 100b6cbc <_panic_handler>
    100b6ca4:	30010444 	adr	x4, 100b8d2d <panic_msg>
    100b6ca8:	97ffffe4 	bl	100b6c38 <asm_print_str>
    100b6cac:	aa0603e4 	mov	x4, x6
    100b6cb0:	d1001084 	sub	x4, x4, #0x4
    100b6cb4:	97ffffe7 	bl	100b6c50 <asm_print_hex>
    100b6cb8:	97ffffc5 	bl	100b6bcc <plat_crash_console_flush>

00000000100b6cbc <_panic_handler>:
    100b6cbc:	aa0603fe 	mov	x30, x6
    100b6cc0:	14000074 	b	100b6e90 <plat_panic_handler>

00000000100b6cc4 <flush_dcache_range>:
    100b6cc4:	b40001a1 	cbz	x1, 100b6cf8 <exit_loop_civac>
    100b6cc8:	d53b0023 	mrs	x3, ctr_el0
    100b6ccc:	d3504c63 	ubfx	x3, x3, #16, #4
    100b6cd0:	d2800082 	mov	x2, #0x4                   	// #4
    100b6cd4:	9ac32042 	lsl	x2, x2, x3
    100b6cd8:	8b010001 	add	x1, x0, x1
    100b6cdc:	d1000443 	sub	x3, x2, #0x1
    100b6ce0:	8a230000 	bic	x0, x0, x3

00000000100b6ce4 <loop_civac>:
    100b6ce4:	d50b7e20 	dc	civac, x0
    100b6ce8:	8b020000 	add	x0, x0, x2
    100b6cec:	eb01001f 	cmp	x0, x1
    100b6cf0:	54ffffa3 	b.cc	100b6ce4 <loop_civac>  // b.lo, b.ul, b.last
    100b6cf4:	d5033f9f 	dsb	sy

00000000100b6cf8 <exit_loop_civac>:
    100b6cf8:	d65f03c0 	ret

00000000100b6cfc <clean_dcache_range>:
    100b6cfc:	b40001a1 	cbz	x1, 100b6d30 <exit_loop_cvac>
    100b6d00:	d53b0023 	mrs	x3, ctr_el0
    100b6d04:	d3504c63 	ubfx	x3, x3, #16, #4
    100b6d08:	d2800082 	mov	x2, #0x4                   	// #4
    100b6d0c:	9ac32042 	lsl	x2, x2, x3
    100b6d10:	8b010001 	add	x1, x0, x1
    100b6d14:	d1000443 	sub	x3, x2, #0x1
    100b6d18:	8a230000 	bic	x0, x0, x3

00000000100b6d1c <loop_cvac>:
    100b6d1c:	d50b7a20 	dc	cvac, x0
    100b6d20:	8b020000 	add	x0, x0, x2
    100b6d24:	eb01001f 	cmp	x0, x1
    100b6d28:	54ffffa3 	b.cc	100b6d1c <loop_cvac>  // b.lo, b.ul, b.last
    100b6d2c:	d5033f9f 	dsb	sy

00000000100b6d30 <exit_loop_cvac>:
    100b6d30:	d65f03c0 	ret

00000000100b6d34 <inv_dcache_range>:
    100b6d34:	b40001a1 	cbz	x1, 100b6d68 <exit_loop_ivac>
    100b6d38:	d53b0023 	mrs	x3, ctr_el0
    100b6d3c:	d3504c63 	ubfx	x3, x3, #16, #4
    100b6d40:	d2800082 	mov	x2, #0x4                   	// #4
    100b6d44:	9ac32042 	lsl	x2, x2, x3
    100b6d48:	8b010001 	add	x1, x0, x1
    100b6d4c:	d1000443 	sub	x3, x2, #0x1
    100b6d50:	8a230000 	bic	x0, x0, x3

00000000100b6d54 <loop_ivac>:
    100b6d54:	d5087620 	dc	ivac, x0
    100b6d58:	8b020000 	add	x0, x0, x2
    100b6d5c:	eb01001f 	cmp	x0, x1
    100b6d60:	54ffffa3 	b.cc	100b6d54 <loop_ivac>  // b.lo, b.ul, b.last
    100b6d64:	d5033f9f 	dsb	sy

00000000100b6d68 <exit_loop_ivac>:
    100b6d68:	d65f03c0 	ret

00000000100b6d6c <smc>:
    100b6d6c:	d4000003 	smc	#0x0

00000000100b6d70 <zeromem>:
    100b6d70:	8b010002 	add	x2, x0, x1
    100b6d74:	1400003b 	b	100b6e60 <zero_normalmem+0xe8>

00000000100b6d78 <zero_normalmem>:
    100b6d78:	d5381004 	mrs	x4, sctlr_el1
    100b6d7c:	f240009f 	tst	x4, #0x1
    100b6d80:	54000081 	b.ne	100b6d90 <zero_normalmem+0x18>  // b.any
    100b6d84:	5000fdc0 	adr	x0, 100b8d3e <panic_msg+0x11>
    100b6d88:	d2801981 	mov	x1, #0xcc                  	// #204
    100b6d8c:	17ffff93 	b	100b6bd8 <asm_assert>
    100b6d90:	8b010002 	add	x2, x0, x1
    100b6d94:	d53b00e3 	mrs	x3, dczid_el0
    100b6d98:	d3400c63 	ubfx	x3, x3, #0, #4
    100b6d9c:	d2800085 	mov	x5, #0x4                   	// #4
    100b6da0:	9ac320a3 	lsl	x3, x5, x3
    100b6da4:	f100407f 	cmp	x3, #0x10
    100b6da8:	54000082 	b.cs	100b6db8 <zero_normalmem+0x40>  // b.hs, b.nlast
    100b6dac:	5000fc80 	adr	x0, 100b8d3e <panic_msg+0x11>
    100b6db0:	d2801cc1 	mov	x1, #0xe6                  	// #230
    100b6db4:	17ffff89 	b	100b6bd8 <asm_assert>
    100b6db8:	eb03003f 	cmp	x1, x3
    100b6dbc:	54000523 	b.cc	100b6e60 <zero_normalmem+0xe8>  // b.lo, b.ul, b.last
    100b6dc0:	d1000461 	sub	x1, x3, #0x1
    100b6dc4:	ea01001f 	tst	x0, x1
    100b6dc8:	54000260 	b.eq	100b6e14 <zero_normalmem+0x9c>  // b.none
    100b6dcc:	aa010004 	orr	x4, x0, x1
    100b6dd0:	91000484 	add	x4, x4, #0x1
    100b6dd4:	b4000464 	cbz	x4, 100b6e60 <zero_normalmem+0xe8>
    100b6dd8:	eb02009f 	cmp	x4, x2
    100b6ddc:	54000428 	b.hi	100b6e60 <zero_normalmem+0xe8>  // b.pmore
    100b6de0:	f2400c1f 	tst	x0, #0xf
    100b6de4:	540000e0 	b.eq	100b6e00 <zero_normalmem+0x88>  // b.none
    100b6de8:	b2400c05 	orr	x5, x0, #0xf
    100b6dec:	910004a5 	add	x5, x5, #0x1
    100b6df0:	b4000385 	cbz	x5, 100b6e60 <zero_normalmem+0xe8>
    100b6df4:	3800141f 	strb	wzr, [x0], #1
    100b6df8:	eb05001f 	cmp	x0, x5
    100b6dfc:	54ffffc1 	b.ne	100b6df4 <zero_normalmem+0x7c>  // b.any
    100b6e00:	eb04001f 	cmp	x0, x4
    100b6e04:	54000082 	b.cs	100b6e14 <zero_normalmem+0x9c>  // b.hs, b.nlast
    100b6e08:	a8817c1f 	stp	xzr, xzr, [x0], #16
    100b6e0c:	eb04001f 	cmp	x0, x4
    100b6e10:	54ffffc3 	b.cc	100b6e08 <zero_normalmem+0x90>  // b.lo, b.ul, b.last
    100b6e14:	8a210044 	bic	x4, x2, x1
    100b6e18:	eb04001f 	cmp	x0, x4
    100b6e1c:	540000a2 	b.cs	100b6e30 <zero_normalmem+0xb8>  // b.hs, b.nlast
    100b6e20:	d50b7420 	dc	zva, x0
    100b6e24:	8b030000 	add	x0, x0, x3
    100b6e28:	eb04001f 	cmp	x0, x4
    100b6e2c:	54ffffa3 	b.cc	100b6e20 <zero_normalmem+0xa8>  // b.lo, b.ul, b.last
    100b6e30:	927cec44 	and	x4, x2, #0xfffffffffffffff0
    100b6e34:	eb04001f 	cmp	x0, x4
    100b6e38:	54000082 	b.cs	100b6e48 <zero_normalmem+0xd0>  // b.hs, b.nlast
    100b6e3c:	a8817c1f 	stp	xzr, xzr, [x0], #16
    100b6e40:	eb04001f 	cmp	x0, x4
    100b6e44:	54ffffc3 	b.cc	100b6e3c <zero_normalmem+0xc4>  // b.lo, b.ul, b.last
    100b6e48:	eb02001f 	cmp	x0, x2
    100b6e4c:	54000080 	b.eq	100b6e5c <zero_normalmem+0xe4>  // b.none
    100b6e50:	3800141f 	strb	wzr, [x0], #1
    100b6e54:	eb02001f 	cmp	x0, x2
    100b6e58:	54ffffc1 	b.ne	100b6e50 <zero_normalmem+0xd8>  // b.any
    100b6e5c:	d65f03c0 	ret
    100b6e60:	f2400c1f 	tst	x0, #0xf
    100b6e64:	54fffe60 	b.eq	100b6e30 <zero_normalmem+0xb8>  // b.none
    100b6e68:	b2400c04 	orr	x4, x0, #0xf
    100b6e6c:	91000484 	add	x4, x4, #0x1
    100b6e70:	b4fffec4 	cbz	x4, 100b6e48 <zero_normalmem+0xd0>
    100b6e74:	eb02009f 	cmp	x4, x2
    100b6e78:	54fffe82 	b.cs	100b6e48 <zero_normalmem+0xd0>  // b.hs, b.nlast
    100b6e7c:	3800141f 	strb	wzr, [x0], #1
    100b6e80:	eb04001f 	cmp	x0, x4
    100b6e84:	54ffffc1 	b.ne	100b6e7c <zero_normalmem+0x104>  // b.any
    100b6e88:	17ffffea 	b	100b6e30 <zero_normalmem+0xb8>

00000000100b6e8c <plat_report_exception>:
    100b6e8c:	d65f03c0 	ret

00000000100b6e90 <plat_panic_handler>:
    100b6e90:	d503207f 	wfi
    100b6e94:	17ffffff 	b	100b6e90 <plat_panic_handler>

00000000100b6e98 <console_16550_core_init>:
    100b6e98:	b4000340 	cbz	x0, 100b6f00 <init_fail>
    100b6e9c:	34000321 	cbz	w1, 100b6f00 <init_fail>
    100b6ea0:	34000302 	cbz	w2, 100b6f00 <init_fail>
    100b6ea4:	531c6c42 	lsl	w2, w2, #4
    100b6ea8:	1ac20822 	udiv	w2, w1, w2
    100b6eac:	12001c41 	and	w1, w2, #0xff
    100b6eb0:	53087c42 	lsr	w2, w2, #8
    100b6eb4:	12001c42 	and	w2, w2, #0xff
    100b6eb8:	b9400c03 	ldr	w3, [x0, #12]
    100b6ebc:	32190063 	orr	w3, w3, #0x80
    100b6ec0:	b9000c03 	str	w3, [x0, #12]
    100b6ec4:	b9000001 	str	w1, [x0]
    100b6ec8:	b9000402 	str	w2, [x0, #4]
    100b6ecc:	12801002 	mov	w2, #0xffffff7f            	// #-129
    100b6ed0:	0a020063 	and	w3, w3, w2
    100b6ed4:	b9000c03 	str	w3, [x0, #12]
    100b6ed8:	52800063 	mov	w3, #0x3                   	// #3
    100b6edc:	b9000c03 	str	w3, [x0, #12]
    100b6ee0:	52800003 	mov	w3, #0x0                   	// #0
    100b6ee4:	b9000403 	str	w3, [x0, #4]
    100b6ee8:	52800123 	mov	w3, #0x9                   	// #9
    100b6eec:	b9000803 	str	w3, [x0, #8]
    100b6ef0:	52800063 	mov	w3, #0x3                   	// #3
    100b6ef4:	b9001003 	str	w3, [x0, #16]
    100b6ef8:	52800020 	mov	w0, #0x1                   	// #1
    100b6efc:	d65f03c0 	ret

00000000100b6f00 <init_fail>:
    100b6f00:	52800000 	mov	w0, #0x0                   	// #0
    100b6f04:	d65f03c0 	ret

00000000100b6f08 <console_16550_register>:
    100b6f08:	aa1e03e7 	mov	x7, x30
    100b6f0c:	aa0303e6 	mov	x6, x3
    100b6f10:	b4000246 	cbz	x6, 100b6f58 <register_fail>
    100b6f14:	f90014c0 	str	x0, [x6, #40]
    100b6f18:	97ffffe0 	bl	100b6e98 <console_16550_core_init>
    100b6f1c:	b40001e0 	cbz	x0, 100b6f58 <register_fail>
    100b6f20:	aa0603e0 	mov	x0, x6
    100b6f24:	aa0703fe 	mov	x30, x7
    100b6f28:	90000001 	adrp	x1, 100b6000 <xlat_arch_get_max_supported_pa+0x10>
    100b6f2c:	913ea021 	add	x1, x1, #0xfa8
    100b6f30:	f9000801 	str	x1, [x0, #16]
    100b6f34:	90000001 	adrp	x1, 100b6000 <xlat_arch_get_max_supported_pa+0x10>
    100b6f38:	913fc021 	add	x1, x1, #0xff0
    100b6f3c:	f9000c01 	str	x1, [x0, #24]
    100b6f40:	b0000001 	adrp	x1, 100b7000 <console_16550_getc+0x10>
    100b6f44:	9100e021 	add	x1, x1, #0x38
    100b6f48:	f9001001 	str	x1, [x0, #32]
    100b6f4c:	d28000a1 	mov	x1, #0x5                   	// #5
    100b6f50:	f9000401 	str	x1, [x0, #8]
    100b6f54:	17fffad6 	b	100b5aac <console_register>

00000000100b6f58 <register_fail>:
    100b6f58:	d65f00e0 	ret	x7

00000000100b6f5c <console_16550_core_putc>:
    100b6f5c:	f100003f 	cmp	x1, #0x0
    100b6f60:	54000081 	b.ne	100b6f70 <console_16550_core_putc+0x14>  // b.any
    100b6f64:	3000efa0 	adr	x0, 100b8d59 <panic_msg+0x2c>
    100b6f68:	d2801221 	mov	x1, #0x91                  	// #145
    100b6f6c:	17ffff1b 	b	100b6bd8 <asm_assert>
    100b6f70:	7100281f 	cmp	w0, #0xa
    100b6f74:	540000e1 	b.ne	100b6f90 <console_16550_core_putc+0x34>  // b.any
    100b6f78:	b9401422 	ldr	w2, [x1, #20]
    100b6f7c:	121b0442 	and	w2, w2, #0x60
    100b6f80:	7101805f 	cmp	w2, #0x60
    100b6f84:	54ffffa1 	b.ne	100b6f78 <console_16550_core_putc+0x1c>  // b.any
    100b6f88:	528001a2 	mov	w2, #0xd                   	// #13
    100b6f8c:	b9000022 	str	w2, [x1]
    100b6f90:	b9401422 	ldr	w2, [x1, #20]
    100b6f94:	121b0442 	and	w2, w2, #0x60
    100b6f98:	7101805f 	cmp	w2, #0x60
    100b6f9c:	54ffffa1 	b.ne	100b6f90 <console_16550_core_putc+0x34>  // b.any
    100b6fa0:	b9000020 	str	w0, [x1]
    100b6fa4:	d65f03c0 	ret

00000000100b6fa8 <console_16550_putc>:
    100b6fa8:	f100003f 	cmp	x1, #0x0
    100b6fac:	54000081 	b.ne	100b6fbc <console_16550_putc+0x14>  // b.any
    100b6fb0:	3000ed40 	adr	x0, 100b8d59 <panic_msg+0x2c>
    100b6fb4:	d28016a1 	mov	x1, #0xb5                  	// #181
    100b6fb8:	17ffff08 	b	100b6bd8 <asm_assert>
    100b6fbc:	f9401421 	ldr	x1, [x1, #40]
    100b6fc0:	17ffffe7 	b	100b6f5c <console_16550_core_putc>

00000000100b6fc4 <console_16550_core_getc>:
    100b6fc4:	f100001f 	cmp	x0, #0x0
    100b6fc8:	54000081 	b.ne	100b6fd8 <console_16550_core_getc+0x14>  // b.any
    100b6fcc:	3000ec60 	adr	x0, 100b8d59 <panic_msg+0x2c>
    100b6fd0:	d2801901 	mov	x1, #0xc8                  	// #200
    100b6fd4:	17ffff01 	b	100b6bd8 <asm_assert>
    100b6fd8:	b9401401 	ldr	w1, [x0, #20]
    100b6fdc:	36000061 	tbz	w1, #0, 100b6fe8 <no_char>
    100b6fe0:	b9400000 	ldr	w0, [x0]
    100b6fe4:	d65f03c0 	ret

00000000100b6fe8 <no_char>:
    100b6fe8:	12800000 	mov	w0, #0xffffffff            	// #-1
    100b6fec:	d65f03c0 	ret

00000000100b6ff0 <console_16550_getc>:
    100b6ff0:	f100003f 	cmp	x1, #0x0
    100b6ff4:	54000081 	b.ne	100b7004 <console_16550_getc+0x14>  // b.any
    100b6ff8:	3000eb00 	adr	x0, 100b8d59 <panic_msg+0x2c>
    100b6ffc:	d2801c41 	mov	x1, #0xe2                  	// #226
    100b7000:	17fffef6 	b	100b6bd8 <asm_assert>
    100b7004:	f9401400 	ldr	x0, [x0, #40]
    100b7008:	17ffffef 	b	100b6fc4 <console_16550_core_getc>

00000000100b700c <console_16550_core_flush>:
    100b700c:	f100001f 	cmp	x0, #0x0
    100b7010:	54000081 	b.ne	100b7020 <console_16550_core_flush+0x14>  // b.any
    100b7014:	3000ea20 	adr	x0, 100b8d59 <panic_msg+0x2c>
    100b7018:	d2801e81 	mov	x1, #0xf4                  	// #244
    100b701c:	17fffeef 	b	100b6bd8 <asm_assert>
    100b7020:	b9401401 	ldr	w1, [x0, #20]
    100b7024:	121b0421 	and	w1, w1, #0x60
    100b7028:	7101803f 	cmp	w1, #0x60
    100b702c:	54ffffa1 	b.ne	100b7020 <console_16550_core_flush+0x14>  // b.any
    100b7030:	52800000 	mov	w0, #0x0                   	// #0
    100b7034:	d65f03c0 	ret

00000000100b7038 <console_16550_flush>:
    100b7038:	f100001f 	cmp	x0, #0x0
    100b703c:	54000081 	b.ne	100b704c <console_16550_flush+0x14>  // b.any
    100b7040:	3000e8c0 	adr	x0, 100b8d59 <panic_msg+0x2c>
    100b7044:	d28021a1 	mov	x1, #0x10d                 	// #269
    100b7048:	17fffee4 	b	100b6bd8 <asm_assert>
    100b704c:	f9401400 	ldr	x0, [x0, #40]
    100b7050:	17ffffef 	b	100b700c <console_16550_core_flush>

00000000100b7054 <enable_mmu_direct_el1>:
    100b7054:	d5381001 	mrs	x1, sctlr_el1
    100b7058:	f240003f 	tst	x1, #0x1
    100b705c:	54000080 	b.eq	100b706c <enable_mmu_direct_el1+0x18>  // b.none
    100b7060:	3000e900 	adr	x0, 100b8d81 <panic_msg+0x54>
    100b7064:	d2800541 	mov	x1, #0x2a                  	// #42
    100b7068:	17fffedc 	b	100b6bd8 <asm_assert>
    100b706c:	d508871f 	tlbi	vmalle1
    100b7070:	aa0003e7 	mov	x7, x0
    100b7074:	d0000020 	adrp	x0, 100bd000 <__STACKS_START__+0x3bc0>
    100b7078:	911d2000 	add	x0, x0, #0x748
    100b707c:	f9400001 	ldr	x1, [x0]
    100b7080:	d518a201 	msr	mair_el1, x1
    100b7084:	f9400402 	ldr	x2, [x0, #8]
    100b7088:	d5182042 	msr	tcr_el1, x2
    100b708c:	f9400803 	ldr	x3, [x0, #16]
    100b7090:	d5182003 	msr	ttbr0_el1, x3
    100b7094:	d5033b9f 	dsb	ish
    100b7098:	d5033fdf 	isb
    100b709c:	d5381004 	mrs	x4, sctlr_el1
    100b70a0:	d28000a5 	mov	x5, #0x5                   	// #5
    100b70a4:	f2a00105 	movk	x5, #0x8, lsl #16
    100b70a8:	aa050084 	orr	x4, x4, x5
    100b70ac:	927df885 	and	x5, x4, #0xfffffffffffffffb
    100b70b0:	f24000ff 	tst	x7, #0x1
    100b70b4:	9a8410a4 	csel	x4, x5, x4, ne  // ne = any
    100b70b8:	d5181004 	msr	sctlr_el1, x4
    100b70bc:	d5033fdf 	isb
    100b70c0:	d65f03c0 	ret

00000000100b70c4 <__assert>:
    100b70c4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    100b70c8:	2a0103e2 	mov	w2, w1
    100b70cc:	aa0003e1 	mov	x1, x0
    100b70d0:	910003fd 	mov	x29, sp
    100b70d4:	b0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b70d8:	9136a400 	add	x0, x0, #0xda9
    100b70dc:	9400015d 	bl	100b7650 <printf>
    100b70e0:	b0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b70e4:	9136e000 	add	x0, x0, #0xdb8
    100b70e8:	97fffb0c 	bl	100b5d18 <backtrace>
    100b70ec:	97fffab7 	bl	100b5bc8 <console_flush>
    100b70f0:	97ffff68 	bl	100b6e90 <plat_panic_handler>

00000000100b70f4 <memcmp>:
    100b70f4:	d1000421 	sub	x1, x1, #0x1
    100b70f8:	d2800004 	mov	x4, #0x0                   	// #0
    100b70fc:	eb04005f 	cmp	x2, x4
    100b7100:	54000061 	b.ne	100b710c <memcmp+0x18>  // b.any
    100b7104:	52800000 	mov	w0, #0x0                   	// #0
    100b7108:	14000007 	b	100b7124 <memcmp+0x30>
    100b710c:	38646803 	ldrb	w3, [x0, x4]
    100b7110:	91000484 	add	x4, x4, #0x1
    100b7114:	38646825 	ldrb	w5, [x1, x4]
    100b7118:	6b05007f 	cmp	w3, w5
    100b711c:	54ffff00 	b.eq	100b70fc <memcmp+0x8>  // b.none
    100b7120:	4b050060 	sub	w0, w3, w5
    100b7124:	d65f03c0 	ret

00000000100b7128 <memcpy>:
    100b7128:	d2800003 	mov	x3, #0x0                   	// #0
    100b712c:	eb03005f 	cmp	x2, x3
    100b7130:	54000041 	b.ne	100b7138 <memcpy+0x10>  // b.any
    100b7134:	d65f03c0 	ret
    100b7138:	38636824 	ldrb	w4, [x1, x3]
    100b713c:	38236804 	strb	w4, [x0, x3]
    100b7140:	91000463 	add	x3, x3, #0x1
    100b7144:	17fffffa 	b	100b712c <memcpy+0x4>

00000000100b7148 <memmove>:
    100b7148:	cb010006 	sub	x6, x0, x1
    100b714c:	aa0003e5 	mov	x5, x0
    100b7150:	eb0200df 	cmp	x6, x2
    100b7154:	54000043 	b.cc	100b715c <memmove+0x14>  // b.lo, b.ul, b.last
    100b7158:	17fffff4 	b	100b7128 <memcpy>
    100b715c:	8b020024 	add	x4, x1, x2
    100b7160:	8b020000 	add	x0, x0, x2
    100b7164:	eb05001f 	cmp	x0, x5
    100b7168:	54000041 	b.ne	100b7170 <memmove+0x28>  // b.any
    100b716c:	d65f03c0 	ret
    100b7170:	385ffc81 	ldrb	w1, [x4, #-1]!
    100b7174:	381ffc01 	strb	w1, [x0, #-1]!
    100b7178:	17fffffb 	b	100b7164 <memmove+0x1c>

00000000100b717c <unsigned_num_print>:
    100b717c:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    100b7180:	2a0103e1 	mov	w1, w1
    100b7184:	d2800005 	mov	x5, #0x0                   	// #0
    100b7188:	910003fd 	mov	x29, sp
    100b718c:	a90153f3 	stp	x19, x20, [sp, #16]
    100b7190:	2a0303f4 	mov	w20, w3
    100b7194:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b7198:	910123f6 	add	x22, sp, #0x48
    100b719c:	f9001bf7 	str	x23, [sp, #48]
    100b71a0:	12001c57 	and	w23, w2, #0xff
    100b71a4:	9ac10807 	udiv	x7, x0, x1
    100b71a8:	110004b5 	add	w21, w5, #0x1
    100b71ac:	9b0180e3 	msub	x3, x7, x1, x0
    100b71b0:	12001c64 	and	w4, w3, #0xff
    100b71b4:	f100247f 	cmp	x3, #0x9
    100b71b8:	1100c086 	add	w6, w4, #0x30
    100b71bc:	11015c84 	add	w4, w4, #0x57
    100b71c0:	12001cc6 	and	w6, w6, #0xff
    100b71c4:	12001c84 	and	w4, w4, #0xff
    100b71c8:	1a868084 	csel	w4, w4, w6, hi  // hi = pmore
    100b71cc:	383668a4 	strb	w4, [x5, x22]
    100b71d0:	eb00003f 	cmp	x1, x0
    100b71d4:	910004a5 	add	x5, x5, #0x1
    100b71d8:	540001c9 	b.ls	100b7210 <unsigned_num_print+0x94>  // b.plast
    100b71dc:	52800013 	mov	w19, #0x0                   	// #0
    100b71e0:	7100029f 	cmp	w20, #0x0
    100b71e4:	5400020c 	b.gt	100b7224 <unsigned_num_print+0xa8>
    100b71e8:	93407eb4 	sxtw	x20, w21
    100b71ec:	d1000694 	sub	x20, x20, #0x1
    100b71f0:	3100069f 	cmn	w20, #0x1
    100b71f4:	54000201 	b.ne	100b7234 <unsigned_num_print+0xb8>  // b.any
    100b71f8:	0b150260 	add	w0, w19, w21
    100b71fc:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b7200:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b7204:	f9401bf7 	ldr	x23, [sp, #48]
    100b7208:	a8c67bfd 	ldp	x29, x30, [sp], #96
    100b720c:	d65f03c0 	ret
    100b7210:	aa0703e0 	mov	x0, x7
    100b7214:	17ffffe4 	b	100b71a4 <unsigned_num_print+0x28>
    100b7218:	11000673 	add	w19, w19, #0x1
    100b721c:	2a1703e0 	mov	w0, w23
    100b7220:	94000121 	bl	100b76a4 <putchar>
    100b7224:	4b130280 	sub	w0, w20, w19
    100b7228:	6b15001f 	cmp	w0, w21
    100b722c:	54ffff6c 	b.gt	100b7218 <unsigned_num_print+0x9c>
    100b7230:	17ffffee 	b	100b71e8 <unsigned_num_print+0x6c>
    100b7234:	38746ac0 	ldrb	w0, [x22, x20]
    100b7238:	9400011b 	bl	100b76a4 <putchar>
    100b723c:	17ffffec 	b	100b71ec <unsigned_num_print+0x70>

00000000100b7240 <vprintf>:
    100b7240:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    100b7244:	910003fd 	mov	x29, sp
    100b7248:	a90153f3 	stp	x19, x20, [sp, #16]
    100b724c:	b9401834 	ldr	w20, [x1, #24]
    100b7250:	a90363f7 	stp	x23, x24, [sp, #48]
    100b7254:	a9405c33 	ldp	x19, x23, [x1]
    100b7258:	a9025bf5 	stp	x21, x22, [sp, #32]
    100b725c:	aa0003f6 	mov	x22, x0
    100b7260:	a9046bf9 	stp	x25, x26, [sp, #64]
    100b7264:	b000001a 	adrp	x26, 100b8000 <__TEXT_END__>
    100b7268:	9137435a 	add	x26, x26, #0xdd0
    100b726c:	52800015 	mov	w21, #0x0                   	// #0
    100b7270:	52800019 	mov	w25, #0x0                   	// #0
    100b7274:	a90573fb 	stp	x27, x28, [sp, #80]
    100b7278:	394002c0 	ldrb	w0, [x22]
    100b727c:	34000240 	cbz	w0, 100b72c4 <vprintf+0x84>
    100b7280:	910006d6 	add	x22, x22, #0x1
    100b7284:	7100941f 	cmp	w0, #0x25
    100b7288:	54001de1 	b.ne	100b7644 <vprintf+0x404>  // b.any
    100b728c:	52800018 	mov	w24, #0x0                   	// #0
    100b7290:	52800001 	mov	w1, #0x0                   	// #0
    100b7294:	14000002 	b	100b729c <vprintf+0x5c>
    100b7298:	52800619 	mov	w25, #0x30                  	// #48
    100b729c:	394002c0 	ldrb	w0, [x22]
    100b72a0:	7101c01f 	cmp	w0, #0x70
    100b72a4:	54000e00 	b.eq	100b7464 <vprintf+0x224>  // b.none
    100b72a8:	540002c8 	b.hi	100b7300 <vprintf+0xc0>  // b.pmore
    100b72ac:	7101901f 	cmp	w0, #0x64
    100b72b0:	54000540 	b.eq	100b7358 <vprintf+0x118>  // b.none
    100b72b4:	54000188 	b.hi	100b72e4 <vprintf+0xa4>  // b.pmore
    100b72b8:	7100c01f 	cmp	w0, #0x30
    100b72bc:	54001ae0 	b.eq	100b7618 <vprintf+0x3d8>  // b.none
    100b72c0:	12800015 	mov	w21, #0xffffffff            	// #-1
    100b72c4:	2a1503e0 	mov	w0, w21
    100b72c8:	a94153f3 	ldp	x19, x20, [sp, #16]
    100b72cc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    100b72d0:	a94363f7 	ldp	x23, x24, [sp, #48]
    100b72d4:	a9446bf9 	ldp	x25, x26, [sp, #64]
    100b72d8:	a94573fb 	ldp	x27, x28, [sp, #80]
    100b72dc:	a8c67bfd 	ldp	x29, x30, [sp], #96
    100b72e0:	d65f03c0 	ret
    100b72e4:	7101a41f 	cmp	w0, #0x69
    100b72e8:	54000380 	b.eq	100b7358 <vprintf+0x118>  // b.none
    100b72ec:	7101b01f 	cmp	w0, #0x6c
    100b72f0:	54fffe81 	b.ne	100b72c0 <vprintf+0x80>  // b.any
    100b72f4:	11000421 	add	w1, w1, #0x1
    100b72f8:	910006d6 	add	x22, x22, #0x1
    100b72fc:	17ffffe8 	b	100b729c <vprintf+0x5c>
    100b7300:	7101d41f 	cmp	w0, #0x75
    100b7304:	54001440 	b.eq	100b758c <vprintf+0x34c>  // b.none
    100b7308:	540001a8 	b.hi	100b733c <vprintf+0xfc>  // b.pmore
    100b730c:	7101cc1f 	cmp	w0, #0x73
    100b7310:	54fffd81 	b.ne	100b72c0 <vprintf+0x80>  // b.any
    100b7314:	37f807d4 	tbnz	w20, #31, 100b740c <vprintf+0x1cc>
    100b7318:	91003e78 	add	x24, x19, #0xf
    100b731c:	2a1403fc 	mov	w28, w20
    100b7320:	927df318 	and	x24, x24, #0xfffffffffffffff8
    100b7324:	f9400260 	ldr	x0, [x19]
    100b7328:	b5000980 	cbnz	x0, 100b7458 <vprintf+0x218>
    100b732c:	b0000000 	adrp	x0, 100b8000 <__TEXT_END__>
    100b7330:	9136fc00 	add	x0, x0, #0xdbf
    100b7334:	52800381 	mov	w1, #0x1c                  	// #28
    100b7338:	97ffff63 	bl	100b70c4 <__assert>
    100b733c:	7101e01f 	cmp	w0, #0x78
    100b7340:	54000d60 	b.eq	100b74ec <vprintf+0x2ac>  // b.none
    100b7344:	7101e81f 	cmp	w0, #0x7a
    100b7348:	54fffbc1 	b.ne	100b72c0 <vprintf+0x80>  // b.any
    100b734c:	910006d6 	add	x22, x22, #0x1
    100b7350:	52800041 	mov	w1, #0x2                   	// #2
    100b7354:	17ffffd2 	b	100b729c <vprintf+0x5c>
    100b7358:	7100043f 	cmp	w1, #0x1
    100b735c:	5400022d 	b.le	100b73a0 <vprintf+0x160>
    100b7360:	37f802f4 	tbnz	w20, #31, 100b73bc <vprintf+0x17c>
    100b7364:	91003e60 	add	x0, x19, #0xf
    100b7368:	2a1403e1 	mov	w1, w20
    100b736c:	927df000 	and	x0, x0, #0xfffffffffffffff8
    100b7370:	f940027c 	ldr	x28, [x19]
    100b7374:	2a0103f4 	mov	w20, w1
    100b7378:	aa0003f3 	mov	x19, x0
    100b737c:	b6f8045c 	tbz	x28, #63, 100b7404 <vprintf+0x1c4>
    100b7380:	528005a0 	mov	w0, #0x2d                  	// #45
    100b7384:	940000c8 	bl	100b76a4 <putchar>
    100b7388:	cb1c03e0 	neg	x0, x28
    100b738c:	51000718 	sub	w24, w24, #0x1
    100b7390:	2a1803e3 	mov	w3, w24
    100b7394:	2a1903e2 	mov	w2, w25
    100b7398:	52800141 	mov	w1, #0xa                   	// #10
    100b739c:	14000060 	b	100b751c <vprintf+0x2dc>
    100b73a0:	54fffe00 	b.eq	100b7360 <vprintf+0x120>  // b.none
    100b73a4:	37f801f4 	tbnz	w20, #31, 100b73e0 <vprintf+0x1a0>
    100b73a8:	91002e60 	add	x0, x19, #0xb
    100b73ac:	2a1403e1 	mov	w1, w20
    100b73b0:	927df000 	and	x0, x0, #0xfffffffffffffff8
    100b73b4:	b980027c 	ldrsw	x28, [x19]
    100b73b8:	17ffffef 	b	100b7374 <vprintf+0x134>
    100b73bc:	11002281 	add	w1, w20, #0x8
    100b73c0:	7100003f 	cmp	w1, #0x0
    100b73c4:	5400008d 	b.le	100b73d4 <vprintf+0x194>
    100b73c8:	91003e60 	add	x0, x19, #0xf
    100b73cc:	927df000 	and	x0, x0, #0xfffffffffffffff8
    100b73d0:	17ffffe8 	b	100b7370 <vprintf+0x130>
    100b73d4:	aa1303e0 	mov	x0, x19
    100b73d8:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b73dc:	17ffffe5 	b	100b7370 <vprintf+0x130>
    100b73e0:	11002281 	add	w1, w20, #0x8
    100b73e4:	7100003f 	cmp	w1, #0x0
    100b73e8:	5400008d 	b.le	100b73f8 <vprintf+0x1b8>
    100b73ec:	91002e60 	add	x0, x19, #0xb
    100b73f0:	927df000 	and	x0, x0, #0xfffffffffffffff8
    100b73f4:	17fffff0 	b	100b73b4 <vprintf+0x174>
    100b73f8:	aa1303e0 	mov	x0, x19
    100b73fc:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b7400:	17ffffed 	b	100b73b4 <vprintf+0x174>
    100b7404:	aa1c03e0 	mov	x0, x28
    100b7408:	17ffffe2 	b	100b7390 <vprintf+0x150>
    100b740c:	1100229c 	add	w28, w20, #0x8
    100b7410:	7100039f 	cmp	w28, #0x0
    100b7414:	5400008d 	b.le	100b7424 <vprintf+0x1e4>
    100b7418:	91003e78 	add	x24, x19, #0xf
    100b741c:	927df318 	and	x24, x24, #0xfffffffffffffff8
    100b7420:	17ffffc1 	b	100b7324 <vprintf+0xe4>
    100b7424:	aa1303f8 	mov	x24, x19
    100b7428:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b742c:	17ffffbe 	b	100b7324 <vprintf+0xe4>
    100b7430:	9400009d 	bl	100b76a4 <putchar>
    100b7434:	2a1303e1 	mov	w1, w19
    100b7438:	91000673 	add	x19, x19, #0x1
    100b743c:	38736a80 	ldrb	w0, [x20, x19]
    100b7440:	35ffff80 	cbnz	w0, 100b7430 <vprintf+0x1f0>
    100b7444:	0b0102b5 	add	w21, w21, w1
    100b7448:	2a1c03f4 	mov	w20, w28
    100b744c:	aa1803f3 	mov	x19, x24
    100b7450:	910006d6 	add	x22, x22, #0x1
    100b7454:	17ffff89 	b	100b7278 <vprintf+0x38>
    100b7458:	d2800013 	mov	x19, #0x0                   	// #0
    100b745c:	d1000414 	sub	x20, x0, #0x1
    100b7460:	17fffff5 	b	100b7434 <vprintf+0x1f4>
    100b7464:	37f801f4 	tbnz	w20, #31, 100b74a0 <vprintf+0x260>
    100b7468:	91003e7c 	add	x28, x19, #0xf
    100b746c:	2a1403fb 	mov	w27, w20
    100b7470:	927df39c 	and	x28, x28, #0xfffffffffffffff8
    100b7474:	f9400274 	ldr	x20, [x19]
    100b7478:	b5000374 	cbnz	x20, 100b74e4 <vprintf+0x2a4>
    100b747c:	aa1403e0 	mov	x0, x20
    100b7480:	2a1803e3 	mov	w3, w24
    100b7484:	2a1903e2 	mov	w2, w25
    100b7488:	52800201 	mov	w1, #0x10                  	// #16
    100b748c:	2a1b03f4 	mov	w20, w27
    100b7490:	97ffff3b 	bl	100b717c <unsigned_num_print>
    100b7494:	aa1c03f3 	mov	x19, x28
    100b7498:	0b0002b5 	add	w21, w21, w0
    100b749c:	17ffffed 	b	100b7450 <vprintf+0x210>
    100b74a0:	1100229b 	add	w27, w20, #0x8
    100b74a4:	7100037f 	cmp	w27, #0x0
    100b74a8:	5400008d 	b.le	100b74b8 <vprintf+0x278>
    100b74ac:	91003e7c 	add	x28, x19, #0xf
    100b74b0:	927df39c 	and	x28, x28, #0xfffffffffffffff8
    100b74b4:	17fffff0 	b	100b7474 <vprintf+0x234>
    100b74b8:	aa1303fc 	mov	x28, x19
    100b74bc:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b74c0:	17ffffed 	b	100b7474 <vprintf+0x234>
    100b74c4:	94000078 	bl	100b76a4 <putchar>
    100b74c8:	2a1303e1 	mov	w1, w19
    100b74cc:	91000673 	add	x19, x19, #0x1
    100b74d0:	387a6a60 	ldrb	w0, [x19, x26]
    100b74d4:	35ffff80 	cbnz	w0, 100b74c4 <vprintf+0x284>
    100b74d8:	0b0102b5 	add	w21, w21, w1
    100b74dc:	51000b18 	sub	w24, w24, #0x2
    100b74e0:	17ffffe7 	b	100b747c <vprintf+0x23c>
    100b74e4:	d2800013 	mov	x19, #0x0                   	// #0
    100b74e8:	17fffff8 	b	100b74c8 <vprintf+0x288>
    100b74ec:	7100043f 	cmp	w1, #0x1
    100b74f0:	540001cd 	b.le	100b7528 <vprintf+0x2e8>
    100b74f4:	37f80294 	tbnz	w20, #31, 100b7544 <vprintf+0x304>
    100b74f8:	91003e61 	add	x1, x19, #0xf
    100b74fc:	2a1403e2 	mov	w2, w20
    100b7500:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b7504:	f9400260 	ldr	x0, [x19]
    100b7508:	2a0203f4 	mov	w20, w2
    100b750c:	2a1803e3 	mov	w3, w24
    100b7510:	2a1903e2 	mov	w2, w25
    100b7514:	aa0103f3 	mov	x19, x1
    100b7518:	52800201 	mov	w1, #0x10                  	// #16
    100b751c:	97ffff18 	bl	100b717c <unsigned_num_print>
    100b7520:	0b0002b5 	add	w21, w21, w0
    100b7524:	17ffffcb 	b	100b7450 <vprintf+0x210>
    100b7528:	54fffe60 	b.eq	100b74f4 <vprintf+0x2b4>  // b.none
    100b752c:	37f801f4 	tbnz	w20, #31, 100b7568 <vprintf+0x328>
    100b7530:	91002e61 	add	x1, x19, #0xb
    100b7534:	2a1403e2 	mov	w2, w20
    100b7538:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b753c:	b9400260 	ldr	w0, [x19]
    100b7540:	17fffff2 	b	100b7508 <vprintf+0x2c8>
    100b7544:	11002282 	add	w2, w20, #0x8
    100b7548:	7100005f 	cmp	w2, #0x0
    100b754c:	5400008d 	b.le	100b755c <vprintf+0x31c>
    100b7550:	91003e61 	add	x1, x19, #0xf
    100b7554:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b7558:	17ffffeb 	b	100b7504 <vprintf+0x2c4>
    100b755c:	aa1303e1 	mov	x1, x19
    100b7560:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b7564:	17ffffe8 	b	100b7504 <vprintf+0x2c4>
    100b7568:	11002282 	add	w2, w20, #0x8
    100b756c:	7100005f 	cmp	w2, #0x0
    100b7570:	5400008d 	b.le	100b7580 <vprintf+0x340>
    100b7574:	91002e61 	add	x1, x19, #0xb
    100b7578:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b757c:	17fffff0 	b	100b753c <vprintf+0x2fc>
    100b7580:	aa1303e1 	mov	x1, x19
    100b7584:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b7588:	17ffffed 	b	100b753c <vprintf+0x2fc>
    100b758c:	7100043f 	cmp	w1, #0x1
    100b7590:	5400012d 	b.le	100b75b4 <vprintf+0x374>
    100b7594:	37f801f4 	tbnz	w20, #31, 100b75d0 <vprintf+0x390>
    100b7598:	91003e61 	add	x1, x19, #0xf
    100b759c:	2a1403e2 	mov	w2, w20
    100b75a0:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b75a4:	f9400260 	ldr	x0, [x19]
    100b75a8:	2a0203f4 	mov	w20, w2
    100b75ac:	aa0103f3 	mov	x19, x1
    100b75b0:	17ffff78 	b	100b7390 <vprintf+0x150>
    100b75b4:	54ffff00 	b.eq	100b7594 <vprintf+0x354>  // b.none
    100b75b8:	37f801f4 	tbnz	w20, #31, 100b75f4 <vprintf+0x3b4>
    100b75bc:	91002e61 	add	x1, x19, #0xb
    100b75c0:	2a1403e2 	mov	w2, w20
    100b75c4:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b75c8:	b9400260 	ldr	w0, [x19]
    100b75cc:	17fffff7 	b	100b75a8 <vprintf+0x368>
    100b75d0:	11002282 	add	w2, w20, #0x8
    100b75d4:	7100005f 	cmp	w2, #0x0
    100b75d8:	5400008d 	b.le	100b75e8 <vprintf+0x3a8>
    100b75dc:	91003e61 	add	x1, x19, #0xf
    100b75e0:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b75e4:	17fffff0 	b	100b75a4 <vprintf+0x364>
    100b75e8:	aa1303e1 	mov	x1, x19
    100b75ec:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b75f0:	17ffffed 	b	100b75a4 <vprintf+0x364>
    100b75f4:	11002282 	add	w2, w20, #0x8
    100b75f8:	7100005f 	cmp	w2, #0x0
    100b75fc:	5400008d 	b.le	100b760c <vprintf+0x3cc>
    100b7600:	91002e61 	add	x1, x19, #0xb
    100b7604:	927df021 	and	x1, x1, #0xfffffffffffffff8
    100b7608:	17fffff0 	b	100b75c8 <vprintf+0x388>
    100b760c:	aa1303e1 	mov	x1, x19
    100b7610:	8b34c2f3 	add	x19, x23, w20, sxtw
    100b7614:	17ffffed 	b	100b75c8 <vprintf+0x388>
    100b7618:	910006d6 	add	x22, x22, #0x1
    100b761c:	52800018 	mov	w24, #0x0                   	// #0
    100b7620:	394002c0 	ldrb	w0, [x22]
    100b7624:	5100c000 	sub	w0, w0, #0x30
    100b7628:	12001c02 	and	w2, w0, #0xff
    100b762c:	7100245f 	cmp	w2, #0x9
    100b7630:	54ffe348 	b.hi	100b7298 <vprintf+0x58>  // b.pmore
    100b7634:	52800142 	mov	w2, #0xa                   	// #10
    100b7638:	910006d6 	add	x22, x22, #0x1
    100b763c:	1b020318 	madd	w24, w24, w2, w0
    100b7640:	17fffff8 	b	100b7620 <vprintf+0x3e0>
    100b7644:	94000018 	bl	100b76a4 <putchar>
    100b7648:	110006b5 	add	w21, w21, #0x1
    100b764c:	17ffff0b 	b	100b7278 <vprintf+0x38>

00000000100b7650 <printf>:
    100b7650:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    100b7654:	910003fd 	mov	x29, sp
    100b7658:	a9058be1 	stp	x1, x2, [sp, #88]
    100b765c:	910243e1 	add	x1, sp, #0x90
    100b7660:	a90307e1 	stp	x1, x1, [sp, #48]
    100b7664:	910143e1 	add	x1, sp, #0x50
    100b7668:	f90023e1 	str	x1, [sp, #64]
    100b766c:	128006e1 	mov	w1, #0xffffffc8            	// #-56
    100b7670:	b9004be1 	str	w1, [sp, #72]
    100b7674:	910043e1 	add	x1, sp, #0x10
    100b7678:	b9004fff 	str	wzr, [sp, #76]
    100b767c:	a90693e3 	stp	x3, x4, [sp, #104]
    100b7680:	a9430fe2 	ldp	x2, x3, [sp, #48]
    100b7684:	a9010fe2 	stp	x2, x3, [sp, #16]
    100b7688:	a9440fe2 	ldp	x2, x3, [sp, #64]
    100b768c:	a9020fe2 	stp	x2, x3, [sp, #32]
    100b7690:	a9079be5 	stp	x5, x6, [sp, #120]
    100b7694:	f90047e7 	str	x7, [sp, #136]
    100b7698:	97fffeea 	bl	100b7240 <vprintf>
    100b769c:	a8c97bfd 	ldp	x29, x30, [sp], #144
    100b76a0:	d65f03c0 	ret

00000000100b76a4 <putchar>:
    100b76a4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    100b76a8:	910003fd 	mov	x29, sp
    100b76ac:	f9000bf3 	str	x19, [sp, #16]
    100b76b0:	2a0003f3 	mov	w19, w0
    100b76b4:	12001c00 	and	w0, w0, #0xff
    100b76b8:	97fff927 	bl	100b5b54 <console_putc>
    100b76bc:	7100001f 	cmp	w0, #0x0
    100b76c0:	5a9fa260 	csinv	w0, w19, wzr, ge  // ge = tcont
    100b76c4:	f9400bf3 	ldr	x19, [sp, #16]
    100b76c8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    100b76cc:	d65f03c0 	ret
	...

00000000100b7800 <SynchronousExceptionSP0>:
    100b7800:	d2800000 	mov	x0, #0x0                   	// #0
    100b7804:	97fffda2 	bl	100b6e8c <plat_report_exception>
    100b7808:	97fffda2 	bl	100b6e90 <plat_panic_handler>
    100b780c:	d503201f 	nop
	...

00000000100b7880 <IrqSP0>:
    100b7880:	d2800020 	mov	x0, #0x1                   	// #1
    100b7884:	97fffd82 	bl	100b6e8c <plat_report_exception>
    100b7888:	97fffd82 	bl	100b6e90 <plat_panic_handler>
    100b788c:	d503201f 	nop
	...

00000000100b7900 <FiqSP0>:
    100b7900:	d2800040 	mov	x0, #0x2                   	// #2
    100b7904:	97fffd62 	bl	100b6e8c <plat_report_exception>
    100b7908:	97fffd62 	bl	100b6e90 <plat_panic_handler>
    100b790c:	d503201f 	nop
	...

00000000100b7980 <SErrorSP0>:
    100b7980:	d2800060 	mov	x0, #0x3                   	// #3
    100b7984:	97fffd42 	bl	100b6e8c <plat_report_exception>
    100b7988:	97fffd42 	bl	100b6e90 <plat_panic_handler>
    100b798c:	d503201f 	nop
	...

00000000100b7a00 <SynchronousExceptionSPx>:
    100b7a00:	d2800080 	mov	x0, #0x4                   	// #4
    100b7a04:	97fffd22 	bl	100b6e8c <plat_report_exception>
    100b7a08:	97fffd22 	bl	100b6e90 <plat_panic_handler>
    100b7a0c:	d503201f 	nop
	...

00000000100b7a80 <IrqSPx>:
    100b7a80:	d28000a0 	mov	x0, #0x5                   	// #5
    100b7a84:	97fffd02 	bl	100b6e8c <plat_report_exception>
    100b7a88:	97fffd02 	bl	100b6e90 <plat_panic_handler>
    100b7a8c:	d503201f 	nop
	...

00000000100b7b00 <FiqSPx>:
    100b7b00:	d28000c0 	mov	x0, #0x6                   	// #6
    100b7b04:	97fffce2 	bl	100b6e8c <plat_report_exception>
    100b7b08:	97fffce2 	bl	100b6e90 <plat_panic_handler>
    100b7b0c:	d503201f 	nop
	...

00000000100b7b80 <SErrorSPx>:
    100b7b80:	d28000e0 	mov	x0, #0x7                   	// #7
    100b7b84:	97fffcc2 	bl	100b6e8c <plat_report_exception>
    100b7b88:	97fffcc2 	bl	100b6e90 <plat_panic_handler>
    100b7b8c:	d503201f 	nop
	...

00000000100b7c00 <SynchronousExceptionA64>:
    100b7c00:	d2800100 	mov	x0, #0x8                   	// #8
    100b7c04:	97fffca2 	bl	100b6e8c <plat_report_exception>
    100b7c08:	97fffca2 	bl	100b6e90 <plat_panic_handler>
    100b7c0c:	d503201f 	nop
	...

00000000100b7c80 <IrqA64>:
    100b7c80:	d2800120 	mov	x0, #0x9                   	// #9
    100b7c84:	97fffc82 	bl	100b6e8c <plat_report_exception>
    100b7c88:	97fffc82 	bl	100b6e90 <plat_panic_handler>
    100b7c8c:	d503201f 	nop
	...

00000000100b7d00 <FiqA64>:
    100b7d00:	d2800140 	mov	x0, #0xa                   	// #10
    100b7d04:	97fffc62 	bl	100b6e8c <plat_report_exception>
    100b7d08:	97fffc62 	bl	100b6e90 <plat_panic_handler>
    100b7d0c:	d503201f 	nop
	...

00000000100b7d80 <SErrorA64>:
    100b7d80:	d2800160 	mov	x0, #0xb                   	// #11
    100b7d84:	97fffc42 	bl	100b6e8c <plat_report_exception>
    100b7d88:	97fffc42 	bl	100b6e90 <plat_panic_handler>
    100b7d8c:	d503201f 	nop
	...

00000000100b7e00 <SynchronousExceptionA32>:
    100b7e00:	d2800180 	mov	x0, #0xc                   	// #12
    100b7e04:	97fffc22 	bl	100b6e8c <plat_report_exception>
    100b7e08:	97fffc22 	bl	100b6e90 <plat_panic_handler>
    100b7e0c:	d503201f 	nop
	...

00000000100b7e80 <IrqA32>:
    100b7e80:	d28001a0 	mov	x0, #0xd                   	// #13
    100b7e84:	97fffc02 	bl	100b6e8c <plat_report_exception>
    100b7e88:	97fffc02 	bl	100b6e90 <plat_panic_handler>
    100b7e8c:	d503201f 	nop
	...

00000000100b7f00 <FiqA32>:
    100b7f00:	d28001c0 	mov	x0, #0xe                   	// #14
    100b7f04:	97fffbe2 	bl	100b6e8c <plat_report_exception>
    100b7f08:	97fffbe2 	bl	100b6e90 <plat_panic_handler>
    100b7f0c:	d503201f 	nop
	...

00000000100b7f80 <SErrorA32>:
    100b7f80:	d28001e0 	mov	x0, #0xf                   	// #15
    100b7f84:	97fffbc2 	bl	100b6e8c <plat_report_exception>
    100b7f88:	97fffbc2 	bl	100b6e90 <plat_panic_handler>
    100b7f8c:	d503201f 	nop
	...
