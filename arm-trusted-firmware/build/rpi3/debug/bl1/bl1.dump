
build/rpi3/debug/bl1/bl1.elf:     file format elf64-littleaarch64
build/rpi3/debug/bl1/bl1.elf
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000000000

Program Header:
    LOAD off    0x0000000000010000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**16
         filesz 0x0000000000006008 memsz 0x0000000000006008 flags r-x
    LOAD off    0x000000000001e000 vaddr 0x00000000100ee000 paddr 0x0000000000006010 align 2**16
         filesz 0x00000000000000e8 memsz 0x00000000000000e8 flags rw-
    LOAD off    0x000000000001e0e8 vaddr 0x00000000100ee0e8 paddr 0x00000000100ee0e8 align 2**16
         filesz 0x0000000000000000 memsz 0x0000000000008f18 flags rw-
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
private flags = 0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00005000  0000000000000000  0000000000000000  00010000  2**11
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00001008  0000000000005000  0000000000005000  00015000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000000e8  00000000100ee000  0000000000006010  0001e000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  3 stacks        00004018  00000000100ee0e8  00000000100ee0e8  0001e0e8  2**6
                  ALLOC
  4 .bss          00000868  00000000100f2100  00000000100f2100  0001e0e8  2**5
                  ALLOC
  5 xlat_table    00004000  00000000100f3000  00000000100f3000  0001e0e8  2**12
                  ALLOC
  6 coherent_ram  00000000  00000000100f7000  00000000100f7000  0001f000  2**12
                  CONTENTS
  7 .debug_info   0000e403  0000000000000000  0000000000000000  0001f000  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003cf1  0000000000000000  0000000000000000  0002d403  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00001440  0000000000000000  0000000000000000  00031100  2**4
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00006abb  0000000000000000  0000000000000000  00032540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000028e5  0000000000000000  0000000000000000  00038ffb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      0000005e  0000000000000000  0000000000000000  0003b8e0  2**0
                  CONTENTS, READONLY
 13 .debug_loc    0000e7fa  0000000000000000  0000000000000000  0003b93e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00002450  0000000000000000  0000000000000000  0004a140  2**4
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000af0  0000000000000000  0000000000000000  0004c590  2**3
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000000 l    d  .text	0000000000000000 .text
0000000000005000 l    d  .rodata	0000000000000000 .rodata
00000000100ee000 l    d  .data	0000000000000000 .data
00000000100ee0e8 l    d  stacks	0000000000000000 stacks
00000000100f2100 l    d  .bss	0000000000000000 .bss
00000000100f3000 l    d  xlat_table	0000000000000000 xlat_table
00000000100f7000 l    d  coherent_ram	0000000000000000 coherent_ram
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_frame	0000000000000000 .debug_frame
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/bl1_entrypoint.o
000000000000001c l       .text	0000000000000000 do_cold_boot
000000000000008c l       .text	0000000000000000 do_primary_cold_boot
0000000000000000 l    df *ABS*	0000000000000000 io_fip.c
00000000000000f8 l     F .text	0000000000000008 device_type_fip
0000000000000100 l     F .text	000000000000003c fip_file_close
000000000000013c l     F .text	00000000000000d8 fip_dev_init
0000000000000214 l     F .text	0000000000000120 fip_file_read
0000000000000334 l     F .text	000000000000007c fip_dev_open
00000000000003b0 l     F .text	0000000000000040 fip_file_len
00000000000003f0 l     F .text	0000000000000154 fip_file_open
0000000000000544 l     F .text	0000000000000070 fip_dev_close
00000000100f2100 l     O .bss	0000000000000008 backend_dev_handle
00000000100f2108 l     O .bss	0000000000000008 backend_image_spec
00000000100f2110 l     O .bss	0000000000000030 current_file
00000000100f2140 l     O .bss	0000000000000010 dev_info_pool
00000000100f2150 l     O .bss	0000000000000004 fip_dev_count
00000000100f2158 l     O .bss	0000000000000008 state_pool
0000000000005040 l     O .rodata	0000000000000008 fip_dev_connector
0000000000005048 l     O .rodata	0000000000000048 fip_dev_funcs
0000000000005216 l     O .rodata	0000000000000010 uuid_null
0000000000000000 l    df *ABS*	0000000000000000 io_memmap.c
0000000000000600 l     F .text	0000000000000008 device_type_memmap
0000000000000608 l     F .text	0000000000000008 memmap_dev_close
0000000000000610 l     F .text	0000000000000030 memmap_dev_open
0000000000000640 l     F .text	0000000000000040 memmap_block_len
0000000000000680 l     F .text	0000000000000060 memmap_block_seek
00000000000006e0 l     F .text	000000000000003c memmap_block_close
000000000000071c l     F .text	0000000000000088 memmap_block_write
00000000000007a4 l     F .text	0000000000000090 memmap_block_read
0000000000000834 l     F .text	000000000000006c memmap_block_open
00000000100f2160 l     O .bss	0000000000000020 current_file
0000000000005258 l     O .rodata	0000000000000008 memmap_dev_connector
0000000000005260 l     O .rodata	0000000000000048 memmap_dev_funcs
00000000000052a8 l     O .rodata	0000000000000010 memmap_dev_info
0000000000000000 l    df *ABS*	0000000000000000 io_storage.c
00000000000008ec l     F .text	0000000000000038 is_valid_dev
0000000000000924 l     F .text	000000000000002c is_valid_entity
0000000000000950 l     F .text	0000000000000068 free_entity
00000000100f2180 l     O .bss	0000000000000004 dev_count
00000000100f2184 l     O .bss	0000000000000004 entity_count
00000000100f2188 l     O .bss	0000000000000020 entity_map
00000000100f21a8 l     O .bss	0000000000000040 entity_pool
0000000000000000 l    df *ABS*	0000000000000000 rpi3_bl1_setup.c
00000000100f21e8 l     O .bss	0000000000000010 bl1_tzram_layout
0000000000000000 l    df *ABS*	0000000000000000 rpi3_io_storage.c
0000000000000f28 l     F .text	0000000000000060 open_fip
0000000000000f88 l     F .text	0000000000000060 open_memmap
00000000100f21f8 l     O .bss	0000000000000008 fip_dev_con
00000000100f2200 l     O .bss	0000000000000008 fip_dev_handle
00000000100f2208 l     O .bss	0000000000000008 memmap_dev_con
00000000100f2210 l     O .bss	0000000000000008 memmap_dev_handle
00000000000053bc l     O .rodata	0000000000000010 bl2_uuid_spec
00000000000053cc l     O .rodata	0000000000000010 bl31_uuid_spec
00000000000053dc l     O .rodata	0000000000000010 bl32_extra1_uuid_spec
00000000000053ec l     O .rodata	0000000000000010 bl32_extra2_uuid_spec
00000000000053fc l     O .rodata	0000000000000010 bl32_uuid_spec
000000000000540c l     O .rodata	0000000000000010 bl33_uuid_spec
0000000000005420 l     O .rodata	0000000000000010 fip_block_spec
0000000000005450 l     O .rodata	0000000000000228 policies
0000000000000000 l    df *ABS*	0000000000000000 rpi3_mbox.c
00000000100f2220 l     O .bss	0000000000000100 rpi3_mbox_buffer
0000000000005678 l     O .rodata	000000000000001d __func__.2335
0000000000000000 l    df *ABS*	0000000000000000 bl1_main.c
0000000000000000 l    df *ABS*	0000000000000000 bl1_arch_setup.c
0000000000000000 l    df *ABS*	0000000000000000 bl1_context_mgmt.c
00000000100f2320 l     O .bss	0000000000000460 bl1_cpu_context
00000000100f2780 l     O .bss	0000000000000010 bl1_cpu_context_ptr
00000000000058e3 l     O .rodata	0000000000000017 __func__.2792
0000000000000000 l    df *ABS*	0000000000000000 errata_report.c
0000000000000000 l    df *ABS*	0000000000000000 context_mgmt.c
0000000000000000 l    df *ABS*	0000000000000000 plat_bl1_common.c
00000000100ee000 l     O .data	0000000000000080 bl2_img_desc.2720
0000000000000000 l    df *ABS*	0000000000000000 bl_common.c
0000000000000000 l    df *ABS*	0000000000000000 tf_log.c
00000000100ee080 l     O .data	0000000000000004 max_log_level
0000000000000000 l    df *ABS*	0000000000000000 multi_console.c
0000000000000000 l    df *ABS*	0000000000000000 plat_bl_common.c
0000000000000000 l    df *ABS*	0000000000000000 plat_log_common.c
0000000000005b88 l     O .rodata	0000000000000028 plat_prefix_str
0000000000000000 l    df *ABS*	0000000000000000 backtrace.c
0000000000001ea4 l     F .text	0000000000000040 is_address_readable
0000000000001ee4 l     F .text	0000000000000058 is_valid_object.constprop.0
0000000000000000 l    df *ABS*	0000000000000000 rpi3_common.c
00000000100f2790 l     O .bss	0000000000000030 rpi3_console
0000000000005cbd l     O .rodata	0000000000000012 __func__.2420
0000000000005cd0 l     O .rodata	00000000000000c8 plat_rpi3_mmap
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_arch.c
0000000000005d98 l     O .rodata	000000000000001c pa_range_bits_arr
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_context.c
00000000100f27c0 l     O .bss	0000000000000020 tf_base_xlat_table
00000000100f27e0 l     O .bss	0000000000000168 tf_mmap
00000000100ee088 l     O .data	0000000000000060 tf_xlat_ctx
00000000100f3000 l     O xlat_table	0000000000004000 tf_xlat_tables
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_core.c
0000000000002524 l     F .text	0000000000000040 xlat_clean_dcache_range
0000000000002668 l     F .text	0000000000000294 xlat_tables_map_region
0000000000005e0b l     O .rodata	0000000000000015 __func__.2502
0000000000000000 l    df *ABS*	0000000000000000 xlat_tables_utils.c
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/cortex_a53.o
0000000000000008 l       *ABS*	0000000000000000 CPU_MIDR_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_REG_DUMP_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_MIDR
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC
0000000000000010 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC
0000000000000018 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC
0000000000000020 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS
0000000000000020 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC
0000000000000028 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK
0000000000000028 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED
0000000000000028 l       *ABS*	0000000000000000 CPU_REG_DUMP
0000000000000028 l       *ABS*	0000000000000000 CPU_OPS_SIZE
0000000000002d5c l     F .text	0000000000000020 errata_a53_826319_wa
0000000000002d7c l     F .text	0000000000000008 check_errata_826319
0000000000002d84 l     F .text	000000000000001c a53_disable_non_temporal_hint
0000000000002da0 l     F .text	0000000000000008 check_errata_disable_non_temporal_hint
0000000000002da8 l     F .text	000000000000001c errata_a53_855873_wa
0000000000002dc4 l     F .text	0000000000000008 check_errata_855873
0000000000002dcc l     F .text	0000000000000024 check_errata_835769
0000000000002de8 l       .text	0000000000000000 errata_not_applies
0000000000002dec l       .text	0000000000000000 exit_check_errata_835769
0000000000002df0 l     F .text	0000000000000024 check_errata_843419
0000000000002e10 l       .text	0000000000000000 exit_check_errata_843419
0000000000002e14 l     F .text	0000000000000038 cortex_a53_reset_func
0000000000002e4c l     F .text	0000000000000078 cortex_a53_errata_report
0000000000005ec0 l       .rodata	0000000000000000 cortex_a53_errata_826319_str
0000000000005ef6 l       .rodata	0000000000000000 cortex_a53_cpu_str
0000000000005ec7 l       .rodata	0000000000000000 cortex_a53_errata_835769_str
0000000000005ece l       .rodata	0000000000000000 cortex_a53_errata_disable_non_temporal_hint_str
0000000000005ee8 l       .rodata	0000000000000000 cortex_a53_errata_843419_str
0000000000005eef l       .rodata	0000000000000000 cortex_a53_errata_855873_str
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/platform_mp_stack.o
00000000100ee100 l       stacks	0000000000000000 platform_normal_stacks
0000000000000006 l       *ABS*	0000000000000000 TZ_COUNT
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/plat_helpers.o
0000000000002f38 l       .text	0000000000000000 poll_mailbox
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/bl1_exceptions.o
0000000000004000 l     F .text	0000000000000000 SynchronousExceptionSP0
0000000000004080 l     F .text	0000000000000000 IrqSP0
0000000000004100 l     F .text	0000000000000000 FiqSP0
0000000000004180 l     F .text	0000000000000000 SErrorSP0
0000000000004200 l     F .text	0000000000000000 SynchronousExceptionSPx
0000000000004280 l     F .text	0000000000000000 IrqSPx
0000000000004300 l     F .text	0000000000000000 FiqSPx
0000000000004380 l     F .text	0000000000000000 SErrorSPx
0000000000004400 l     F .text	0000000000000000 SynchronousExceptionA64
0000000000003018 l       .text	0000000000000000 unexpected_sync_exception
0000000000002fa8 l     F .text	0000000000000070 smc_handler64
0000000000004480 l     F .text	0000000000000000 IrqA64
0000000000004500 l     F .text	0000000000000000 FiqA64
0000000000004580 l     F .text	0000000000000000 SErrorA64
0000000000004600 l     F .text	0000000000000000 SynchronousExceptionA32
0000000000004680 l     F .text	0000000000000000 IrqA32
0000000000004700 l     F .text	0000000000000000 FiqA32
0000000000004780 l     F .text	0000000000000000 SErrorA32
0000000000003028 l       .text	0000000000000000 smc_handler
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/cpu_helpers.o
0000000000000008 l       *ABS*	0000000000000000 CPU_MIDR_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS_SIZE
0000000000000008 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_REG_DUMP_SIZE
0000000000000000 l       *ABS*	0000000000000000 CPU_MIDR
0000000000000008 l       *ABS*	0000000000000000 CPU_RESET_FUNC
0000000000000010 l       *ABS*	0000000000000000 CPU_EXTRA1_FUNC
0000000000000018 l       *ABS*	0000000000000000 CPU_EXTRA2_FUNC
0000000000000020 l       *ABS*	0000000000000000 CPU_PWR_DWN_OPS
0000000000000020 l       *ABS*	0000000000000000 CPU_ERRATA_FUNC
0000000000000028 l       *ABS*	0000000000000000 CPU_ERRATA_LOCK
0000000000000028 l       *ABS*	0000000000000000 CPU_ERRATA_PRINTED
0000000000000028 l       *ABS*	0000000000000000 CPU_REG_DUMP
0000000000000028 l       *ABS*	0000000000000000 CPU_OPS_SIZE
00000000000030cc l       .text	0000000000000000 error_exit
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/context.o
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/debug.o
0000000000005f20 l       .rodata	0000000000000000 assert_msg1
0000000000005f2e l       .rodata	0000000000000000 assert_msg2
00000000000032f0 l       .text	0000000000000000 _assert_loop
00000000000032d4 l       .text	0000000000000000 dec_print_loop
0000000000005f35 l       .rodata	0000000000000000 panic_msg
0000000000003358 l       .text	0000000000000000 panic_common
000000000000337c l       .text	0000000000000000 _panic_handler
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/cache_helpers.o
00000000000033b8 l       .text	0000000000000000 exit_loop_civac
00000000000033a4 l       .text	0000000000000000 loop_civac
00000000000033f0 l       .text	0000000000000000 exit_loop_cvac
00000000000033dc l       .text	0000000000000000 loop_cvac
0000000000003428 l       .text	0000000000000000 exit_loop_ivac
0000000000003414 l       .text	0000000000000000 loop_ivac
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/misc_helpers.o
0000000000003434 l     F .text	0000000000000114 zeromem_dczva
0000000000003560 l       .text	0000000000000000 m_loop16
0000000000003578 l       .text	0000000000000000 m_loop1
000000000000358c l       .text	0000000000000000 m_end
0000000000003594 l       .text	0000000000000000 do_disable_mmu_el3
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/platform_helpers.o
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/16550_console.o
000000000000362c l       .text	0000000000000000 init_fail
0000000000003684 l       .text	0000000000000000 register_fail
0000000000003714 l       .text	0000000000000000 no_char
0000000000000000 l    df *ABS*	0000000000000000 ./build/rpi3/debug/bl1/enable_mmu.o
0000000000000000 l    df *ABS*	0000000000000000 assert.c
0000000000000000 l    df *ABS*	0000000000000000 memcmp.c
0000000000000000 l    df *ABS*	0000000000000000 memcpy.c
0000000000000000 l    df *ABS*	0000000000000000 memmove.c
0000000000000000 l    df *ABS*	0000000000000000 printf.c
00000000000038a8 l     F .text	00000000000000c4 unsigned_num_print
0000000000000000 l    df *ABS*	0000000000000000 putchar.c
0000000000000000 l    df *ABS*	0000000000000000 
0000000000003dd0 g     F .text	000000000000002c putchar
00000000000018a8 g     F .text	00000000000000c8 cm_prepare_el3_exit
0000000000001d50 g     F .text	0000000000000034 console_set_scope
0000000000001830 g     F .text	000000000000002c cm_el1_sysregs_context_restore
0000000000001cdc g     F .text	0000000000000074 console_register
00000000100f7000 g       coherent_ram	0000000000000000 __COHERENT_RAM_END__
0000000000003060 g     F .text	0000000000000034 reset_handler
0000000000003764 g     F .text	000000000000001c console_16550_flush
000000000000342c g     F .text	0000000000000008 zeromem
000000000000501e g     O .rodata	000000000000001c version_string
0000000000001978  w    F .text	0000000000000004 bl1_plat_set_ep_info
0000000000002b74 g     F .text	000000000000003c mmap_add_ctx
0000000000001b94 g     F .text	0000000000000038 print_entry_point_info
0000000000001524 g     F .text	0000000000000030 cm_get_context
00000000000031d8 g     F .text	0000000000000048 save_gp_registers
0000000000003d7c g     F .text	0000000000000054 printf
00000000100f2950 g     O .bss	0000000000000018 mmu_cfg_params
0000000000002d58 g     F .text	0000000000000004 xlat_tables_print
0000000000003688 g     F .text	000000000000004c console_16550_core_putc
00000000000036d4 g     F .text	000000000000001c console_16550_putc
0000000000003298 g     F .text	0000000000000060 asm_assert
0000000000003340 g     F .text	0000000000000044 do_panic
00000000000012d4 g     F .text	0000000000000188 bl1_main
0000000000003874 g     F .text	0000000000000034 memmove
0000000000002350 g     F .text	00000000000000e0 setup_mmu_cfg
0000000000006010 g       *ABS*	0000000000000000 __DATA_ROM_START__
0000000000001e74  w    F .text	0000000000000030 plat_log_get_prefix
00000000000035b4  w    F .text	0000000000000004 plat_report_exception
0000000000005000 g     O .rodata	000000000000001e build_message
0000000000003548 g     F .text	0000000000000048 memcpy16
0000000000003274 g     F .text	0000000000000024 el3_exit
0000000000001554 g     F .text	0000000000000030 cm_set_context
0000000000002474 g     F .text	0000000000000068 init_xlat_tables
0000000000002264 g     F .text	0000000000000038 xlat_arch_regime_get_xn_desc
00000000100f7000 g       xlat_table	0000000000000000 __BL1_RAM_END__
0000000000003854 g     F .text	0000000000000020 memcpy
0000000000003434 g     F .text	0000000000000114 zero_normalmem
000000000000145c g     F .text	000000000000002c bl1_print_next_bl_ep_info
0000000000003220 g     F .text	0000000000000048 restore_gp_registers
0000000000002f5c g     F .text	0000000000000004 platform_mem_init
0000000000002464 g     F .text	0000000000000010 mmap_add
00000000000035bc  w    F .text	0000000000000008 plat_panic_handler
00000000100f2100 g       stacks	0000000000000000 __STACKS_END__
0000000000002088 g     F .text	0000000000000060 rpi3_console_init
00000000000033bc g     F .text	0000000000000038 clean_dcache_range
00000000000000e8 g       *ABS*	0000000000000000 __DATA_SIZE__
0000000000000c90 g     F .text	0000000000000064 io_size
00000000100ee000 g       .data	0000000000000000 __BL1_RAM_START__
00000000000009fc g     F .text	0000000000000044 io_dev_open
0000000000002ee0  w    F .text	0000000000000010 plat_set_my_stack
0000000000003310 g     F .text	0000000000000030 asm_print_hex
0000000000000868 g       *ABS*	0000000000000000 __BSS_SIZE__
00000000000032f8 g     F .text	0000000000000018 asm_print_str
0000000000003590 g     F .text	000000000000001c disable_mmu_el3
0000000000003738 g     F .text	000000000000002c console_16550_core_flush
0000000000002f88 g     F .text	000000000000000c plat_crash_console_flush
0000000000001e64  w    F .text	0000000000000008 plat_error_handler
0000000000001d84 g     F .text	0000000000000074 console_putc
0000000000002f1c g     F .text	0000000000000038 plat_secondary_cold_boot_setup
000000000000126c g     F .text	0000000000000068 bl1_calc_bl2_mem_layout
0000000000002f60 g     F .text	000000000000001c plat_crash_console_init
0000000000003384 g     F .text	0000000000000038 flush_dcache_range
00000000000036f0 g     F .text	000000000000002c console_16550_core_getc
0000000000001f3c g     F .text	000000000000014c backtrace
000000000000396c g     F .text	0000000000000410 vprintf
0000000000002230 g     F .text	0000000000000034 is_dcache_enabled
0000000000002f94 g     F .text	0000000000000014 plat_reset_handler
0000000000003780 g     F .text	0000000000000070 enable_mmu_direct_el3
0000000000003094 g     F .text	000000000000003c get_cpu_ops_ptr
0000000000001804 g     F .text	000000000000002c cm_init_my_context
0000000000001514 g     F .text	0000000000000010 bl1_arch_setup
00000000000019ec g     F .text	00000000000001a8 load_auth_image
0000000000001984  w    F .text	000000000000000c bl1_plat_get_image_desc
00000000000020e8 g     F .text	0000000000000098 rpi3_setup_page_tables
0000000000000e70 g     F .text	00000000000000b8 bl1_platform_setup
0000000000006008 g       .rodata	0000000000000000 __RODATA_END__
000000000000229c g     F .text	0000000000000028 xlat_arch_current_el
0000000000001990  w    F .text	000000000000005c bl1_plat_handle_post_image_load
00000000100ee0e8 g       .data	0000000000000000 __DATA_RAM_END__
0000000000001708 g     F .text	00000000000000fc cm_setup_context
0000000000005000 g       .rodata	0000000000000000 __RODATA_START__
0000000000005fe0 g       .rodata	0000000000000000 __CPU_OPS_START__
0000000000004000 g       .text	0000000000000000 bl1_exceptions
0000000000002180 g     F .text	000000000000006c tcr_physical_addr_size_bits
00000000000033f4 g     F .text	0000000000000038 inv_dcache_range
00000000100ee084 g     O .data	0000000000000001 console_state
0000000000003268 g     F .text	000000000000000c restore_gp_registers_eret
0000000000003820 g     F .text	0000000000000034 memcmp
00000000000030d0 g     F .text	0000000000000010 cpu_get_rev_var
0000000000002564 g     F .text	0000000000000104 xlat_desc
0000000000002f08 g     F .text	0000000000000014 plat_is_my_cpu_primary
0000000000002ef8 g     F .text	0000000000000010 plat_rpi3_calc_core_pos
00000000100f2968 g       .bss	0000000000000000 __BSS_END__
0000000000006008 g       .rodata	0000000000000000 __CPU_OPS_END__
00000000000010f8 g     F .text	0000000000000174 rpi3_vc_hardware_get_board_revision
0000000000002f54 g     F .text	0000000000000008 plat_get_my_entrypoint
0000000000000c10 g     F .text	0000000000000080 io_seek
0000000000000d70 g     F .text	0000000000000064 io_close
00000000000035b8  w    F .text	0000000000000004 bl1_plat_prepare_exit
0000000000000e0c g     F .text	0000000000000064 bl1_plat_arch_setup
000000000000185c g     F .text	000000000000004c cm_set_next_eret_context
00000000100f7000 g       coherent_ram	0000000000000000 __COHERENT_RAM_START__
0000000000003634 g     F .text	0000000000000054 console_16550_register
0000000000005fe0 g       .rodata	0000000000000000 __PARSER_LIB_DESCS_END__
0000000000001670 g     F .text	0000000000000098 errata_print_msg
00000000000060f8 g       *ABS*	0000000000000000 __BL1_ROM_END__
0000000000000000 g       *ABS*	0000000000000000 __COHERENT_RAM_UNALIGNED_SIZE__
00000000000035ac g     F .text	0000000000000008 disable_mmu_icache_el3
00000000000021ec g     F .text	0000000000000044 xlat_arch_get_max_supported_pa
0000000000001584 g     F .text	00000000000000ec bl1_prepare_next_image
0000000000005000 g       .text	0000000000000000 __TEXT_END__
0000000000001970  w    F .text	0000000000000008 bl1_plat_get_next_image_id
0000000000001df8 g     F .text	000000000000006c console_flush
0000000000000a40 g     F .text	0000000000000068 io_dev_init
0000000000000cf4 g     F .text	000000000000007c io_read
0000000000000dd4 g     F .text	000000000000000c bl1_plat_sec_mem_layout
0000000000003108 g     F .text	000000000000001c print_errata_status
00000000100f2100 g       .bss	0000000000000000 __BSS_START__
00000000100ee000 g       .data	0000000000000000 __DATA_RAM_START__
00000000000028fc g     F .text	0000000000000278 mmap_add_region_ctx
0000000000001e6c  w    F .text	0000000000000008 plat_try_next_boot_source
0000000000002f7c g     F .text	000000000000000c plat_crash_console_putc
00000000000030f4 g     F .text	0000000000000014 cpu_rev_var_hs
0000000000000b08 g     F .text	0000000000000108 io_open
0000000000001c94 g     F .text	0000000000000048 console_is_registered
00000000000022c4 g     F .text	000000000000008c is_mmu_enabled_ctx
0000000000001078 g     F .text	0000000000000080 plat_get_image_source
0000000000001bcc g     F .text	00000000000000c8 tf_log
00000000000009b8 g     F .text	0000000000000044 io_register_device
00000000000030e0 g     F .text	0000000000000014 cpu_rev_var_ls
00000000100f7000 g       coherent_ram	0000000000000000 __COHERENT_RAM_END_UNALIGNED__
000000000000371c g     F .text	000000000000001c console_16550_getc
00000000100ee0e8 g       stacks	0000000000000000 __STACKS_START__
00000000000024dc g     F .text	0000000000000048 enable_mmu_el3
0000000000001488 g     F .text	000000000000008c bl1_smc_handler
000000000000197c  w    F .text	0000000000000008 bl1_plat_handle_pre_image_load
0000000000000fe8 g     F .text	0000000000000090 plat_rpi3_io_setup
0000000000002bb0 g     F .text	00000000000001a4 init_xlat_tables_ctx
0000000000002ef0 g     F .text	0000000000000008 plat_my_core_pos
00000000000008a0 g     F .text	000000000000004c register_io_dev_memmap
0000000000000aa8 g     F .text	0000000000000060 io_dev_close
00000000000037f0 g     F .text	0000000000000030 __assert
0000000000003358  w      .text	0000000000000000 el3_panic
0000000000000de0 g     F .text	000000000000002c bl1_early_platform_setup
0000000000002d54 g     F .text	0000000000000004 xlat_mmap_print
00000000000005b4 g     F .text	000000000000004c register_io_dev_fip
00000000000035c4 g     F .text	0000000000000070 console_16550_core_init
0000000000003124 g     F .text	00000000000000b4 el1_sysregs_context_restore
00000000100f2948 g     O .bss	0000000000000008 console_list
0000000000000000 g     F .text	00000000000000f8 bl1_entrypoint
0000000000002ec4  w    F .text	000000000000001c plat_get_my_stack
0000000000002430 g     F .text	0000000000000034 mmap_add_region
0000000000000000 g       .text	0000000000000000 __TEXT_START__
0000000000005fe0 g       .rodata	0000000000000000 __PARSER_LIB_DESCS_START__



Disassembly of section .text:

0000000000000000 <bl1_entrypoint>:
       0:	d2810600 	mov	x0, #0x830                 	// #2096
       4:	f2a618a0 	movk	x0, #0x30c5, lsl #16
       8:	d51e1000 	msr	sctlr_el3, x0
       c:	d5033fdf 	isb
      10:	94000bd1 	bl	2f54 <plat_get_my_entrypoint>
      14:	b4000040 	cbz	x0, 1c <do_cold_boot>
      18:	d61f0000 	br	x0

000000000000001c <do_cold_boot>:
      1c:	1001ff20 	adr	x0, 4000 <SynchronousExceptionSP0>
      20:	d51ec000 	msr	vbar_el3, x0
      24:	d5033fdf 	isb
      28:	94000c0e 	bl	3060 <reset_handler>
      2c:	d2820141 	mov	x1, #0x100a                	// #4106
      30:	d53e1000 	mrs	x0, sctlr_el3
      34:	aa010000 	orr	x0, x0, x1
      38:	d51e1000 	msr	sctlr_el3, x0
      3c:	d5033fdf 	isb
      40:	d2804700 	mov	x0, #0x238                 	// #568
      44:	f2a00060 	movk	x0, #0x3, lsl #16
      48:	d51e1100 	msr	scr_el3, x0
      4c:	d2900000 	mov	x0, #0x8000                	// #32768
      50:	f2a00020 	movk	x0, #0x1, lsl #16
      54:	d51e1320 	msr	mdcr_el3, x0
      58:	d50344ff 	msr	daifclr, #0x4
      5c:	d2800000 	mov	x0, #0x0                   	// #0
      60:	d51e1140 	msr	cptr_el3, x0
      64:	d5380400 	mrs	x0, id_aa64pfr0_el1
      68:	d370cc00 	ubfx	x0, x0, #48, #4
      6c:	f100041f 	cmp	x0, #0x1
      70:	54000061 	b.ne	7c <CPU_ERRATA_LOCK+0x54>  // b.any
      74:	d2a02000 	mov	x0, #0x1000000             	// #16777216
      78:	d51b42a0 	msr	dit, x0
      7c:	94000ba3 	bl	2f08 <plat_is_my_cpu_primary>
      80:	35000060 	cbnz	w0, 8c <do_primary_cold_boot>
      84:	94000ba6 	bl	2f1c <plat_secondary_cold_boot_setup>
      88:	94000cb4 	bl	3358 <el3_panic>

000000000000008c <do_primary_cold_boot>:
      8c:	94000bb4 	bl	2f5c <platform_mem_init>
      90:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
      94:	91040000 	add	x0, x0, #0x100
      98:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
      9c:	9125a021 	add	x1, x1, #0x968
      a0:	cb000021 	sub	x1, x1, x0
      a4:	94000ce2 	bl	342c <zeromem>
      a8:	f00807a0 	adrp	x0, 100f7000 <__BL1_RAM_END__>
      ac:	91000000 	add	x0, x0, #0x0
      b0:	f00807a1 	adrp	x1, 100f7000 <__BL1_RAM_END__>
      b4:	91000021 	add	x1, x1, #0x0
      b8:	cb000021 	sub	x1, x1, x0
      bc:	94000cdc 	bl	342c <zeromem>
      c0:	d0080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
      c4:	91000000 	add	x0, x0, #0x0
      c8:	d0000021 	adrp	x1, 6000 <__CPU_OPS_START__+0x20>
      cc:	91004021 	add	x1, x1, #0x10
      d0:	d0080762 	adrp	x2, 100ee000 <__BL1_RAM_START__>
      d4:	9103a042 	add	x2, x2, #0xe8
      d8:	cb000042 	sub	x2, x2, x0
      dc:	94000d1b 	bl	3548 <memcpy16>
      e0:	d50040bf 	msr	spsel, #0x0
      e4:	94000b7f 	bl	2ee0 <plat_set_my_stack>
      e8:	9400033e 	bl	de0 <bl1_early_platform_setup>
      ec:	94000348 	bl	e0c <bl1_plat_arch_setup>
      f0:	94000479 	bl	12d4 <bl1_main>
      f4:	14000c60 	b	3274 <el3_exit>

00000000000000f8 <device_type_fip>:
      f8:	52800080 	mov	w0, #0x4                   	// #4
      fc:	d65f03c0 	ret

0000000000000100 <fip_file_close>:
     100:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     104:	910003fd 	mov	x29, sp
     108:	f9000bf3 	str	x19, [sp, #16]
     10c:	aa0003f3 	mov	x19, x0
     110:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     114:	91044000 	add	x0, x0, #0x110
     118:	f9400c01 	ldr	x1, [x0, #24]
     11c:	b4000061 	cbz	x1, 128 <fip_file_close+0x28>
     120:	d2800601 	mov	x1, #0x30                  	// #48
     124:	94000cc2 	bl	342c <zeromem>
     128:	f900067f 	str	xzr, [x19, #8]
     12c:	52800000 	mov	w0, #0x0                   	// #0
     130:	f9400bf3 	ldr	x19, [sp, #16]
     134:	a8c27bfd 	ldp	x29, x30, [sp], #32
     138:	d65f03c0 	ret

000000000000013c <fip_dev_init>:
     13c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
     140:	910003fd 	mov	x29, sp
     144:	a90153f3 	stp	x19, x20, [sp, #16]
     148:	aa0103f3 	mov	x19, x1
     14c:	2a1303e0 	mov	w0, w19
     150:	d0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
     154:	91040281 	add	x1, x20, #0x100
     158:	f90013f5 	str	x21, [sp, #32]
     15c:	d0080795 	adrp	x21, 100f2000 <platform_normal_stacks+0x3f00>
     160:	910422a2 	add	x2, x21, #0x108
     164:	940003c5 	bl	1078 <plat_get_image_source>
     168:	34000180 	cbz	w0, 198 <fip_dev_init+0x5c>
     16c:	2a0003e2 	mov	w2, w0
     170:	2a1303e1 	mov	w1, w19
     174:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     178:	91024000 	add	x0, x0, #0x90
     17c:	12800033 	mov	w19, #0xfffffffe            	// #-2
     180:	94000693 	bl	1bcc <tf_log>
     184:	2a1303e0 	mov	w0, w19
     188:	a94153f3 	ldp	x19, x20, [sp, #16]
     18c:	f94013f5 	ldr	x21, [sp, #32]
     190:	a8c57bfd 	ldp	x29, x30, [sp], #80
     194:	d65f03c0 	ret
     198:	f94086a1 	ldr	x1, [x21, #264]
     19c:	9100c3e2 	add	x2, sp, #0x30
     1a0:	f9408280 	ldr	x0, [x20, #256]
     1a4:	94000259 	bl	b08 <io_open>
     1a8:	340000c0 	cbz	w0, 1c0 <fip_dev_init+0x84>
     1ac:	2a0003e2 	mov	w2, w0
     1b0:	2a1303e1 	mov	w1, w19
     1b4:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     1b8:	91030400 	add	x0, x0, #0xc1
     1bc:	17fffff0 	b	17c <fip_dev_init+0x40>
     1c0:	f9401be0 	ldr	x0, [sp, #48]
     1c4:	9100e3e3 	add	x3, sp, #0x38
     1c8:	d2800202 	mov	x2, #0x10                  	// #16
     1cc:	910103e1 	add	x1, sp, #0x40
     1d0:	940002c9 	bl	cf4 <io_read>
     1d4:	2a0003f3 	mov	w19, w0
     1d8:	35000180 	cbnz	w0, 208 <fip_dev_init+0xcc>
     1dc:	b94043e1 	ldr	w1, [sp, #64]
     1e0:	52800020 	mov	w0, #0x1                   	// #1
     1e4:	72b54c80 	movk	w0, #0xaa64, lsl #16
     1e8:	6b00003f 	cmp	w1, w0
     1ec:	54000061 	b.ne	1f8 <fip_dev_init+0xbc>  // b.any
     1f0:	b94047e0 	ldr	w0, [sp, #68]
     1f4:	350000a0 	cbnz	w0, 208 <fip_dev_init+0xcc>
     1f8:	12800033 	mov	w19, #0xfffffffe            	// #-2
     1fc:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     200:	91039400 	add	x0, x0, #0xe5
     204:	94000672 	bl	1bcc <tf_log>
     208:	f9401be0 	ldr	x0, [sp, #48]
     20c:	940002d9 	bl	d70 <io_close>
     210:	17ffffdd 	b	184 <fip_dev_init+0x48>

0000000000000214 <fip_file_read>:
     214:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
     218:	910003fd 	mov	x29, sp
     21c:	a90153f3 	stp	x19, x20, [sp, #16]
     220:	a9025bf5 	stp	x21, x22, [sp, #32]
     224:	f9001bf7 	str	x23, [sp, #48]
     228:	b50000a0 	cbnz	x0, 23c <fip_file_read+0x28>
     22c:	52802f01 	mov	w1, #0x178                 	// #376
     230:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     234:	9106a800 	add	x0, x0, #0x1aa
     238:	94000d6e 	bl	37f0 <__assert>
     23c:	aa0303f5 	mov	x21, x3
     240:	b5000063 	cbnz	x3, 24c <fip_file_read+0x38>
     244:	52802f21 	mov	w1, #0x179                 	// #377
     248:	17fffffa 	b	230 <fip_file_read+0x1c>
     24c:	aa0003f3 	mov	x19, x0
     250:	f9400400 	ldr	x0, [x0, #8]
     254:	b5000060 	cbnz	x0, 260 <fip_file_read+0x4c>
     258:	52802f41 	mov	w1, #0x17a                 	// #378
     25c:	17fffff5 	b	230 <fip_file_read+0x1c>
     260:	aa0103f6 	mov	x22, x1
     264:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     268:	f9408401 	ldr	x1, [x0, #264]
     26c:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     270:	f9408000 	ldr	x0, [x0, #256]
     274:	aa0203f7 	mov	x23, x2
     278:	910123e2 	add	x2, sp, #0x48
     27c:	94000223 	bl	b08 <io_open>
     280:	34000180 	cbz	w0, 2b0 <fip_file_read+0x9c>
     284:	12800033 	mov	w19, #0xfffffffe            	// #-2
     288:	2a0003e1 	mov	w1, w0
     28c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     290:	9106f800 	add	x0, x0, #0x1be
     294:	9400064e 	bl	1bcc <tf_log>
     298:	2a1303e0 	mov	w0, w19
     29c:	a94153f3 	ldp	x19, x20, [sp, #16]
     2a0:	a9425bf5 	ldp	x21, x22, [sp, #32]
     2a4:	f9401bf7 	ldr	x23, [sp, #48]
     2a8:	a8c57bfd 	ldp	x29, x30, [sp], #80
     2ac:	d65f03c0 	ret
     2b0:	f9400674 	ldr	x20, [x19, #8]
     2b4:	52800021 	mov	w1, #0x1                   	// #1
     2b8:	f9400e80 	ldr	x0, [x20, #24]
     2bc:	b9400282 	ldr	w2, [x20]
     2c0:	8b000042 	add	x2, x2, x0
     2c4:	f94027e0 	ldr	x0, [sp, #72]
     2c8:	94000252 	bl	c10 <io_seek>
     2cc:	34000100 	cbz	w0, 2ec <fip_file_read+0xd8>
     2d0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     2d4:	91076000 	add	x0, x0, #0x1d8
     2d8:	9400063d 	bl	1bcc <tf_log>
     2dc:	12800033 	mov	w19, #0xfffffffe            	// #-2
     2e0:	f94027e0 	ldr	x0, [sp, #72]
     2e4:	940002a3 	bl	d70 <io_close>
     2e8:	17ffffec 	b	298 <fip_file_read+0x84>
     2ec:	f94027e0 	ldr	x0, [sp, #72]
     2f0:	910103e3 	add	x3, sp, #0x40
     2f4:	aa1703e2 	mov	x2, x23
     2f8:	aa1603e1 	mov	x1, x22
     2fc:	9400027e 	bl	cf4 <io_read>
     300:	2a0003f3 	mov	w19, w0
     304:	340000c0 	cbz	w0, 31c <fip_file_read+0x108>
     308:	2a0003e1 	mov	w1, w0
     30c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     310:	9107e000 	add	x0, x0, #0x1f8
     314:	9400062e 	bl	1bcc <tf_log>
     318:	17fffff1 	b	2dc <fip_file_read+0xc8>
     31c:	f94023e1 	ldr	x1, [sp, #64]
     320:	b9400280 	ldr	w0, [x20]
     324:	f90002a1 	str	x1, [x21]
     328:	0b010000 	add	w0, w0, w1
     32c:	b9000280 	str	w0, [x20]
     330:	17ffffec 	b	2e0 <fip_file_read+0xcc>

0000000000000334 <fip_dev_open>:
     334:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     338:	910003fd 	mov	x29, sp
     33c:	b50000a1 	cbnz	x1, 350 <fip_dev_open+0x1c>
     340:	528018a1 	mov	w1, #0xc5                  	// #197
     344:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     348:	9106a800 	add	x0, x0, #0x1aa
     34c:	94000d29 	bl	37f0 <__assert>
     350:	d0080785 	adrp	x5, 100f2000 <platform_normal_stacks+0x3f00>
     354:	b94150a2 	ldr	w2, [x5, #336]
     358:	35000282 	cbnz	w2, 3a8 <fip_dev_open+0x74>
     35c:	d0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
     360:	91056047 	add	x7, x2, #0x158
     364:	f940ac43 	ldr	x3, [x2, #344]
     368:	b50001c3 	cbnz	x3, 3a0 <fip_dev_open+0x6c>
     36c:	d0080786 	adrp	x6, 100f2000 <platform_normal_stacks+0x3f00>
     370:	910500c4 	add	x4, x6, #0x140
     374:	f900ac40 	str	x0, [x2, #344]
     378:	b0000023 	adrp	x3, 5000 <__TEXT_END__>
     37c:	91012063 	add	x3, x3, #0x48
     380:	f900a0c3 	str	x3, [x6, #320]
     384:	f9000487 	str	x7, [x4, #8]
     388:	52800023 	mov	w3, #0x1                   	// #1
     38c:	52800000 	mov	w0, #0x0                   	// #0
     390:	b90150a3 	str	w3, [x5, #336]
     394:	f9000024 	str	x4, [x1]
     398:	a8c17bfd 	ldp	x29, x30, [sp], #16
     39c:	d65f03c0 	ret
     3a0:	52801321 	mov	w1, #0x99                  	// #153
     3a4:	17ffffe8 	b	344 <fip_dev_open+0x10>
     3a8:	12800160 	mov	w0, #0xfffffff4            	// #-12
     3ac:	17fffffb 	b	398 <fip_dev_open+0x64>

00000000000003b0 <fip_file_len>:
     3b0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     3b4:	910003fd 	mov	x29, sp
     3b8:	b50000a0 	cbnz	x0, 3cc <fip_file_len+0x1c>
     3bc:	52802ca1 	mov	w1, #0x165                 	// #357
     3c0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     3c4:	9106a800 	add	x0, x0, #0x1aa
     3c8:	94000d0a 	bl	37f0 <__assert>
     3cc:	b5000061 	cbnz	x1, 3d8 <fip_file_len+0x28>
     3d0:	52802cc1 	mov	w1, #0x166                 	// #358
     3d4:	17fffffb 	b	3c0 <fip_file_len+0x10>
     3d8:	f9400400 	ldr	x0, [x0, #8]
     3dc:	f9401000 	ldr	x0, [x0, #32]
     3e0:	f9000020 	str	x0, [x1]
     3e4:	52800000 	mov	w0, #0x0                   	// #0
     3e8:	a8c17bfd 	ldp	x29, x30, [sp], #16
     3ec:	d65f03c0 	ret

00000000000003f0 <fip_file_open>:
     3f0:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
     3f4:	910003fd 	mov	x29, sp
     3f8:	a90153f3 	stp	x19, x20, [sp, #16]
     3fc:	a9025bf5 	stp	x21, x22, [sp, #32]
     400:	a90363f7 	stp	x23, x24, [sp, #48]
     404:	b50000a1 	cbnz	x1, 418 <fip_file_open+0x28>
     408:	52802381 	mov	w1, #0x11c                 	// #284
     40c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     410:	9106a800 	add	x0, x0, #0x1aa
     414:	94000cf7 	bl	37f0 <__assert>
     418:	aa0203f7 	mov	x23, x2
     41c:	b5000062 	cbnz	x2, 428 <fip_file_open+0x38>
     420:	528023a1 	mov	w1, #0x11d                 	// #285
     424:	17fffffa 	b	40c <fip_file_open+0x1c>
     428:	d0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
     42c:	91044294 	add	x20, x20, #0x110
     430:	f9400e80 	ldr	x0, [x20, #24]
     434:	b4000160 	cbz	x0, 460 <fip_file_open+0x70>
     438:	12800173 	mov	w19, #0xfffffff4            	// #-12
     43c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     440:	91044c00 	add	x0, x0, #0x113
     444:	940005e2 	bl	1bcc <tf_log>
     448:	2a1303e0 	mov	w0, w19
     44c:	a94153f3 	ldp	x19, x20, [sp, #16]
     450:	a9425bf5 	ldp	x21, x22, [sp, #32]
     454:	a94363f7 	ldp	x23, x24, [sp, #48]
     458:	a8c57bfd 	ldp	x29, x30, [sp], #80
     45c:	d65f03c0 	ret
     460:	aa0103f8 	mov	x24, x1
     464:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     468:	f9408401 	ldr	x1, [x0, #264]
     46c:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     470:	f9408000 	ldr	x0, [x0, #256]
     474:	910103e2 	add	x2, sp, #0x40
     478:	940001a4 	bl	b08 <io_open>
     47c:	340000e0 	cbz	w0, 498 <fip_file_open+0xa8>
     480:	2a0003e1 	mov	w1, w0
     484:	12800033 	mov	w19, #0xfffffffe            	// #-2
     488:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     48c:	91050c00 	add	x0, x0, #0x143
     490:	940005cf 	bl	1bcc <tf_log>
     494:	17ffffed 	b	448 <fip_file_open+0x58>
     498:	f94023e0 	ldr	x0, [sp, #64]
     49c:	d2800202 	mov	x2, #0x10                  	// #16
     4a0:	52800021 	mov	w1, #0x1                   	// #1
     4a4:	940001db 	bl	c10 <io_seek>
     4a8:	35000280 	cbnz	w0, 4f8 <fip_file_open+0x108>
     4ac:	b0000036 	adrp	x22, 5000 <__TEXT_END__>
     4b0:	91085ad6 	add	x22, x22, #0x216
     4b4:	91002295 	add	x21, x20, #0x8
     4b8:	f94023e0 	ldr	x0, [sp, #64]
     4bc:	910123e3 	add	x3, sp, #0x48
     4c0:	d2800502 	mov	x2, #0x28                  	// #40
     4c4:	aa1503e1 	mov	x1, x21
     4c8:	9400020b 	bl	cf4 <io_read>
     4cc:	2a0003f3 	mov	w19, w0
     4d0:	350001e0 	cbnz	w0, 50c <fip_file_open+0x11c>
     4d4:	d2800202 	mov	x2, #0x10                  	// #16
     4d8:	aa1803e1 	mov	x1, x24
     4dc:	aa1503e0 	mov	x0, x21
     4e0:	94000cd0 	bl	3820 <memcmp>
     4e4:	2a0003f3 	mov	w19, w0
     4e8:	35000200 	cbnz	w0, 528 <fip_file_open+0x138>
     4ec:	b900029f 	str	wzr, [x20]
     4f0:	f90006f4 	str	x20, [x23, #8]
     4f4:	1400000a 	b	51c <fip_file_open+0x12c>
     4f8:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     4fc:	9105c000 	add	x0, x0, #0x170
     500:	940005b3 	bl	1bcc <tf_log>
     504:	12800033 	mov	w19, #0xfffffffe            	// #-2
     508:	14000005 	b	51c <fip_file_open+0x12c>
     50c:	2a0003e1 	mov	w1, w0
     510:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     514:	91064000 	add	x0, x0, #0x190
     518:	940005ad 	bl	1bcc <tf_log>
     51c:	f94023e0 	ldr	x0, [sp, #64]
     520:	94000214 	bl	d70 <io_close>
     524:	17ffffc9 	b	448 <fip_file_open+0x58>
     528:	d2800202 	mov	x2, #0x10                  	// #16
     52c:	aa1603e1 	mov	x1, x22
     530:	aa1503e0 	mov	x0, x21
     534:	94000cbb 	bl	3820 <memcmp>
     538:	35fffc00 	cbnz	w0, 4b8 <fip_file_open+0xc8>
     53c:	f9000e9f 	str	xzr, [x20, #24]
     540:	17fffff1 	b	504 <fip_file_open+0x114>

0000000000000544 <fip_dev_close>:
     544:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     548:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     54c:	910003fd 	mov	x29, sp
     550:	f900803f 	str	xzr, [x1, #256]
     554:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     558:	f900843f 	str	xzr, [x1, #264]
     55c:	b50000a0 	cbnz	x0, 570 <fip_dev_close+0x2c>
     560:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     564:	9106a800 	add	x0, x0, #0x1aa
     568:	52801581 	mov	w1, #0xac                  	// #172
     56c:	94000ca1 	bl	37f0 <__assert>
     570:	f9400400 	ldr	x0, [x0, #8]
     574:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     578:	f940ac21 	ldr	x1, [x1, #344]
     57c:	f9400002 	ldr	x2, [x0]
     580:	eb01005f 	cmp	x2, x1
     584:	54000141 	b.ne	5ac <fip_dev_close+0x68>  // b.any
     588:	d2800101 	mov	x1, #0x8                   	// #8
     58c:	94000ba8 	bl	342c <zeromem>
     590:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     594:	b9415020 	ldr	w0, [x1, #336]
     598:	51000400 	sub	w0, w0, #0x1
     59c:	b9015020 	str	w0, [x1, #336]
     5a0:	52800000 	mov	w0, #0x0                   	// #0
     5a4:	a8c17bfd 	ldp	x29, x30, [sp], #16
     5a8:	d65f03c0 	ret
     5ac:	12800020 	mov	w0, #0xfffffffe            	// #-2
     5b0:	17fffffd 	b	5a4 <fip_dev_close+0x60>

00000000000005b4 <register_io_dev_fip>:
     5b4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     5b8:	910003fd 	mov	x29, sp
     5bc:	f9000bf3 	str	x19, [sp, #16]
     5c0:	b50000a0 	cbnz	x0, 5d4 <register_io_dev_fip+0x20>
     5c4:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     5c8:	9106a800 	add	x0, x0, #0x1aa
     5cc:	52803761 	mov	w1, #0x1bb                 	// #443
     5d0:	94000c88 	bl	37f0 <__assert>
     5d4:	aa0003f3 	mov	x19, x0
     5d8:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     5dc:	91050000 	add	x0, x0, #0x140
     5e0:	940000f6 	bl	9b8 <io_register_device>
     5e4:	35000080 	cbnz	w0, 5f4 <register_io_dev_fip+0x40>
     5e8:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     5ec:	91010021 	add	x1, x1, #0x40
     5f0:	f9000261 	str	x1, [x19]
     5f4:	f9400bf3 	ldr	x19, [sp, #16]
     5f8:	a8c27bfd 	ldp	x29, x30, [sp], #32
     5fc:	d65f03c0 	ret

0000000000000600 <device_type_memmap>:
     600:	52800040 	mov	w0, #0x2                   	// #2
     604:	d65f03c0 	ret

0000000000000608 <memmap_dev_close>:
     608:	52800000 	mov	w0, #0x0                   	// #0
     60c:	d65f03c0 	ret

0000000000000610 <memmap_dev_open>:
     610:	b50000e1 	cbnz	x1, 62c <memmap_dev_open+0x1c>
     614:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     618:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     61c:	910ae000 	add	x0, x0, #0x2b8
     620:	910003fd 	mov	x29, sp
     624:	52800a81 	mov	w1, #0x54                  	// #84
     628:	94000c72 	bl	37f0 <__assert>
     62c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     630:	910aa000 	add	x0, x0, #0x2a8
     634:	f9000020 	str	x0, [x1]
     638:	52800000 	mov	w0, #0x0                   	// #0
     63c:	d65f03c0 	ret

0000000000000640 <memmap_block_len>:
     640:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     644:	910003fd 	mov	x29, sp
     648:	b50000a0 	cbnz	x0, 65c <memmap_block_len+0x1c>
     64c:	528013c1 	mov	w1, #0x9e                  	// #158
     650:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     654:	910ae000 	add	x0, x0, #0x2b8
     658:	94000c66 	bl	37f0 <__assert>
     65c:	b5000061 	cbnz	x1, 668 <memmap_block_len+0x28>
     660:	528013e1 	mov	w1, #0x9f                  	// #159
     664:	17fffffb 	b	650 <memmap_block_len+0x10>
     668:	f9400400 	ldr	x0, [x0, #8]
     66c:	f9400c00 	ldr	x0, [x0, #24]
     670:	f9000020 	str	x0, [x1]
     674:	52800000 	mov	w0, #0x0                   	// #0
     678:	a8c17bfd 	ldp	x29, x30, [sp], #16
     67c:	d65f03c0 	ret

0000000000000680 <memmap_block_seek>:
     680:	7100043f 	cmp	w1, #0x1
     684:	540002a1 	b.ne	6d8 <memmap_block_seek+0x58>  // b.any
     688:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     68c:	910003fd 	mov	x29, sp
     690:	b50000a0 	cbnz	x0, 6a4 <memmap_block_seek+0x24>
     694:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     698:	910ae000 	add	x0, x0, #0x2b8
     69c:	52801161 	mov	w1, #0x8b                  	// #139
     6a0:	94000c54 	bl	37f0 <__assert>
     6a4:	f9400400 	ldr	x0, [x0, #8]
     6a8:	b7f80082 	tbnz	x2, #63, 6b8 <memmap_block_seek+0x38>
     6ac:	f9400c01 	ldr	x1, [x0, #24]
     6b0:	eb02003f 	cmp	x1, x2
     6b4:	540000a8 	b.hi	6c8 <memmap_block_seek+0x48>  // b.pmore
     6b8:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     6bc:	910ae000 	add	x0, x0, #0x2b8
     6c0:	52801201 	mov	w1, #0x90                  	// #144
     6c4:	94000c4b 	bl	37f0 <__assert>
     6c8:	f9000802 	str	x2, [x0, #16]
     6cc:	52800000 	mov	w0, #0x0                   	// #0
     6d0:	a8c17bfd 	ldp	x29, x30, [sp], #16
     6d4:	d65f03c0 	ret
     6d8:	12800020 	mov	w0, #0xfffffffe            	// #-2
     6dc:	d65f03c0 	ret

00000000000006e0 <memmap_block_close>:
     6e0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     6e4:	910003fd 	mov	x29, sp
     6e8:	b50000a0 	cbnz	x0, 6fc <memmap_block_close+0x1c>
     6ec:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     6f0:	910ae000 	add	x0, x0, #0x2b8
     6f4:	52801c01 	mov	w1, #0xe0                  	// #224
     6f8:	94000c3e 	bl	37f0 <__assert>
     6fc:	f900041f 	str	xzr, [x0, #8]
     700:	d2800401 	mov	x1, #0x20                  	// #32
     704:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     708:	91058000 	add	x0, x0, #0x160
     70c:	94000b48 	bl	342c <zeromem>
     710:	52800000 	mov	w0, #0x0                   	// #0
     714:	a8c17bfd 	ldp	x29, x30, [sp], #16
     718:	d65f03c0 	ret

000000000000071c <memmap_block_write>:
     71c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     720:	910003fd 	mov	x29, sp
     724:	a90153f3 	stp	x19, x20, [sp, #16]
     728:	a9025bf5 	stp	x21, x22, [sp, #32]
     72c:	b50000a0 	cbnz	x0, 740 <memmap_block_write+0x24>
     730:	52801921 	mov	w1, #0xc9                  	// #201
     734:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     738:	910ae000 	add	x0, x0, #0x2b8
     73c:	94000c2d 	bl	37f0 <__assert>
     740:	aa0303f5 	mov	x21, x3
     744:	b5000063 	cbnz	x3, 750 <memmap_block_write+0x34>
     748:	52801941 	mov	w1, #0xca                  	// #202
     74c:	17fffffa 	b	734 <memmap_block_write+0x18>
     750:	f9400413 	ldr	x19, [x0, #8]
     754:	aa0203f6 	mov	x22, x2
     758:	f9400a60 	ldr	x0, [x19, #16]
     75c:	8b020014 	add	x20, x0, x2
     760:	eb14001f 	cmp	x0, x20
     764:	54000088 	b.hi	774 <memmap_block_write+0x58>  // b.pmore
     768:	f9400e63 	ldr	x3, [x19, #24]
     76c:	eb14007f 	cmp	x3, x20
     770:	54000062 	b.cs	77c <memmap_block_write+0x60>  // b.hs, b.nlast
     774:	52801a01 	mov	w1, #0xd0                  	// #208
     778:	17ffffef 	b	734 <memmap_block_write+0x18>
     77c:	f9400663 	ldr	x3, [x19, #8]
     780:	8b030000 	add	x0, x0, x3
     784:	94000c34 	bl	3854 <memcpy>
     788:	f90002b6 	str	x22, [x21]
     78c:	a9425bf5 	ldp	x21, x22, [sp, #32]
     790:	f9000a74 	str	x20, [x19, #16]
     794:	52800000 	mov	w0, #0x0                   	// #0
     798:	a94153f3 	ldp	x19, x20, [sp, #16]
     79c:	a8c37bfd 	ldp	x29, x30, [sp], #48
     7a0:	d65f03c0 	ret

00000000000007a4 <memmap_block_read>:
     7a4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     7a8:	910003fd 	mov	x29, sp
     7ac:	a90153f3 	stp	x19, x20, [sp, #16]
     7b0:	a9025bf5 	stp	x21, x22, [sp, #32]
     7b4:	b50000a0 	cbnz	x0, 7c8 <memmap_block_read+0x24>
     7b8:	528015c1 	mov	w1, #0xae                  	// #174
     7bc:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     7c0:	910ae000 	add	x0, x0, #0x2b8
     7c4:	94000c0b 	bl	37f0 <__assert>
     7c8:	aa0303f5 	mov	x21, x3
     7cc:	b5000063 	cbnz	x3, 7d8 <memmap_block_read+0x34>
     7d0:	528015e1 	mov	w1, #0xaf                  	// #175
     7d4:	17fffffa 	b	7bc <memmap_block_read+0x18>
     7d8:	f9400413 	ldr	x19, [x0, #8]
     7dc:	aa0103e4 	mov	x4, x1
     7e0:	aa0203f6 	mov	x22, x2
     7e4:	f9400a61 	ldr	x1, [x19, #16]
     7e8:	8b020034 	add	x20, x1, x2
     7ec:	eb14003f 	cmp	x1, x20
     7f0:	54000088 	b.hi	800 <memmap_block_read+0x5c>  // b.pmore
     7f4:	f9400e60 	ldr	x0, [x19, #24]
     7f8:	eb14001f 	cmp	x0, x20
     7fc:	54000062 	b.cs	808 <memmap_block_read+0x64>  // b.hs, b.nlast
     800:	528016a1 	mov	w1, #0xb5                  	// #181
     804:	17ffffee 	b	7bc <memmap_block_read+0x18>
     808:	f9400660 	ldr	x0, [x19, #8]
     80c:	8b000021 	add	x1, x1, x0
     810:	aa0403e0 	mov	x0, x4
     814:	94000c10 	bl	3854 <memcpy>
     818:	f90002b6 	str	x22, [x21]
     81c:	a9425bf5 	ldp	x21, x22, [sp, #32]
     820:	f9000a74 	str	x20, [x19, #16]
     824:	52800000 	mov	w0, #0x0                   	// #0
     828:	a94153f3 	ldp	x19, x20, [sp, #16]
     82c:	a8c37bfd 	ldp	x29, x30, [sp], #48
     830:	d65f03c0 	ret

0000000000000834 <memmap_block_open>:
     834:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     838:	910003fd 	mov	x29, sp
     83c:	d0080784 	adrp	x4, 100f2000 <platform_normal_stacks+0x3f00>
     840:	b9416080 	ldr	w0, [x4, #352]
     844:	35000240 	cbnz	w0, 88c <__BSS_SIZE__+0x24>
     848:	b50000a1 	cbnz	x1, 85c <memmap_block_open+0x28>
     84c:	52800e21 	mov	w1, #0x71                  	// #113
     850:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     854:	910ae000 	add	x0, x0, #0x2b8
     858:	94000be6 	bl	37f0 <__assert>
     85c:	b5000062 	cbnz	x2, 868 <__BSS_SIZE__>
     860:	52800e41 	mov	w1, #0x72                  	// #114
     864:	17fffffb 	b	850 <memmap_block_open+0x1c>
     868:	91058083 	add	x3, x4, #0x160
     86c:	52800025 	mov	w5, #0x1                   	// #1
     870:	b9016085 	str	w5, [x4, #352]
     874:	a9400424 	ldp	x4, x1, [x1]
     878:	a900fc64 	stp	x4, xzr, [x3, #8]
     87c:	f9000c61 	str	x1, [x3, #24]
     880:	f9000443 	str	x3, [x2, #8]
     884:	a8c17bfd 	ldp	x29, x30, [sp], #16
     888:	d65f03c0 	ret
     88c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     890:	91089800 	add	x0, x0, #0x226
     894:	940004ce 	bl	1bcc <tf_log>
     898:	12800160 	mov	w0, #0xfffffff4            	// #-12
     89c:	17fffffa 	b	884 <__BSS_SIZE__+0x1c>

00000000000008a0 <register_io_dev_memmap>:
     8a0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     8a4:	910003fd 	mov	x29, sp
     8a8:	f9000bf3 	str	x19, [sp, #16]
     8ac:	b50000a0 	cbnz	x0, 8c0 <register_io_dev_memmap+0x20>
     8b0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     8b4:	910ae000 	add	x0, x0, #0x2b8
     8b8:	52801e21 	mov	w1, #0xf1                  	// #241
     8bc:	94000bcd 	bl	37f0 <__assert>
     8c0:	aa0003f3 	mov	x19, x0
     8c4:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     8c8:	910aa000 	add	x0, x0, #0x2a8
     8cc:	9400003b 	bl	9b8 <io_register_device>
     8d0:	35000080 	cbnz	w0, 8e0 <register_io_dev_memmap+0x40>
     8d4:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     8d8:	91096021 	add	x1, x1, #0x258
     8dc:	f9000261 	str	x1, [x19]
     8e0:	f9400bf3 	ldr	x19, [sp, #16]
     8e4:	a8c27bfd 	ldp	x29, x30, [sp], #32
     8e8:	d65f03c0 	ret

00000000000008ec <is_valid_dev>:
     8ec:	b4000180 	cbz	x0, 91c <is_valid_dev+0x30>
     8f0:	f9400000 	ldr	x0, [x0]
     8f4:	b4000140 	cbz	x0, 91c <is_valid_dev+0x30>
     8f8:	f9400000 	ldr	x0, [x0]
     8fc:	b4000100 	cbz	x0, 91c <is_valid_dev+0x30>
     900:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     904:	910003fd 	mov	x29, sp
     908:	d63f0000 	blr	x0
     90c:	71001c1f 	cmp	w0, #0x7
     910:	1a9f87e0 	cset	w0, ls  // ls = plast
     914:	a8c17bfd 	ldp	x29, x30, [sp], #16
     918:	d65f03c0 	ret
     91c:	52800000 	mov	w0, #0x0                   	// #0
     920:	d65f03c0 	ret

0000000000000924 <is_valid_entity>:
     924:	b4000120 	cbz	x0, 948 <is_valid_entity+0x24>
     928:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     92c:	910003fd 	mov	x29, sp
     930:	f9400000 	ldr	x0, [x0]
     934:	97ffffee 	bl	8ec <is_valid_dev>
     938:	7100001f 	cmp	w0, #0x0
     93c:	1a9f07e0 	cset	w0, ne  // ne = any
     940:	a8c17bfd 	ldp	x29, x30, [sp], #16
     944:	d65f03c0 	ret
     948:	52800000 	mov	w0, #0x0                   	// #0
     94c:	d65f03c0 	ret

0000000000000950 <free_entity>:
     950:	b40001a0 	cbz	x0, 984 <free_entity+0x34>
     954:	d0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
     958:	91062042 	add	x2, x2, #0x188
     95c:	d2800001 	mov	x1, #0x0                   	// #0
     960:	f8617844 	ldr	x4, [x2, x1, lsl #3]
     964:	2a0103e3 	mov	w3, w1
     968:	eb04001f 	cmp	x0, x4
     96c:	54000180 	b.eq	99c <free_entity+0x4c>  // b.none
     970:	91000421 	add	x1, x1, #0x1
     974:	f100103f 	cmp	x1, #0x4
     978:	54ffff41 	b.ne	960 <free_entity+0x10>  // b.any
     97c:	12800020 	mov	w0, #0xfffffffe            	// #-2
     980:	d65f03c0 	ret
     984:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     988:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     98c:	910b3c00 	add	x0, x0, #0x2cf
     990:	910003fd 	mov	x29, sp
     994:	52801081 	mov	w1, #0x84                  	// #132
     998:	94000b96 	bl	37f0 <__assert>
     99c:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     9a0:	b9418420 	ldr	w0, [x1, #388]
     9a4:	f823585f 	str	xzr, [x2, w3, uxtw #3]
     9a8:	51000400 	sub	w0, w0, #0x1
     9ac:	b9018420 	str	w0, [x1, #388]
     9b0:	52800000 	mov	w0, #0x0                   	// #0
     9b4:	d65f03c0 	ret

00000000000009b8 <io_register_device>:
     9b8:	b50000e0 	cbnz	x0, 9d4 <io_register_device+0x1c>
     9bc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     9c0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     9c4:	910b3c00 	add	x0, x0, #0x2cf
     9c8:	910003fd 	mov	x29, sp
     9cc:	528012c1 	mov	w1, #0x96                  	// #150
     9d0:	94000b88 	bl	37f0 <__assert>
     9d4:	d0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
     9d8:	b9418020 	ldr	w0, [x1, #384]
     9dc:	7100081f 	cmp	w0, #0x2
     9e0:	540000a8 	b.hi	9f4 <io_register_device+0x3c>  // b.pmore
     9e4:	11000400 	add	w0, w0, #0x1
     9e8:	b9018020 	str	w0, [x1, #384]
     9ec:	52800000 	mov	w0, #0x0                   	// #0
     9f0:	d65f03c0 	ret
     9f4:	12800160 	mov	w0, #0xfffffff4            	// #-12
     9f8:	d65f03c0 	ret

00000000000009fc <io_dev_open>:
     9fc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     a00:	910003fd 	mov	x29, sp
     a04:	b50000a2 	cbnz	x2, a18 <io_dev_open+0x1c>
     a08:	528014e1 	mov	w1, #0xa7                  	// #167
     a0c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     a10:	910b3c00 	add	x0, x0, #0x2cf
     a14:	94000b77 	bl	37f0 <__assert>
     a18:	b4000100 	cbz	x0, a38 <io_dev_open+0x3c>
     a1c:	f9400003 	ldr	x3, [x0]
     a20:	b40000c3 	cbz	x3, a38 <io_dev_open+0x3c>
     a24:	a8c17bfd 	ldp	x29, x30, [sp], #16
     a28:	aa0103e4 	mov	x4, x1
     a2c:	aa0403e0 	mov	x0, x4
     a30:	aa0203e1 	mov	x1, x2
     a34:	d61f0060 	br	x3
     a38:	528009e1 	mov	w1, #0x4f                  	// #79
     a3c:	17fffff4 	b	a0c <io_dev_open+0x10>

0000000000000a40 <io_dev_init>:
     a40:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     a44:	910003fd 	mov	x29, sp
     a48:	a90153f3 	stp	x19, x20, [sp, #16]
     a4c:	b50000a0 	cbnz	x0, a60 <io_dev_init+0x20>
     a50:	52801661 	mov	w1, #0xb3                  	// #179
     a54:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     a58:	910b3c00 	add	x0, x0, #0x2cf
     a5c:	94000b65 	bl	37f0 <__assert>
     a60:	aa0003f3 	mov	x19, x0
     a64:	aa0103f4 	mov	x20, x1
     a68:	97ffffa1 	bl	8ec <is_valid_dev>
     a6c:	35000060 	cbnz	w0, a78 <io_dev_init+0x38>
     a70:	52801681 	mov	w1, #0xb4                  	// #180
     a74:	17fffff8 	b	a54 <io_dev_init+0x14>
     a78:	f9400260 	ldr	x0, [x19]
     a7c:	f9401c02 	ldr	x2, [x0, #56]
     a80:	b40000c2 	cbz	x2, a98 <io_dev_init+0x58>
     a84:	aa1403e1 	mov	x1, x20
     a88:	aa1303e0 	mov	x0, x19
     a8c:	a94153f3 	ldp	x19, x20, [sp, #16]
     a90:	a8c27bfd 	ldp	x29, x30, [sp], #32
     a94:	d61f0040 	br	x2
     a98:	52800000 	mov	w0, #0x0                   	// #0
     a9c:	a94153f3 	ldp	x19, x20, [sp, #16]
     aa0:	a8c27bfd 	ldp	x29, x30, [sp], #32
     aa4:	d65f03c0 	ret

0000000000000aa8 <io_dev_close>:
     aa8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     aac:	910003fd 	mov	x29, sp
     ab0:	f9000bf3 	str	x19, [sp, #16]
     ab4:	b50000a0 	cbnz	x0, ac8 <io_dev_close+0x20>
     ab8:	528018e1 	mov	w1, #0xc7                  	// #199
     abc:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     ac0:	910b3c00 	add	x0, x0, #0x2cf
     ac4:	94000b4b 	bl	37f0 <__assert>
     ac8:	aa0003f3 	mov	x19, x0
     acc:	97ffff88 	bl	8ec <is_valid_dev>
     ad0:	35000060 	cbnz	w0, adc <io_dev_close+0x34>
     ad4:	52801901 	mov	w1, #0xc8                  	// #200
     ad8:	17fffff9 	b	abc <io_dev_close+0x14>
     adc:	f9400260 	ldr	x0, [x19]
     ae0:	f9402001 	ldr	x1, [x0, #64]
     ae4:	b40000a1 	cbz	x1, af8 <io_dev_close+0x50>
     ae8:	aa1303e0 	mov	x0, x19
     aec:	f9400bf3 	ldr	x19, [sp, #16]
     af0:	a8c27bfd 	ldp	x29, x30, [sp], #32
     af4:	d61f0020 	br	x1
     af8:	52800000 	mov	w0, #0x0                   	// #0
     afc:	f9400bf3 	ldr	x19, [sp, #16]
     b00:	a8c27bfd 	ldp	x29, x30, [sp], #32
     b04:	d65f03c0 	ret

0000000000000b08 <io_open>:
     b08:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
     b0c:	f100003f 	cmp	x1, #0x0
     b10:	fa401844 	ccmp	x2, #0x0, #0x4, ne  // ne = any
     b14:	910003fd 	mov	x29, sp
     b18:	a90153f3 	stp	x19, x20, [sp, #16]
     b1c:	a9025bf5 	stp	x21, x22, [sp, #32]
     b20:	a90363f7 	stp	x23, x24, [sp, #48]
     b24:	540000a1 	b.ne	b38 <io_open+0x30>  // b.any
     b28:	52801b81 	mov	w1, #0xdc                  	// #220
     b2c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     b30:	910b3c00 	add	x0, x0, #0x2cf
     b34:	94000b2f 	bl	37f0 <__assert>
     b38:	aa0003f8 	mov	x24, x0
     b3c:	aa0103f7 	mov	x23, x1
     b40:	aa0203f5 	mov	x21, x2
     b44:	97ffff6a 	bl	8ec <is_valid_dev>
     b48:	35000060 	cbnz	w0, b54 <io_open+0x4c>
     b4c:	52801ba1 	mov	w1, #0xdd                  	// #221
     b50:	17fffff7 	b	b2c <io_open+0x24>
     b54:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     b58:	b9418403 	ldr	w3, [x0, #388]
     b5c:	aa0003e2 	mov	x2, x0
     b60:	71000c7f 	cmp	w3, #0x3
     b64:	540003c8 	b.hi	bdc <io_open+0xd4>  // b.pmore
     b68:	d0080784 	adrp	x4, 100f2000 <platform_normal_stacks+0x3f00>
     b6c:	91062084 	add	x4, x4, #0x188
     b70:	d2800000 	mov	x0, #0x0                   	// #0
     b74:	f8607881 	ldr	x1, [x4, x0, lsl #3]
     b78:	2a0003f4 	mov	w20, w0
     b7c:	b4000341 	cbz	x1, be4 <io_open+0xdc>
     b80:	91000400 	add	x0, x0, #0x1
     b84:	f100101f 	cmp	x0, #0x4
     b88:	54ffff61 	b.ne	b74 <io_open+0x6c>  // b.any
     b8c:	52800ec1 	mov	w1, #0x76                  	// #118
     b90:	17ffffe7 	b	b2c <io_open+0x24>
     b94:	aa1703e1 	mov	x1, x23
     b98:	aa1303e2 	mov	x2, x19
     b9c:	aa1803e0 	mov	x0, x24
     ba0:	d63f0060 	blr	x3
     ba4:	2a0003f7 	mov	w23, w0
     ba8:	35000140 	cbnz	w0, bd0 <io_open+0xc8>
     bac:	d37cee94 	lsl	x20, x20, #4
     bb0:	f8346ad8 	str	x24, [x22, x20]
     bb4:	f90002b3 	str	x19, [x21]
     bb8:	2a1703e0 	mov	w0, w23
     bbc:	a94153f3 	ldp	x19, x20, [sp, #16]
     bc0:	a9425bf5 	ldp	x21, x22, [sp, #32]
     bc4:	a94363f7 	ldp	x23, x24, [sp, #48]
     bc8:	a8c47bfd 	ldp	x29, x30, [sp], #64
     bcc:	d65f03c0 	ret
     bd0:	aa1303e0 	mov	x0, x19
     bd4:	97ffff5f 	bl	950 <free_entity>
     bd8:	17fffff8 	b	bb8 <io_open+0xb0>
     bdc:	12800177 	mov	w23, #0xfffffff4            	// #-12
     be0:	17fffff6 	b	bb8 <io_open+0xb0>
     be4:	d0080796 	adrp	x22, 100f2000 <platform_normal_stacks+0x3f00>
     be8:	9106a2d6 	add	x22, x22, #0x1a8
     bec:	8b0012d3 	add	x19, x22, x0, lsl #4
     bf0:	11000463 	add	w3, w3, #0x1
     bf4:	f9400300 	ldr	x0, [x24]
     bf8:	b9018443 	str	w3, [x2, #388]
     bfc:	f8347893 	str	x19, [x4, x20, lsl #3]
     c00:	f9400403 	ldr	x3, [x0, #8]
     c04:	b5fffc83 	cbnz	x3, b94 <io_open+0x8c>
     c08:	52801ca1 	mov	w1, #0xe5                  	// #229
     c0c:	17ffffc8 	b	b2c <io_open+0x24>

0000000000000c10 <io_seek>:
     c10:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     c14:	910003fd 	mov	x29, sp
     c18:	a90153f3 	stp	x19, x20, [sp, #16]
     c1c:	aa0003f3 	mov	x19, x0
     c20:	2a0103f4 	mov	w20, w1
     c24:	f90013f5 	str	x21, [sp, #32]
     c28:	aa0203f5 	mov	x21, x2
     c2c:	97ffff3e 	bl	924 <is_valid_entity>
     c30:	34000080 	cbz	w0, c40 <io_seek+0x30>
     c34:	51000680 	sub	w0, w20, #0x1
     c38:	7100081f 	cmp	w0, #0x2
     c3c:	540000a9 	b.ls	c50 <io_seek+0x40>  // b.plast
     c40:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     c44:	910b3c00 	add	x0, x0, #0x2cf
     c48:	52801ec1 	mov	w1, #0xf6                  	// #246
     c4c:	94000ae9 	bl	37f0 <__assert>
     c50:	f9400260 	ldr	x0, [x19]
     c54:	f9400000 	ldr	x0, [x0]
     c58:	f9400803 	ldr	x3, [x0, #16]
     c5c:	b4000103 	cbz	x3, c7c <io_seek+0x6c>
     c60:	aa1503e2 	mov	x2, x21
     c64:	2a1403e1 	mov	w1, w20
     c68:	aa1303e0 	mov	x0, x19
     c6c:	a94153f3 	ldp	x19, x20, [sp, #16]
     c70:	f94013f5 	ldr	x21, [sp, #32]
     c74:	a8c37bfd 	ldp	x29, x30, [sp], #48
     c78:	d61f0060 	br	x3
     c7c:	12800240 	mov	w0, #0xffffffed            	// #-19
     c80:	a94153f3 	ldp	x19, x20, [sp, #16]
     c84:	f94013f5 	ldr	x21, [sp, #32]
     c88:	a8c37bfd 	ldp	x29, x30, [sp], #48
     c8c:	d65f03c0 	ret

0000000000000c90 <io_size>:
     c90:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     c94:	910003fd 	mov	x29, sp
     c98:	a90153f3 	stp	x19, x20, [sp, #16]
     c9c:	aa0003f3 	mov	x19, x0
     ca0:	aa0103f4 	mov	x20, x1
     ca4:	97ffff20 	bl	924 <is_valid_entity>
     ca8:	34000040 	cbz	w0, cb0 <io_size+0x20>
     cac:	b50000b4 	cbnz	x20, cc0 <io_size+0x30>
     cb0:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     cb4:	910b3c00 	add	x0, x0, #0x2cf
     cb8:	528020e1 	mov	w1, #0x107                 	// #263
     cbc:	94000acd 	bl	37f0 <__assert>
     cc0:	f9400260 	ldr	x0, [x19]
     cc4:	f9400000 	ldr	x0, [x0]
     cc8:	f9400c02 	ldr	x2, [x0, #24]
     ccc:	b40000c2 	cbz	x2, ce4 <io_size+0x54>
     cd0:	aa1403e1 	mov	x1, x20
     cd4:	aa1303e0 	mov	x0, x19
     cd8:	a94153f3 	ldp	x19, x20, [sp, #16]
     cdc:	a8c27bfd 	ldp	x29, x30, [sp], #32
     ce0:	d61f0040 	br	x2
     ce4:	12800240 	mov	w0, #0xffffffed            	// #-19
     ce8:	a94153f3 	ldp	x19, x20, [sp, #16]
     cec:	a8c27bfd 	ldp	x29, x30, [sp], #32
     cf0:	d65f03c0 	ret

0000000000000cf4 <io_read>:
     cf4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     cf8:	910003fd 	mov	x29, sp
     cfc:	a90153f3 	stp	x19, x20, [sp, #16]
     d00:	aa0003f3 	mov	x19, x0
     d04:	aa0103f4 	mov	x20, x1
     d08:	a9025bf5 	stp	x21, x22, [sp, #32]
     d0c:	aa0203f5 	mov	x21, x2
     d10:	aa0303f6 	mov	x22, x3
     d14:	97ffff04 	bl	924 <is_valid_entity>
     d18:	350000a0 	cbnz	w0, d2c <io_read+0x38>
     d1c:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     d20:	910b3c00 	add	x0, x0, #0x2cf
     d24:	52802361 	mov	w1, #0x11b                 	// #283
     d28:	94000ab2 	bl	37f0 <__assert>
     d2c:	f9400260 	ldr	x0, [x19]
     d30:	f9400000 	ldr	x0, [x0]
     d34:	f9401004 	ldr	x4, [x0, #32]
     d38:	b4000124 	cbz	x4, d5c <io_read+0x68>
     d3c:	aa1603e3 	mov	x3, x22
     d40:	aa1503e2 	mov	x2, x21
     d44:	aa1403e1 	mov	x1, x20
     d48:	aa1303e0 	mov	x0, x19
     d4c:	a94153f3 	ldp	x19, x20, [sp, #16]
     d50:	a9425bf5 	ldp	x21, x22, [sp, #32]
     d54:	a8c37bfd 	ldp	x29, x30, [sp], #48
     d58:	d61f0080 	br	x4
     d5c:	12800240 	mov	w0, #0xffffffed            	// #-19
     d60:	a94153f3 	ldp	x19, x20, [sp, #16]
     d64:	a9425bf5 	ldp	x21, x22, [sp, #32]
     d68:	a8c37bfd 	ldp	x29, x30, [sp], #48
     d6c:	d65f03c0 	ret

0000000000000d70 <io_close>:
     d70:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     d74:	910003fd 	mov	x29, sp
     d78:	a90153f3 	stp	x19, x20, [sp, #16]
     d7c:	aa0003f3 	mov	x19, x0
     d80:	97fffee9 	bl	924 <is_valid_entity>
     d84:	350000a0 	cbnz	w0, d98 <io_close+0x28>
     d88:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     d8c:	910b3c00 	add	x0, x0, #0x2cf
     d90:	52802841 	mov	w1, #0x142                 	// #322
     d94:	94000a97 	bl	37f0 <__assert>
     d98:	f9400260 	ldr	x0, [x19]
     d9c:	f9400000 	ldr	x0, [x0]
     da0:	f9401801 	ldr	x1, [x0, #48]
     da4:	b4000141 	cbz	x1, dcc <io_close+0x5c>
     da8:	aa1303e0 	mov	x0, x19
     dac:	d63f0020 	blr	x1
     db0:	2a0003f4 	mov	w20, w0
     db4:	aa1303e0 	mov	x0, x19
     db8:	97fffee6 	bl	950 <free_entity>
     dbc:	2a1403e0 	mov	w0, w20
     dc0:	a94153f3 	ldp	x19, x20, [sp, #16]
     dc4:	a8c27bfd 	ldp	x29, x30, [sp], #32
     dc8:	d65f03c0 	ret
     dcc:	52800014 	mov	w20, #0x0                   	// #0
     dd0:	17fffff9 	b	db4 <io_close+0x44>

0000000000000dd4 <bl1_plat_sec_mem_layout>:
     dd4:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     dd8:	9107a000 	add	x0, x0, #0x1e8
     ddc:	d65f03c0 	ret

0000000000000de0 <bl1_early_platform_setup>:
     de0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     de4:	910003fd 	mov	x29, sp
     de8:	940004a8 	bl	2088 <rpi3_console_init>
     dec:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     df0:	9107a001 	add	x1, x0, #0x1e8
     df4:	320483e2 	mov	w2, #0x10001000            	// #268439552
     df8:	f900f402 	str	x2, [x0, #488]
     dfc:	b2741fe0 	mov	x0, #0xff000               	// #1044480
     e00:	f9000420 	str	x0, [x1, #8]
     e04:	a8c17bfd 	ldp	x29, x30, [sp], #16
     e08:	d65f03c0 	ret

0000000000000e0c <bl1_plat_arch_setup>:
     e0c:	d0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
     e10:	9107a001 	add	x1, x0, #0x1e8
     e14:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     e18:	d0000025 	adrp	x5, 6000 <__CPU_OPS_START__+0x20>
     e1c:	9103e0a5 	add	x5, x5, #0xf8
     e20:	910003fd 	mov	x29, sp
     e24:	f940f400 	ldr	x0, [x0, #488]
     e28:	d10004a5 	sub	x5, x5, #0x1
     e2c:	f9400421 	ldr	x1, [x1, #8]
     e30:	b2402ca5 	orr	x5, x5, #0xfff
     e34:	910004a5 	add	x5, x5, #0x1
     e38:	f00807a7 	adrp	x7, 100f7000 <__BL1_RAM_END__>
     e3c:	910000e7 	add	x7, x7, #0x0
     e40:	f00807a6 	adrp	x6, 100f7000 <__BL1_RAM_END__>
     e44:	910000c6 	add	x6, x6, #0x0
     e48:	b0000024 	adrp	x4, 5000 <__TEXT_END__>
     e4c:	91000084 	add	x4, x4, #0x0
     e50:	b0000023 	adrp	x3, 5000 <__TEXT_END__>
     e54:	91000063 	add	x3, x3, #0x0
     e58:	90000002 	adrp	x2, 0 <bl1_entrypoint>
     e5c:	91000042 	add	x2, x2, #0x0
     e60:	940004a2 	bl	20e8 <rpi3_setup_page_tables>
     e64:	a8c17bfd 	ldp	x29, x30, [sp], #16
     e68:	52800000 	mov	w0, #0x0                   	// #0
     e6c:	1400059c 	b	24dc <enable_mmu_el3>

0000000000000e70 <bl1_platform_setup>:
     e70:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     e74:	910003fd 	mov	x29, sp
     e78:	910073e0 	add	x0, sp, #0x1c
     e7c:	9400009f 	bl	10f8 <rpi3_vc_hardware_get_board_revision>
     e80:	350004c0 	cbnz	w0, f18 <bl1_platform_setup+0xa8>
     e84:	b9401fe1 	ldr	w1, [sp, #28]
     e88:	51680820 	sub	w0, w1, #0xa02, lsl #12
     e8c:	71034c00 	subs	w0, w0, #0xd3
     e90:	540002a0 	b.eq	ee4 <bl1_platform_setup+0x74>  // b.none
     e94:	51688820 	sub	w0, w1, #0xa22, lsl #12
     e98:	71020800 	subs	w0, w0, #0x82
     e9c:	540002e0 	b.eq	ef8 <bl1_platform_setup+0x88>  // b.none
     ea0:	51680820 	sub	w0, w1, #0xa02, lsl #12
     ea4:	71020800 	subs	w0, w0, #0x82
     ea8:	54000320 	b.eq	f0c <bl1_platform_setup+0x9c>  // b.none
     eac:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     eb0:	910d3400 	add	x0, x0, #0x34d
     eb4:	94000346 	bl	1bcc <tf_log>
     eb8:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     ebc:	910b9c42 	add	x2, x2, #0x2e7
     ec0:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     ec4:	910bc421 	add	x1, x1, #0x2f1
     ec8:	b9401fe3 	ldr	w3, [sp, #28]
     ecc:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     ed0:	910dcc00 	add	x0, x0, #0x373
     ed4:	9400033e 	bl	1bcc <tf_log>
     ed8:	94000044 	bl	fe8 <plat_rpi3_io_setup>
     edc:	a8c27bfd 	ldp	x29, x30, [sp], #32
     ee0:	d65f03c0 	ret
     ee4:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     ee8:	910be442 	add	x2, x2, #0x2f9
     eec:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     ef0:	910c8021 	add	x1, x1, #0x320
     ef4:	17fffff5 	b	ec8 <bl1_platform_setup+0x58>
     ef8:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     efc:	910ce042 	add	x2, x2, #0x338
     f00:	b0000021 	adrp	x1, 5000 <__TEXT_END__>
     f04:	910c2421 	add	x1, x1, #0x309
     f08:	17fffff0 	b	ec8 <bl1_platform_setup+0x58>
     f0c:	b0000022 	adrp	x2, 5000 <__TEXT_END__>
     f10:	910be442 	add	x2, x2, #0x2f9
     f14:	17fffffb 	b	f00 <bl1_platform_setup+0x90>
     f18:	b0000020 	adrp	x0, 5000 <__TEXT_END__>
     f1c:	910e5000 	add	x0, x0, #0x394
     f20:	9400032b 	bl	1bcc <tf_log>
     f24:	17ffffed 	b	ed8 <bl1_platform_setup+0x68>

0000000000000f28 <open_fip>:
     f28:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
     f2c:	d2800001 	mov	x1, #0x0                   	// #0
     f30:	910003fd 	mov	x29, sp
     f34:	a90153f3 	stp	x19, x20, [sp, #16]
     f38:	d0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
     f3c:	f90013f5 	str	x21, [sp, #32]
     f40:	aa0003f5 	mov	x21, x0
     f44:	f9410280 	ldr	x0, [x20, #512]
     f48:	97fffebe 	bl	a40 <io_dev_init>
     f4c:	2a0003f3 	mov	w19, w0
     f50:	35000120 	cbnz	w0, f74 <open_fip+0x4c>
     f54:	f9410280 	ldr	x0, [x20, #512]
     f58:	9100e3e2 	add	x2, sp, #0x38
     f5c:	aa1503e1 	mov	x1, x21
     f60:	97fffeea 	bl	b08 <io_open>
     f64:	2a0003f3 	mov	w19, w0
     f68:	35000060 	cbnz	w0, f74 <open_fip+0x4c>
     f6c:	f9401fe0 	ldr	x0, [sp, #56]
     f70:	97ffff80 	bl	d70 <io_close>
     f74:	2a1303e0 	mov	w0, w19
     f78:	a94153f3 	ldp	x19, x20, [sp, #16]
     f7c:	f94013f5 	ldr	x21, [sp, #32]
     f80:	a8c47bfd 	ldp	x29, x30, [sp], #64
     f84:	d65f03c0 	ret

0000000000000f88 <open_memmap>:
     f88:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
     f8c:	d2800001 	mov	x1, #0x0                   	// #0
     f90:	910003fd 	mov	x29, sp
     f94:	a90153f3 	stp	x19, x20, [sp, #16]
     f98:	d0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
     f9c:	f90013f5 	str	x21, [sp, #32]
     fa0:	aa0003f5 	mov	x21, x0
     fa4:	f9410a80 	ldr	x0, [x20, #528]
     fa8:	97fffea6 	bl	a40 <io_dev_init>
     fac:	2a0003f3 	mov	w19, w0
     fb0:	35000120 	cbnz	w0, fd4 <open_memmap+0x4c>
     fb4:	f9410a80 	ldr	x0, [x20, #528]
     fb8:	9100e3e2 	add	x2, sp, #0x38
     fbc:	aa1503e1 	mov	x1, x21
     fc0:	97fffed2 	bl	b08 <io_open>
     fc4:	2a0003f3 	mov	w19, w0
     fc8:	35000060 	cbnz	w0, fd4 <open_memmap+0x4c>
     fcc:	f9401fe0 	ldr	x0, [sp, #56]
     fd0:	97ffff68 	bl	d70 <io_close>
     fd4:	2a1303e0 	mov	w0, w19
     fd8:	a94153f3 	ldp	x19, x20, [sp, #16]
     fdc:	f94013f5 	ldr	x21, [sp, #32]
     fe0:	a8c47bfd 	ldp	x29, x30, [sp], #64
     fe4:	d65f03c0 	ret

0000000000000fe8 <plat_rpi3_io_setup>:
     fe8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
     fec:	910003fd 	mov	x29, sp
     ff0:	a90153f3 	stp	x19, x20, [sp, #16]
     ff4:	d0080794 	adrp	x20, 100f2000 <platform_normal_stacks+0x3f00>
     ff8:	9107e280 	add	x0, x20, #0x1f8
     ffc:	97fffd6e 	bl	5b4 <register_io_dev_fip>
    1000:	340000a0 	cbz	w0, 1014 <plat_rpi3_io_setup+0x2c>
    1004:	52801dc1 	mov	w1, #0xee                  	// #238
    1008:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    100c:	9110c000 	add	x0, x0, #0x430
    1010:	940009f8 	bl	37f0 <__assert>
    1014:	b0080793 	adrp	x19, 100f2000 <platform_normal_stacks+0x3f00>
    1018:	91082260 	add	x0, x19, #0x208
    101c:	97fffe21 	bl	8a0 <register_io_dev_memmap>
    1020:	34000060 	cbz	w0, 102c <plat_rpi3_io_setup+0x44>
    1024:	52801e21 	mov	w1, #0xf1                  	// #241
    1028:	17fffff8 	b	1008 <plat_rpi3_io_setup+0x20>
    102c:	f940fe80 	ldr	x0, [x20, #504]
    1030:	b0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
    1034:	91080042 	add	x2, x2, #0x200
    1038:	d2800001 	mov	x1, #0x0                   	// #0
    103c:	97fffe70 	bl	9fc <io_dev_open>
    1040:	34000060 	cbz	w0, 104c <plat_rpi3_io_setup+0x64>
    1044:	52801ec1 	mov	w1, #0xf6                  	// #246
    1048:	17fffff0 	b	1008 <plat_rpi3_io_setup+0x20>
    104c:	f9410660 	ldr	x0, [x19, #520]
    1050:	b0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
    1054:	91084042 	add	x2, x2, #0x210
    1058:	d2800001 	mov	x1, #0x0                   	// #0
    105c:	97fffe68 	bl	9fc <io_dev_open>
    1060:	34000060 	cbz	w0, 106c <plat_rpi3_io_setup+0x84>
    1064:	52801f41 	mov	w1, #0xfa                  	// #250
    1068:	17ffffe8 	b	1008 <plat_rpi3_io_setup+0x20>
    106c:	a94153f3 	ldp	x19, x20, [sp, #16]
    1070:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1074:	d65f03c0 	ret

0000000000001078 <plat_get_image_source>:
    1078:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    107c:	7100581f 	cmp	w0, #0x16
    1080:	910003fd 	mov	x29, sp
    1084:	a90153f3 	stp	x19, x20, [sp, #16]
    1088:	a9025bf5 	stp	x21, x22, [sp, #32]
    108c:	f9001bf7 	str	x23, [sp, #48]
    1090:	540000a9 	b.ls	10a4 <plat_get_image_source+0x2c>  // b.plast
    1094:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1098:	9110c000 	add	x0, x0, #0x430
    109c:	52802141 	mov	w1, #0x10a                 	// #266
    10a0:	940009d4 	bl	37f0 <__assert>
    10a4:	2a0003e0 	mov	w0, w0
    10a8:	d2800313 	mov	x19, #0x18                  	// #24
    10ac:	90000034 	adrp	x20, 5000 <__TEXT_END__>
    10b0:	91114294 	add	x20, x20, #0x450
    10b4:	aa0103f6 	mov	x22, x1
    10b8:	aa0203f7 	mov	x23, x2
    10bc:	9b137c13 	mul	x19, x0, x19
    10c0:	8b130280 	add	x0, x20, x19
    10c4:	a9408415 	ldp	x21, x1, [x0, #8]
    10c8:	aa1503e0 	mov	x0, x21
    10cc:	d63f0020 	blr	x1
    10d0:	350000a0 	cbnz	w0, 10e4 <plat_get_image_source+0x6c>
    10d4:	f8736a81 	ldr	x1, [x20, x19]
    10d8:	f90002f5 	str	x21, [x23]
    10dc:	f9400021 	ldr	x1, [x1]
    10e0:	f90002c1 	str	x1, [x22]
    10e4:	a94153f3 	ldp	x19, x20, [sp, #16]
    10e8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    10ec:	f9401bf7 	ldr	x23, [sp, #48]
    10f0:	a8c47bfd 	ldp	x29, x30, [sp], #64
    10f4:	d65f03c0 	ret

00000000000010f8 <rpi3_vc_hardware_get_board_revision>:
    10f8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    10fc:	910003fd 	mov	x29, sp
    1100:	a90153f3 	stp	x19, x20, [sp, #16]
    1104:	b50000a0 	cbnz	x0, 1118 <rpi3_vc_hardware_get_board_revision+0x20>
    1108:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    110c:	911a5400 	add	x0, x0, #0x695
    1110:	52800ec1 	mov	w1, #0x76                  	// #118
    1114:	940009b7 	bl	37f0 <__assert>
    1118:	aa0003f4 	mov	x20, x0
    111c:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1120:	91088013 	add	x19, x0, #0x220
    1124:	d2802001 	mov	x1, #0x100                 	// #256
    1128:	f9011001 	str	x1, [x0, #544]
    112c:	d2800040 	mov	x0, #0x2                   	// #2
    1130:	f2a00020 	movk	x0, #0x1, lsl #16
    1134:	f2c00080 	movk	x0, #0x4, lsl #32
    1138:	a900fe60 	stp	x0, xzr, [x19, #8]
    113c:	aa1303e0 	mov	x0, x19
    1140:	b9001a7f 	str	wzr, [x19, #24]
    1144:	94000890 	bl	3384 <flush_dcache_range>
    1148:	52884800 	mov	w0, #0x4240                	// #16960
    114c:	72a001e0 	movk	w0, #0xf, lsl #16
    1150:	d2971702 	mov	x2, #0xb8b8                	// #47288
    1154:	f2a7e002 	movk	x2, #0x3f00, lsl #16
    1158:	b9400041 	ldr	w1, [x2]
    115c:	71000400 	subs	w0, w0, #0x1
    1160:	540001e1 	b.ne	119c <rpi3_vc_hardware_get_board_revision+0xa4>  // b.any
    1164:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1168:	911aac00 	add	x0, x0, #0x6ab
    116c:	94000298 	bl	1bcc <tf_log>
    1170:	b9400661 	ldr	w1, [x19, #4]
    1174:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
    1178:	6b00003f 	cmp	w1, w0
    117c:	54000600 	b.eq	123c <rpi3_vc_hardware_get_board_revision+0x144>  // b.none
    1180:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1184:	911d0800 	add	x0, x0, #0x742
    1188:	94000291 	bl	1bcc <tf_log>
    118c:	12800000 	mov	w0, #0xffffffff            	// #-1
    1190:	a94153f3 	ldp	x19, x20, [sp, #16]
    1194:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1198:	d65f03c0 	ret
    119c:	36f7fde1 	tbz	w1, #30, 1158 <rpi3_vc_hardware_get_board_revision+0x60>
    11a0:	d2971401 	mov	x1, #0xb8a0                	// #47264
    11a4:	f2a7e001 	movk	x1, #0x3f00, lsl #16
    11a8:	321d0260 	orr	w0, w19, #0x8
    11ac:	d2971302 	mov	x2, #0xb898                	// #47256
    11b0:	f2a7e002 	movk	x2, #0x3f00, lsl #16
    11b4:	b9000020 	str	w0, [x1]
    11b8:	52884800 	mov	w0, #0x4240                	// #16960
    11bc:	72a001e0 	movk	w0, #0xf, lsl #16
    11c0:	b9400041 	ldr	w1, [x2]
    11c4:	71000400 	subs	w0, w0, #0x1
    11c8:	54000081 	b.ne	11d8 <rpi3_vc_hardware_get_board_revision+0xe0>  // b.any
    11cc:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    11d0:	911b3800 	add	x0, x0, #0x6ce
    11d4:	17ffffe6 	b	116c <rpi3_vc_hardware_get_board_revision+0x74>
    11d8:	37f7ff41 	tbnz	w1, #30, 11c0 <rpi3_vc_hardware_get_board_revision+0xc8>
    11dc:	d2971000 	mov	x0, #0xb880                	// #47232
    11e0:	f2a7e000 	movk	x0, #0x3f00, lsl #16
    11e4:	b9400001 	ldr	w1, [x0]
    11e8:	12000c20 	and	w0, w1, #0xf
    11ec:	7100201f 	cmp	w0, #0x8
    11f0:	54000120 	b.eq	1214 <rpi3_vc_hardware_get_board_revision+0x11c>  // b.none
    11f4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    11f8:	911bd400 	add	x0, x0, #0x6f5
    11fc:	94000274 	bl	1bcc <tf_log>
    1200:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1204:	9119e000 	add	x0, x0, #0x678
    1208:	9400034d 	bl	1f3c <backtrace>
    120c:	940002fb 	bl	1df8 <console_flush>
    1210:	9400084c 	bl	3340 <do_panic>
    1214:	927c6c20 	and	x0, x1, #0xfffffff0
    1218:	eb00027f 	cmp	x19, x0
    121c:	54000080 	b.eq	122c <rpi3_vc_hardware_get_board_revision+0x134>  // b.none
    1220:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1224:	911c6400 	add	x0, x0, #0x719
    1228:	17fffff5 	b	11fc <rpi3_vc_hardware_get_board_revision+0x104>
    122c:	d2802001 	mov	x1, #0x100                 	// #256
    1230:	aa1303e0 	mov	x0, x19
    1234:	94000870 	bl	33f4 <inv_dcache_range>
    1238:	17ffffce 	b	1170 <rpi3_vc_hardware_get_board_revision+0x78>
    123c:	b9401261 	ldr	w1, [x19, #16]
    1240:	52800080 	mov	w0, #0x4                   	// #4
    1244:	72b00000 	movk	w0, #0x8000, lsl #16
    1248:	6b00003f 	cmp	w1, w0
    124c:	54000080 	b.eq	125c <rpi3_vc_hardware_get_board_revision+0x164>  // b.none
    1250:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1254:	911d7800 	add	x0, x0, #0x75e
    1258:	17ffffcc 	b	1188 <rpi3_vc_hardware_get_board_revision+0x90>
    125c:	b9401660 	ldr	w0, [x19, #20]
    1260:	b9000280 	str	w0, [x20]
    1264:	52800000 	mov	w0, #0x0                   	// #0
    1268:	17ffffca 	b	1190 <rpi3_vc_hardware_get_board_revision+0x98>

000000000000126c <bl1_calc_bl2_mem_layout>:
    126c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1270:	aa0003e2 	mov	x2, x0
    1274:	910003fd 	mov	x29, sp
    1278:	b50000a0 	cbnz	x0, 128c <bl1_calc_bl2_mem_layout+0x20>
    127c:	52800501 	mov	w1, #0x28                  	// #40
    1280:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1284:	911e3c00 	add	x0, x0, #0x78f
    1288:	9400095a 	bl	37f0 <__assert>
    128c:	aa0103e0 	mov	x0, x1
    1290:	b5000061 	cbnz	x1, 129c <bl1_calc_bl2_mem_layout+0x30>
    1294:	52800521 	mov	w1, #0x29                  	// #41
    1298:	17fffffa 	b	1280 <bl1_calc_bl2_mem_layout+0x14>
    129c:	f9400042 	ldr	x2, [x2]
    12a0:	d29bffe1 	mov	x1, #0xdfff                	// #57343
    12a4:	f2a201c1 	movk	x1, #0x100e, lsl #16
    12a8:	eb01005f 	cmp	x2, x1
    12ac:	54000069 	b.ls	12b8 <bl1_calc_bl2_mem_layout+0x4c>  // b.plast
    12b0:	528005e1 	mov	w1, #0x2f                  	// #47
    12b4:	17fffff3 	b	1280 <bl1_calc_bl2_mem_layout+0x14>
    12b8:	d29c0001 	mov	x1, #0xe000                	// #57344
    12bc:	f2a201c1 	movk	x1, #0x100e, lsl #16
    12c0:	cb020021 	sub	x1, x1, x2
    12c4:	a9000402 	stp	x2, x1, [x0]
    12c8:	d2800201 	mov	x1, #0x10                  	// #16
    12cc:	a8c17bfd 	ldp	x29, x30, [sp], #16
    12d0:	1400082d 	b	3384 <flush_dcache_range>

00000000000012d4 <bl1_main>:
    12d4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    12d8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    12dc:	911e7800 	add	x0, x0, #0x79e
    12e0:	910003fd 	mov	x29, sp
    12e4:	a90153f3 	stp	x19, x20, [sp, #16]
    12e8:	90000033 	adrp	x19, 5000 <__TEXT_END__>
    12ec:	911ee673 	add	x19, x19, #0x7b9
    12f0:	f90013f5 	str	x21, [sp, #32]
    12f4:	94000236 	bl	1bcc <tf_log>
    12f8:	aa1303e0 	mov	x0, x19
    12fc:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1300:	91007821 	add	x1, x1, #0x1e
    1304:	94000232 	bl	1bcc <tf_log>
    1308:	aa1303e0 	mov	x0, x19
    130c:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1310:	91000021 	add	x1, x1, #0x0
    1314:	9400022e 	bl	1bcc <tf_log>
    1318:	d00807a2 	adrp	x2, 100f7000 <__BL1_RAM_END__>
    131c:	91000042 	add	x2, x2, #0x0
    1320:	b0080761 	adrp	x1, 100ee000 <__BL1_RAM_START__>
    1324:	91000021 	add	x1, x1, #0x0
    1328:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    132c:	911f0c00 	add	x0, x0, #0x7c3
    1330:	94000227 	bl	1bcc <tf_log>
    1334:	94000775 	bl	3108 <print_errata_status>
    1338:	d53e1000 	mrs	x0, sctlr_el3
    133c:	370000a0 	tbnz	w0, #0, 1350 <bl1_main+0x7c>
    1340:	52800a61 	mov	w1, #0x53                  	// #83
    1344:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1348:	911e3c00 	add	x0, x0, #0x78f
    134c:	94000929 	bl	37f0 <__assert>
    1350:	37100060 	tbnz	w0, #2, 135c <bl1_main+0x88>
    1354:	52800a81 	mov	w1, #0x54                  	// #84
    1358:	17fffffb 	b	1344 <bl1_main+0x70>
    135c:	37600060 	tbnz	w0, #12, 1368 <bl1_main+0x94>
    1360:	52800aa1 	mov	w1, #0x55                  	// #85
    1364:	17fffff8 	b	1344 <bl1_main+0x70>
    1368:	d53b0021 	mrs	x1, ctr_el0
    136c:	d2800160 	mov	x0, #0xb                   	// #11
    1370:	ea41601f 	tst	x0, x1, lsr #24
    1374:	54000060 	b.eq	1380 <bl1_main+0xac>  // b.none
    1378:	52800c21 	mov	w1, #0x61                  	// #97
    137c:	17fffff2 	b	1344 <bl1_main+0x70>
    1380:	94000065 	bl	1514 <bl1_arch_setup>
    1384:	97fffebb 	bl	e70 <bl1_platform_setup>
    1388:	9400017a 	bl	1970 <bl1_plat_get_next_image_id>
    138c:	2a0003f3 	mov	w19, w0
    1390:	7100041f 	cmp	w0, #0x1
    1394:	540005e1 	b.ne	1450 <bl1_main+0x17c>  // b.any
    1398:	9400017b 	bl	1984 <bl1_plat_get_image_desc>
    139c:	b5000060 	cbnz	x0, 13a8 <bl1_main+0xd4>
    13a0:	52801201 	mov	w1, #0x90                  	// #144
    13a4:	17ffffe8 	b	1344 <bl1_main+0x70>
    13a8:	91004014 	add	x20, x0, #0x10
    13ac:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    13b0:	911f5800 	add	x0, x0, #0x7d6
    13b4:	94000206 	bl	1bcc <tf_log>
    13b8:	2a1303e0 	mov	w0, w19
    13bc:	94000170 	bl	197c <bl1_plat_handle_pre_image_load>
    13c0:	2a0003f5 	mov	w21, w0
    13c4:	340000e0 	cbz	w0, 13e0 <bl1_main+0x10c>
    13c8:	2a0003e1 	mov	w1, w0
    13cc:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    13d0:	911fa400 	add	x0, x0, #0x7e9
    13d4:	940001fe 	bl	1bcc <tf_log>
    13d8:	2a1503e0 	mov	w0, w21
    13dc:	940002a2 	bl	1e64 <plat_error_handler>
    13e0:	aa1403e1 	mov	x1, x20
    13e4:	2a1303e0 	mov	w0, w19
    13e8:	94000181 	bl	19ec <load_auth_image>
    13ec:	2a0003f4 	mov	w20, w0
    13f0:	340000c0 	cbz	w0, 1408 <bl1_main+0x134>
    13f4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    13f8:	91206800 	add	x0, x0, #0x81a
    13fc:	940001f4 	bl	1bcc <tf_log>
    1400:	2a1403e0 	mov	w0, w20
    1404:	17fffff6 	b	13dc <bl1_main+0x108>
    1408:	2a1303e0 	mov	w0, w19
    140c:	94000161 	bl	1990 <bl1_plat_handle_post_image_load>
    1410:	2a0003f4 	mov	w20, w0
    1414:	340000c0 	cbz	w0, 142c <bl1_main+0x158>
    1418:	2a0003e1 	mov	w1, w0
    141c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1420:	9120e400 	add	x0, x0, #0x839
    1424:	940001ea 	bl	1bcc <tf_log>
    1428:	17fffff6 	b	1400 <bl1_main+0x12c>
    142c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1430:	9121ac00 	add	x0, x0, #0x86b
    1434:	940001e6 	bl	1bcc <tf_log>
    1438:	2a1303e0 	mov	w0, w19
    143c:	94000052 	bl	1584 <bl1_prepare_next_image>
    1440:	a94153f3 	ldp	x19, x20, [sp, #16]
    1444:	f94013f5 	ldr	x21, [sp, #32]
    1448:	a8c37bfd 	ldp	x29, x30, [sp], #48
    144c:	1400026b 	b	1df8 <console_flush>
    1450:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1454:	9121f800 	add	x0, x0, #0x87e
    1458:	17fffff7 	b	1434 <bl1_main+0x160>

000000000000145c <bl1_print_next_bl_ep_info>:
    145c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1460:	910003fd 	mov	x29, sp
    1464:	f9000bf3 	str	x19, [sp, #16]
    1468:	aa0003f3 	mov	x19, x0
    146c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1470:	9122ac00 	add	x0, x0, #0x8ab
    1474:	940001d6 	bl	1bcc <tf_log>
    1478:	aa1303e0 	mov	x0, x19
    147c:	f9400bf3 	ldr	x19, [sp, #16]
    1480:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1484:	140001c4 	b	1b94 <print_entry_point_info>

0000000000001488 <bl1_smc_handler>:
    1488:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    148c:	7100041f 	cmp	w0, #0x1
    1490:	910003fd 	mov	x29, sp
    1494:	f9000bf3 	str	x19, [sp, #16]
    1498:	aa0603f3 	mov	x19, x6
    149c:	54000200 	b.eq	14dc <bl1_smc_handler+0x54>  // b.none
    14a0:	34000120 	cbz	w0, 14c4 <bl1_smc_handler+0x3c>
    14a4:	71000c1f 	cmp	w0, #0x3
    14a8:	54000320 	b.eq	150c <bl1_smc_handler+0x84>  // b.none
    14ac:	2a0003e1 	mov	w1, w0
    14b0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    14b4:	9122fc00 	add	x0, x0, #0x8bf
    14b8:	940001c5 	bl	1bcc <tf_log>
    14bc:	92800000 	mov	x0, #0xffffffffffffffff    	// #-1
    14c0:	14000002 	b	14c8 <bl1_smc_handler+0x40>
    14c4:	d2800080 	mov	x0, #0x4                   	// #4
    14c8:	f9000260 	str	x0, [x19]
    14cc:	aa1303e0 	mov	x0, x19
    14d0:	f9400bf3 	ldr	x19, [sp, #16]
    14d4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    14d8:	d65f03c0 	ret
    14dc:	d29e9ac0 	mov	x0, #0xf4d6                	// #62678
    14e0:	f2a95760 	movk	x0, #0x4abb, lsl #16
    14e4:	f9000cc0 	str	x0, [x6, #24]
    14e8:	d28eb6a0 	mov	x0, #0x75b5                	// #30133
    14ec:	f2a2ace0 	movk	x0, #0x1567, lsl #16
    14f0:	f90008c0 	str	x0, [x6, #16]
    14f4:	d28e5960 	mov	x0, #0x72cb                	// #29387
    14f8:	f2a9b340 	movk	x0, #0x4d9a, lsl #16
    14fc:	f90004c0 	str	x0, [x6, #8]
    1500:	d28cfa80 	mov	x0, #0x67d4                	// #26580
    1504:	f2bfa720 	movk	x0, #0xfd39, lsl #16
    1508:	17fffff0 	b	14c8 <bl1_smc_handler+0x40>
    150c:	d2800020 	mov	x0, #0x1                   	// #1
    1510:	17ffffee 	b	14c8 <bl1_smc_handler+0x40>

0000000000001514 <bl1_arch_setup>:
    1514:	d53e1100 	mrs	x0, scr_el3
    1518:	b2760000 	orr	x0, x0, #0x400
    151c:	d51e1100 	msr	scr_el3, x0
    1520:	d65f03c0 	ret

0000000000001524 <cm_get_context>:
    1524:	7100041f 	cmp	w0, #0x1
    1528:	540000e9 	b.ls	1544 <cm_get_context+0x20>  // b.plast
    152c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1530:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1534:	91252800 	add	x0, x0, #0x94a
    1538:	910003fd 	mov	x29, sp
    153c:	528003a1 	mov	w1, #0x1d                  	// #29
    1540:	940008ac 	bl	37f0 <__assert>
    1544:	b0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
    1548:	911e0021 	add	x1, x1, #0x780
    154c:	f8605820 	ldr	x0, [x1, w0, uxtw #3]
    1550:	d65f03c0 	ret

0000000000001554 <cm_set_context>:
    1554:	7100043f 	cmp	w1, #0x1
    1558:	540000e9 	b.ls	1574 <cm_set_context+0x20>  // b.plast
    155c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1560:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1564:	91252800 	add	x0, x0, #0x94a
    1568:	910003fd 	mov	x29, sp
    156c:	52800461 	mov	w1, #0x23                  	// #35
    1570:	940008a0 	bl	37f0 <__assert>
    1574:	b0080782 	adrp	x2, 100f2000 <platform_normal_stacks+0x3f00>
    1578:	911e0042 	add	x2, x2, #0x780
    157c:	f8215840 	str	x0, [x2, w1, uxtw #3]
    1580:	d65f03c0 	ret

0000000000001584 <bl1_prepare_next_image>:
    1584:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1588:	910003fd 	mov	x29, sp
    158c:	a90153f3 	stp	x19, x20, [sp, #16]
    1590:	a9025bf5 	stp	x21, x22, [sp, #32]
    1594:	d5380401 	mrs	x1, id_aa64pfr0_el1
    1598:	d3441c21 	ubfx	x1, x1, #4, #4
    159c:	f100043f 	cmp	x1, #0x1
    15a0:	54000121 	b.ne	15c4 <bl1_prepare_next_image+0x40>  // b.any
    15a4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    15a8:	9123e800 	add	x0, x0, #0x8fa
    15ac:	94000188 	bl	1bcc <tf_log>
    15b0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    15b4:	91238c00 	add	x0, x0, #0x8e3
    15b8:	94000261 	bl	1f3c <backtrace>
    15bc:	9400020f 	bl	1df8 <console_flush>
    15c0:	94000760 	bl	3340 <do_panic>
    15c4:	2a0003f6 	mov	w22, w0
    15c8:	940000ef 	bl	1984 <bl1_plat_get_image_desc>
    15cc:	aa0003f5 	mov	x21, x0
    15d0:	b50000a0 	cbnz	x0, 15e4 <bl1_prepare_next_image+0x60>
    15d4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    15d8:	91252800 	add	x0, x0, #0x94a
    15dc:	528007e1 	mov	w1, #0x3f                  	// #63
    15e0:	94000884 	bl	37f0 <__assert>
    15e4:	9100a014 	add	x20, x0, #0x28
    15e8:	b9400693 	ldr	w19, [x20, #4]
    15ec:	12000273 	and	w19, w19, #0x1
    15f0:	2a1303e0 	mov	w0, w19
    15f4:	97ffffcc 	bl	1524 <cm_get_context>
    15f8:	b50000e0 	cbnz	x0, 1614 <bl1_prepare_next_image+0x90>
    15fc:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1600:	910c8000 	add	x0, x0, #0x320
    1604:	52804602 	mov	w2, #0x230                 	// #560
    1608:	2a1303e1 	mov	w1, w19
    160c:	9ba20260 	umaddl	x0, w19, w2, x0
    1610:	97ffffd1 	bl	1554 <cm_set_context>
    1614:	35000233 	cbnz	w19, 1658 <bl1_prepare_next_image+0xd4>
    1618:	528078a0 	mov	w0, #0x3c5                 	// #965
    161c:	aa1403e1 	mov	x1, x20
    1620:	b9001280 	str	w0, [x20, #16]
    1624:	2a1603e0 	mov	w0, w22
    1628:	940000d4 	bl	1978 <bl1_plat_set_ep_info>
    162c:	aa1403e0 	mov	x0, x20
    1630:	94000075 	bl	1804 <cm_init_my_context>
    1634:	2a1303e0 	mov	w0, w19
    1638:	9400009c 	bl	18a8 <cm_prepare_el3_exit>
    163c:	52800080 	mov	w0, #0x4                   	// #4
    1640:	b90006a0 	str	w0, [x21, #4]
    1644:	aa1403e0 	mov	x0, x20
    1648:	a94153f3 	ldp	x19, x20, [sp, #16]
    164c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1650:	a8c37bfd 	ldp	x29, x30, [sp], #48
    1654:	14000150 	b	1b94 <print_entry_point_info>
    1658:	d5380400 	mrs	x0, id_aa64pfr0_el1
    165c:	f2780c1f 	tst	x0, #0xf00
    1660:	528078a1 	mov	w1, #0x3c5                 	// #965
    1664:	52807920 	mov	w0, #0x3c9                 	// #969
    1668:	1a811000 	csel	w0, w0, w1, ne  // ne = any
    166c:	17ffffec 	b	161c <bl1_prepare_next_image+0x98>

0000000000001670 <errata_print_msg>:
    1670:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1674:	7100081f 	cmp	w0, #0x2
    1678:	910003fd 	mov	x29, sp
    167c:	540000a9 	b.ls	1690 <errata_print_msg+0x20>  // b.plast
    1680:	528009e1 	mov	w1, #0x4f                  	// #79
    1684:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1688:	9125a400 	add	x0, x0, #0x969
    168c:	94000859 	bl	37f0 <__assert>
    1690:	b5000061 	cbnz	x1, 169c <errata_print_msg+0x2c>
    1694:	52800a01 	mov	w1, #0x50                  	// #80
    1698:	17fffffb 	b	1684 <errata_print_msg+0x14>
    169c:	aa0203e3 	mov	x3, x2
    16a0:	b5000062 	cbnz	x2, 16ac <errata_print_msg+0x3c>
    16a4:	52800a21 	mov	w1, #0x51                  	// #81
    16a8:	17fffff7 	b	1684 <errata_print_msg+0x14>
    16ac:	7100041f 	cmp	w0, #0x1
    16b0:	540000a0 	b.eq	16c4 <errata_print_msg+0x54>  // b.none
    16b4:	7100081f 	cmp	w0, #0x2
    16b8:	54000180 	b.eq	16e8 <errata_print_msg+0x78>  // b.none
    16bc:	a8c17bfd 	ldp	x29, x30, [sp], #16
    16c0:	d65f03c0 	ret
    16c4:	90000024 	adrp	x4, 5000 <__TEXT_END__>
    16c8:	91260884 	add	x4, x4, #0x982
    16cc:	aa0103e2 	mov	x2, x1
    16d0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    16d4:	91263800 	add	x0, x0, #0x98e
    16d8:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    16dc:	91262821 	add	x1, x1, #0x98a
    16e0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    16e4:	1400013a 	b	1bcc <tf_log>
    16e8:	90000024 	adrp	x4, 5000 <__TEXT_END__>
    16ec:	9126d484 	add	x4, x4, #0x9b5
    16f0:	aa0103e2 	mov	x2, x1
    16f4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    16f8:	9126f800 	add	x0, x0, #0x9be
    16fc:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1700:	91262821 	add	x1, x1, #0x98a
    1704:	17fffff7 	b	16e0 <errata_print_msg+0x70>

0000000000001708 <cm_setup_context>:
    1708:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    170c:	910003fd 	mov	x29, sp
    1710:	a90153f3 	stp	x19, x20, [sp, #16]
    1714:	f90013f5 	str	x21, [sp, #32]
    1718:	b50000a0 	cbnz	x0, 172c <cm_setup_context+0x24>
    171c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1720:	91283000 	add	x0, x0, #0xa0c
    1724:	52800921 	mov	w1, #0x49                  	// #73
    1728:	94000832 	bl	37f0 <__assert>
    172c:	aa0103f4 	mov	x20, x1
    1730:	aa0003f3 	mov	x19, x0
    1734:	d2804601 	mov	x1, #0x230                 	// #560
    1738:	b9400695 	ldr	w21, [x20, #4]
    173c:	9400073c 	bl	342c <zeromem>
    1740:	120002b5 	and	w21, w21, #0x1
    1744:	d53e1101 	mrs	x1, scr_el3
    1748:	1281a0e0 	mov	w0, #0xfffff2f8            	// #-3336
    174c:	0a010000 	and	w0, w0, w1
    1750:	34000055 	cbz	w21, 1758 <cm_setup_context+0x50>
    1754:	32000000 	orr	w0, w0, #0x1
    1758:	b9401282 	ldr	w2, [x20, #16]
    175c:	d3441044 	ubfx	x4, x2, #4, #1
    1760:	35000044 	cbnz	w4, 1768 <cm_setup_context+0x60>
    1764:	32160000 	orr	w0, w0, #0x400
    1768:	b9400681 	ldr	w1, [x20, #4]
    176c:	36100041 	tbz	w1, #2, 1774 <cm_setup_context+0x6c>
    1770:	32150000 	orr	w0, w0, #0x800
    1774:	121c7800 	and	w0, w0, #0xfffffff7
    1778:	35000404 	cbnz	w4, 17f8 <cm_setup_context+0xf0>
    177c:	d3420c43 	ubfx	x3, x2, #2, #2
    1780:	7100087f 	cmp	w3, #0x2
    1784:	54000041 	b.ne	178c <cm_setup_context+0x84>  // b.any
    1788:	32180000 	orr	w0, w0, #0x100
    178c:	d3687c21 	ubfiz	x1, x1, #24, #32
    1790:	7100009f 	cmp	w4, #0x0
    1794:	92670021 	and	x1, x1, #0x2000000
    1798:	d2810003 	mov	x3, #0x800                 	// #2048
    179c:	f2a61a03 	movk	x3, #0x30d0, lsl #16
    17a0:	d2810705 	mov	x5, #0x838                 	// #2104
    17a4:	f2a018a5 	movk	x5, #0xc5, lsl #16
    17a8:	aa030023 	orr	x3, x1, x3
    17ac:	aa050021 	orr	x1, x1, x5
    17b0:	9a831021 	csel	x1, x1, x3, ne  // ne = any
    17b4:	f900a261 	str	x1, [x19, #320]
    17b8:	d5381021 	mrs	x1, actlr_el1
    17bc:	f900a661 	str	x1, [x19, #328]
    17c0:	35000075 	cbnz	w21, 17cc <cm_setup_context+0xc4>
    17c4:	d2800c01 	mov	x1, #0x60                  	// #96
    17c8:	f900f261 	str	x1, [x19, #480]
    17cc:	f94013f5 	ldr	x21, [sp, #32]
    17d0:	f9008260 	str	x0, [x19, #256]
    17d4:	f9400680 	ldr	x0, [x20, #8]
    17d8:	2a0203e2 	mov	w2, w2
    17dc:	a9118262 	stp	x2, x0, [x19, #280]
    17e0:	91006281 	add	x1, x20, #0x18
    17e4:	aa1303e0 	mov	x0, x19
    17e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    17ec:	d2800802 	mov	x2, #0x40                  	// #64
    17f0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    17f4:	14000818 	b	3854 <memcpy>
    17f8:	12000c43 	and	w3, w2, #0xf
    17fc:	7100287f 	cmp	w3, #0xa
    1800:	17ffffe1 	b	1784 <cm_setup_context+0x7c>

0000000000001804 <cm_init_my_context>:
    1804:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1808:	910003fd 	mov	x29, sp
    180c:	f9000bf3 	str	x19, [sp, #16]
    1810:	aa0003f3 	mov	x19, x0
    1814:	b9400400 	ldr	w0, [x0, #4]
    1818:	12000000 	and	w0, w0, #0x1
    181c:	97ffff42 	bl	1524 <cm_get_context>
    1820:	aa1303e1 	mov	x1, x19
    1824:	f9400bf3 	ldr	x19, [sp, #16]
    1828:	a8c27bfd 	ldp	x29, x30, [sp], #32
    182c:	17ffffb7 	b	1708 <cm_setup_context>

0000000000001830 <cm_el1_sysregs_context_restore>:
    1830:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1834:	910003fd 	mov	x29, sp
    1838:	97ffff3b 	bl	1524 <cm_get_context>
    183c:	b50000a0 	cbnz	x0, 1850 <cm_el1_sysregs_context_restore+0x20>
    1840:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1844:	91283000 	add	x0, x0, #0xa0c
    1848:	52803d81 	mov	w1, #0x1ec                 	// #492
    184c:	940007e9 	bl	37f0 <__assert>
    1850:	a8c17bfd 	ldp	x29, x30, [sp], #16
    1854:	9104c000 	add	x0, x0, #0x130
    1858:	14000633 	b	3124 <el1_sysregs_context_restore>

000000000000185c <cm_set_next_eret_context>:
    185c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1860:	910003fd 	mov	x29, sp
    1864:	97ffff30 	bl	1524 <cm_get_context>
    1868:	b50000a0 	cbnz	x0, 187c <cm_set_next_eret_context+0x20>
    186c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1870:	91283000 	add	x0, x0, #0xa0c
    1874:	52804b01 	mov	w1, #0x258                 	// #600
    1878:	940007de 	bl	37f0 <__assert>
    187c:	d5384201 	mrs	x1, spsel
    1880:	b40000a1 	cbz	x1, 1894 <cm_set_next_eret_context+0x38>
    1884:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1888:	91279400 	add	x0, x0, #0x9e5
    188c:	528008a1 	mov	w1, #0x45                  	// #69
    1890:	17fffffa 	b	1878 <cm_set_next_eret_context+0x1c>
    1894:	d50041bf 	msr	spsel, #0x1
    1898:	9100001f 	mov	sp, x0
    189c:	d50040bf 	msr	spsel, #0x0
    18a0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    18a4:	d65f03c0 	ret

00000000000018a8 <cm_prepare_el3_exit>:
    18a8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    18ac:	910003fd 	mov	x29, sp
    18b0:	f9000bf3 	str	x19, [sp, #16]
    18b4:	2a0003f3 	mov	w19, w0
    18b8:	97ffff1b 	bl	1524 <cm_get_context>
    18bc:	b50000a0 	cbnz	x0, 18d0 <cm_prepare_el3_exit+0x28>
    18c0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    18c4:	91283000 	add	x0, x0, #0xa0c
    18c8:	52802521 	mov	w1, #0x129                 	// #297
    18cc:	940007c9 	bl	37f0 <__assert>
    18d0:	7100067f 	cmp	w19, #0x1
    18d4:	54000121 	b.ne	18f8 <cm_prepare_el3_exit+0x50>  // b.any
    18d8:	f9408001 	ldr	x1, [x0, #256]
    18dc:	364001a1 	tbz	w1, #8, 1910 <cm_prepare_el3_exit+0x68>
    18e0:	f940a000 	ldr	x0, [x0, #320]
    18e4:	52810601 	mov	w1, #0x830                 	// #2096
    18e8:	72a618a1 	movk	w1, #0x30c5, lsl #16
    18ec:	12070000 	and	w0, w0, #0x2000000
    18f0:	2a010000 	orr	w0, w0, w1
    18f4:	d51c1000 	msr	sctlr_el2, x0
    18f8:	2a1303e0 	mov	w0, w19
    18fc:	97ffffcd 	bl	1830 <cm_el1_sysregs_context_restore>
    1900:	2a1303e0 	mov	w0, w19
    1904:	f9400bf3 	ldr	x19, [sp, #16]
    1908:	a8c27bfd 	ldp	x29, x30, [sp], #32
    190c:	17ffffd4 	b	185c <cm_set_next_eret_context>
    1910:	d5380400 	mrs	x0, id_aa64pfr0_el1
    1914:	f2780c1f 	tst	x0, #0xf00
    1918:	54ffff00 	b.eq	18f8 <cm_prepare_el3_exit+0x50>  // b.none
    191c:	d34a2820 	ubfx	x0, x1, #10, #1
    1920:	d3618000 	lsl	x0, x0, #31
    1924:	b2580400 	orr	x0, x0, #0x30000000000
    1928:	d51c1100 	msr	hcr_el2, x0
    192c:	d2867fe0 	mov	x0, #0x33ff                	// #13311
    1930:	d51c1140 	msr	cptr_el2, x0
    1934:	d2800060 	mov	x0, #0x3                   	// #3
    1938:	d51ce100 	msr	cnthctl_el2, x0
    193c:	d2800000 	mov	x0, #0x0                   	// #0
    1940:	d51ce060 	msr	cntvoff_el2, x0
    1944:	d5380001 	mrs	x1, midr_el1
    1948:	d51c0001 	msr	vpidr_el2, x1
    194c:	d53800a1 	mrs	x1, mpidr_el1
    1950:	d51c00a1 	msr	vmpidr_el2, x1
    1954:	d51c2100 	msr	vttbr_el2, x0
    1958:	d53b9c01 	mrs	x1, pmcr_el0
    195c:	d34b3c21 	ubfx	x1, x1, #11, #5
    1960:	d51c1121 	msr	mdcr_el2, x1
    1964:	d51c1160 	msr	hstr_el2, x0
    1968:	d51ce220 	msr	cnthp_ctl_el2, x0
    196c:	17ffffe3 	b	18f8 <cm_prepare_el3_exit+0x50>

0000000000001970 <bl1_plat_get_next_image_id>:
    1970:	52800020 	mov	w0, #0x1                   	// #1
    1974:	d65f03c0 	ret

0000000000001978 <bl1_plat_set_ep_info>:
    1978:	d65f03c0 	ret

000000000000197c <bl1_plat_handle_pre_image_load>:
    197c:	52800000 	mov	w0, #0x0                   	// #0
    1980:	d65f03c0 	ret

0000000000001984 <bl1_plat_get_image_desc>:
    1984:	b0080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    1988:	91000000 	add	x0, x0, #0x0
    198c:	d65f03c0 	ret

0000000000001990 <bl1_plat_handle_post_image_load>:
    1990:	7100041f 	cmp	w0, #0x1
    1994:	54000281 	b.ne	19e4 <bl1_plat_handle_post_image_load+0x54>  // b.any
    1998:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    199c:	910003fd 	mov	x29, sp
    19a0:	a90153f3 	stp	x19, x20, [sp, #16]
    19a4:	97fffff8 	bl	1984 <bl1_plat_get_image_desc>
    19a8:	aa0003f3 	mov	x19, x0
    19ac:	b50000a0 	cbnz	x0, 19c0 <bl1_plat_handle_post_image_load+0x30>
    19b0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    19b4:	9128cc00 	add	x0, x0, #0xa33
    19b8:	52800bc1 	mov	w1, #0x5e                  	// #94
    19bc:	9400078d 	bl	37f0 <__assert>
    19c0:	97fffd05 	bl	dd4 <bl1_plat_sec_mem_layout>
    19c4:	f9400014 	ldr	x20, [x0]
    19c8:	aa1403e1 	mov	x1, x20
    19cc:	97fffe28 	bl	126c <bl1_calc_bl2_mem_layout>
    19d0:	f9002674 	str	x20, [x19, #72]
    19d4:	52800000 	mov	w0, #0x0                   	// #0
    19d8:	a94153f3 	ldp	x19, x20, [sp, #16]
    19dc:	a8c27bfd 	ldp	x29, x30, [sp], #32
    19e0:	d65f03c0 	ret
    19e4:	52800000 	mov	w0, #0x0                   	// #0
    19e8:	d65f03c0 	ret

00000000000019ec <load_auth_image>:
    19ec:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    19f0:	910003fd 	mov	x29, sp
    19f4:	a90153f3 	stp	x19, x20, [sp, #16]
    19f8:	2a0003f4 	mov	w20, w0
    19fc:	a9025bf5 	stp	x21, x22, [sp, #32]
    1a00:	aa0103f5 	mov	x21, x1
    1a04:	f9001bf7 	str	x23, [sp, #48]
    1a08:	90000037 	adrp	x23, 5000 <__TEXT_END__>
    1a0c:	912a6ef7 	add	x23, x23, #0xa9b
    1a10:	b50000b5 	cbnz	x21, 1a24 <load_auth_image+0x38>
    1a14:	528014a1 	mov	w1, #0xa5                  	// #165
    1a18:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1a1c:	912a2000 	add	x0, x0, #0xa88
    1a20:	94000774 	bl	37f0 <__assert>
    1a24:	394006a0 	ldrb	w0, [x21, #1]
    1a28:	7100041f 	cmp	w0, #0x1
    1a2c:	54000068 	b.hi	1a38 <load_auth_image+0x4c>  // b.pmore
    1a30:	528014c1 	mov	w1, #0xa6                  	// #166
    1a34:	17fffff9 	b	1a18 <load_auth_image+0x2c>
    1a38:	910163e2 	add	x2, sp, #0x58
    1a3c:	910123e1 	add	x1, sp, #0x48
    1a40:	2a1403e0 	mov	w0, w20
    1a44:	f94006b6 	ldr	x22, [x21, #8]
    1a48:	97fffd8c 	bl	1078 <plat_get_image_source>
    1a4c:	2a0003f3 	mov	w19, w0
    1a50:	34000120 	cbz	w0, 1a74 <load_auth_image+0x88>
    1a54:	2a0003e2 	mov	w2, w0
    1a58:	2a1403e1 	mov	w1, w20
    1a5c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1a60:	91024000 	add	x0, x0, #0x90
    1a64:	9400005a 	bl	1bcc <tf_log>
    1a68:	94000101 	bl	1e6c <plat_try_next_boot_source>
    1a6c:	35fffd20 	cbnz	w0, 1a10 <load_auth_image+0x24>
    1a70:	1400002d 	b	1b24 <load_auth_image+0x138>
    1a74:	f94027e0 	ldr	x0, [sp, #72]
    1a78:	910143e2 	add	x2, sp, #0x50
    1a7c:	f9402fe1 	ldr	x1, [sp, #88]
    1a80:	97fffc22 	bl	b08 <io_open>
    1a84:	2a0003f3 	mov	w19, w0
    1a88:	340000c0 	cbz	w0, 1aa0 <load_auth_image+0xb4>
    1a8c:	2a0003e2 	mov	w2, w0
    1a90:	2a1403e1 	mov	w1, w20
    1a94:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1a98:	91030400 	add	x0, x0, #0xc1
    1a9c:	17fffff2 	b	1a64 <load_auth_image+0x78>
    1aa0:	aa1603e2 	mov	x2, x22
    1aa4:	2a1403e1 	mov	w1, w20
    1aa8:	aa1703e0 	mov	x0, x23
    1aac:	94000048 	bl	1bcc <tf_log>
    1ab0:	f9402be0 	ldr	x0, [sp, #80]
    1ab4:	910183e1 	add	x1, sp, #0x60
    1ab8:	97fffc76 	bl	c90 <io_size>
    1abc:	2a0003f3 	mov	w19, w0
    1ac0:	35000060 	cbnz	w0, 1acc <load_auth_image+0xe0>
    1ac4:	f94033e2 	ldr	x2, [sp, #96]
    1ac8:	b50000e2 	cbnz	x2, 1ae4 <load_auth_image+0xf8>
    1acc:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1ad0:	91294400 	add	x0, x0, #0xa51
    1ad4:	2a1303e2 	mov	w2, w19
    1ad8:	2a1403e1 	mov	w1, w20
    1adc:	9400003c 	bl	1bcc <tf_log>
    1ae0:	14000009 	b	1b04 <load_auth_image+0x118>
    1ae4:	b94016a0 	ldr	w0, [x21, #20]
    1ae8:	eb00005f 	cmp	x2, x0
    1aec:	54000289 	b.ls	1b3c <load_auth_image+0x150>  // b.plast
    1af0:	12800353 	mov	w19, #0xffffffe5            	// #-27
    1af4:	2a1403e1 	mov	w1, w20
    1af8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1afc:	912b0800 	add	x0, x0, #0xac2
    1b00:	94000033 	bl	1bcc <tf_log>
    1b04:	f9402be0 	ldr	x0, [sp, #80]
    1b08:	97fffc9a 	bl	d70 <io_close>
    1b0c:	f94027e0 	ldr	x0, [sp, #72]
    1b10:	97fffbe6 	bl	aa8 <io_dev_close>
    1b14:	35fffab3 	cbnz	w19, 1a68 <load_auth_image+0x7c>
    1b18:	b94012a1 	ldr	w1, [x21, #16]
    1b1c:	f94006a0 	ldr	x0, [x21, #8]
    1b20:	94000619 	bl	3384 <flush_dcache_range>
    1b24:	2a1303e0 	mov	w0, w19
    1b28:	a94153f3 	ldp	x19, x20, [sp, #16]
    1b2c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1b30:	f9401bf7 	ldr	x23, [sp, #48]
    1b34:	a8c77bfd 	ldp	x29, x30, [sp], #112
    1b38:	d65f03c0 	ret
    1b3c:	f9402be0 	ldr	x0, [sp, #80]
    1b40:	b90012a2 	str	w2, [x21, #16]
    1b44:	9101a3e3 	add	x3, sp, #0x68
    1b48:	aa1603e1 	mov	x1, x22
    1b4c:	97fffc6a 	bl	cf4 <io_read>
    1b50:	2a0003f3 	mov	w19, w0
    1b54:	35000080 	cbnz	w0, 1b64 <load_auth_image+0x178>
    1b58:	a94603e3 	ldp	x3, x0, [sp, #96]
    1b5c:	eb03001f 	cmp	x0, x3
    1b60:	540000c2 	b.cs	1b78 <load_auth_image+0x18c>  // b.hs, b.nlast
    1b64:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1b68:	912b8c00 	add	x0, x0, #0xae3
    1b6c:	2a1303e2 	mov	w2, w19
    1b70:	2a1403e1 	mov	w1, w20
    1b74:	17ffffda 	b	1adc <load_auth_image+0xf0>
    1b78:	8b0302c3 	add	x3, x22, x3
    1b7c:	aa1603e2 	mov	x2, x22
    1b80:	2a1403e1 	mov	w1, w20
    1b84:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1b88:	912c1400 	add	x0, x0, #0xb05
    1b8c:	94000010 	bl	1bcc <tf_log>
    1b90:	17ffffdd 	b	1b04 <load_auth_image+0x118>

0000000000001b94 <print_entry_point_info>:
    1b94:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1b98:	910003fd 	mov	x29, sp
    1b9c:	f9000bf3 	str	x19, [sp, #16]
    1ba0:	aa0003f3 	mov	x19, x0
    1ba4:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1ba8:	912ca400 	add	x0, x0, #0xb29
    1bac:	f9400661 	ldr	x1, [x19, #8]
    1bb0:	94000007 	bl	1bcc <tf_log>
    1bb4:	b9401261 	ldr	w1, [x19, #16]
    1bb8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1bbc:	912d1c00 	add	x0, x0, #0xb47
    1bc0:	f9400bf3 	ldr	x19, [sp, #16]
    1bc4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1bc8:	14000001 	b	1bcc <tf_log>

0000000000001bcc <tf_log>:
    1bcc:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
    1bd0:	910003fd 	mov	x29, sp
    1bd4:	a90153f3 	stp	x19, x20, [sp, #16]
    1bd8:	aa0003f4 	mov	x20, x0
    1bdc:	a9068be1 	stp	x1, x2, [sp, #104]
    1be0:	a90793e3 	stp	x3, x4, [sp, #120]
    1be4:	a9089be5 	stp	x5, x6, [sp, #136]
    1be8:	f9004fe7 	str	x7, [sp, #152]
    1bec:	39400000 	ldrb	w0, [x0]
    1bf0:	51000401 	sub	w1, w0, #0x1
    1bf4:	7100c43f 	cmp	w1, #0x31
    1bf8:	540000a9 	b.ls	1c0c <tf_log+0x40>  // b.plast
    1bfc:	52800441 	mov	w1, #0x22                  	// #34
    1c00:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1c04:	912d5400 	add	x0, x0, #0xb55
    1c08:	940006fa 	bl	37f0 <__assert>
    1c0c:	52800142 	mov	w2, #0xa                   	// #10
    1c10:	1ac20801 	udiv	w1, w0, w2
    1c14:	1b028021 	msub	w1, w1, w2, w0
    1c18:	34000061 	cbz	w1, 1c24 <tf_log+0x58>
    1c1c:	52800461 	mov	w1, #0x23                  	// #35
    1c20:	17fffff8 	b	1c00 <tf_log+0x34>
    1c24:	b0080761 	adrp	x1, 100ee000 <__BL1_RAM_START__>
    1c28:	b9408021 	ldr	w1, [x1, #128]
    1c2c:	6b00003f 	cmp	w1, w0
    1c30:	54000263 	b.cc	1c7c <tf_log+0xb0>  // b.lo, b.ul, b.last
    1c34:	94000090 	bl	1e74 <plat_log_get_prefix>
    1c38:	aa0003f3 	mov	x19, x0
    1c3c:	39400260 	ldrb	w0, [x19]
    1c40:	35000240 	cbnz	w0, 1c88 <tf_log+0xbc>
    1c44:	910283e0 	add	x0, sp, #0xa0
    1c48:	a90403e0 	stp	x0, x0, [sp, #64]
    1c4c:	910183e0 	add	x0, sp, #0x60
    1c50:	f9002be0 	str	x0, [sp, #80]
    1c54:	128006e0 	mov	w0, #0xffffffc8            	// #-56
    1c58:	b9005be0 	str	w0, [sp, #88]
    1c5c:	b9005fff 	str	wzr, [sp, #92]
    1c60:	a94407e0 	ldp	x0, x1, [sp, #64]
    1c64:	a90207e0 	stp	x0, x1, [sp, #32]
    1c68:	a94507e0 	ldp	x0, x1, [sp, #80]
    1c6c:	a90307e0 	stp	x0, x1, [sp, #48]
    1c70:	910083e1 	add	x1, sp, #0x20
    1c74:	91000680 	add	x0, x20, #0x1
    1c78:	9400073d 	bl	396c <vprintf>
    1c7c:	a94153f3 	ldp	x19, x20, [sp, #16]
    1c80:	a8ca7bfd 	ldp	x29, x30, [sp], #160
    1c84:	d65f03c0 	ret
    1c88:	94000852 	bl	3dd0 <putchar>
    1c8c:	91000673 	add	x19, x19, #0x1
    1c90:	17ffffeb 	b	1c3c <tf_log+0x70>

0000000000001c94 <console_is_registered>:
    1c94:	b50000e0 	cbnz	x0, 1cb0 <console_is_registered+0x1c>
    1c98:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1c9c:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1ca0:	912d9400 	add	x0, x0, #0xb65
    1ca4:	910003fd 	mov	x29, sp
    1ca8:	52800681 	mov	w1, #0x34                  	// #52
    1cac:	940006d1 	bl	37f0 <__assert>
    1cb0:	b0080781 	adrp	x1, 100f2000 <platform_normal_stacks+0x3f00>
    1cb4:	f944a421 	ldr	x1, [x1, #2376]
    1cb8:	b5000061 	cbnz	x1, 1cc4 <console_is_registered+0x30>
    1cbc:	52800000 	mov	w0, #0x0                   	// #0
    1cc0:	d65f03c0 	ret
    1cc4:	eb00003f 	cmp	x1, x0
    1cc8:	54000060 	b.eq	1cd4 <console_is_registered+0x40>  // b.none
    1ccc:	f9400021 	ldr	x1, [x1]
    1cd0:	17fffffa 	b	1cb8 <console_is_registered+0x24>
    1cd4:	52800020 	mov	w0, #0x1                   	// #1
    1cd8:	d65f03c0 	ret

0000000000001cdc <console_register>:
    1cdc:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1ce0:	910003fd 	mov	x29, sp
    1ce4:	f9000bf3 	str	x19, [sp, #16]
    1ce8:	aa0003f3 	mov	x19, x0
    1cec:	b0080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    1cf0:	9103a000 	add	x0, x0, #0xe8
    1cf4:	eb00027f 	cmp	x19, x0
    1cf8:	54000123 	b.cc	1d1c <console_register+0x40>  // b.lo, b.ul, b.last
    1cfc:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1d00:	91040000 	add	x0, x0, #0x100
    1d04:	eb00027f 	cmp	x19, x0
    1d08:	540000a2 	b.cs	1d1c <console_register+0x40>  // b.hs, b.nlast
    1d0c:	528002c1 	mov	w1, #0x16                  	// #22
    1d10:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1d14:	912d9400 	add	x0, x0, #0xb65
    1d18:	940006b6 	bl	37f0 <__assert>
    1d1c:	aa1303e0 	mov	x0, x19
    1d20:	97ffffdd 	bl	1c94 <console_is_registered>
    1d24:	34000060 	cbz	w0, 1d30 <console_register+0x54>
    1d28:	52800301 	mov	w1, #0x18                  	// #24
    1d2c:	17fffff9 	b	1d10 <console_register+0x34>
    1d30:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1d34:	f944a401 	ldr	x1, [x0, #2376]
    1d38:	f9000261 	str	x1, [x19]
    1d3c:	f904a413 	str	x19, [x0, #2376]
    1d40:	52800020 	mov	w0, #0x1                   	// #1
    1d44:	f9400bf3 	ldr	x19, [sp, #16]
    1d48:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1d4c:	d65f03c0 	ret

0000000000001d50 <console_set_scope>:
    1d50:	b50000e0 	cbnz	x0, 1d6c <console_set_scope+0x1c>
    1d54:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1d58:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1d5c:	912d9400 	add	x0, x0, #0xb65
    1d60:	910003fd 	mov	x29, sp
    1d64:	52800881 	mov	w1, #0x44                  	// #68
    1d68:	940006a2 	bl	37f0 <__assert>
    1d6c:	f9400402 	ldr	x2, [x0, #8]
    1d70:	2a0103e1 	mov	w1, w1
    1d74:	92785c42 	and	x2, x2, #0xffffff00
    1d78:	aa010042 	orr	x2, x2, x1
    1d7c:	f9000402 	str	x2, [x0, #8]
    1d80:	d65f03c0 	ret

0000000000001d84 <console_putc>:
    1d84:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1d88:	910003fd 	mov	x29, sp
    1d8c:	a90153f3 	stp	x19, x20, [sp, #16]
    1d90:	12800ff4 	mov	w20, #0xffffff80            	// #-128
    1d94:	a9025bf5 	stp	x21, x22, [sp, #32]
    1d98:	2a0003f6 	mov	w22, w0
    1d9c:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1da0:	f944a413 	ldr	x19, [x0, #2376]
    1da4:	b0080775 	adrp	x21, 100ee000 <__BL1_RAM_START__>
    1da8:	910212b5 	add	x21, x21, #0x84
    1dac:	b50000d3 	cbnz	x19, 1dc4 <console_putc+0x40>
    1db0:	2a1403e0 	mov	w0, w20
    1db4:	a94153f3 	ldp	x19, x20, [sp, #16]
    1db8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1dbc:	a8c37bfd 	ldp	x29, x30, [sp], #48
    1dc0:	d65f03c0 	ret
    1dc4:	f9400660 	ldr	x0, [x19, #8]
    1dc8:	394002a1 	ldrb	w1, [x21]
    1dcc:	ea00003f 	tst	x1, x0
    1dd0:	54000100 	b.eq	1df0 <console_putc+0x6c>  // b.none
    1dd4:	f9400a62 	ldr	x2, [x19, #16]
    1dd8:	aa1303e1 	mov	x1, x19
    1ddc:	2a1603e0 	mov	w0, w22
    1de0:	d63f0040 	blr	x2
    1de4:	3102029f 	cmn	w20, #0x80
    1de8:	7a401280 	ccmp	w20, w0, #0x0, ne  // ne = any
    1dec:	1a80d294 	csel	w20, w20, w0, le
    1df0:	f9400273 	ldr	x19, [x19]
    1df4:	17ffffee 	b	1dac <console_putc+0x28>

0000000000001df8 <console_flush>:
    1df8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1dfc:	910003fd 	mov	x29, sp
    1e00:	a90153f3 	stp	x19, x20, [sp, #16]
    1e04:	b0080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    1e08:	f944a413 	ldr	x19, [x0, #2376]
    1e0c:	f90013f5 	str	x21, [sp, #32]
    1e10:	b0080775 	adrp	x21, 100ee000 <__BL1_RAM_START__>
    1e14:	910212b5 	add	x21, x21, #0x84
    1e18:	12800ff4 	mov	w20, #0xffffff80            	// #-128
    1e1c:	b50000d3 	cbnz	x19, 1e34 <console_flush+0x3c>
    1e20:	2a1403e0 	mov	w0, w20
    1e24:	a94153f3 	ldp	x19, x20, [sp, #16]
    1e28:	f94013f5 	ldr	x21, [sp, #32]
    1e2c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    1e30:	d65f03c0 	ret
    1e34:	f9400660 	ldr	x0, [x19, #8]
    1e38:	394002a1 	ldrb	w1, [x21]
    1e3c:	ea00003f 	tst	x1, x0
    1e40:	540000e0 	b.eq	1e5c <console_flush+0x64>  // b.none
    1e44:	f9401261 	ldr	x1, [x19, #32]
    1e48:	aa1303e0 	mov	x0, x19
    1e4c:	d63f0020 	blr	x1
    1e50:	3102029f 	cmn	w20, #0x80
    1e54:	7a401280 	ccmp	w20, w0, #0x0, ne  // ne = any
    1e58:	1a80d294 	csel	w20, w20, w0, le
    1e5c:	f9400273 	ldr	x19, [x19]
    1e60:	17ffffef 	b	1e1c <console_flush+0x24>

0000000000001e64 <plat_error_handler>:
    1e64:	d503207f 	wfi
    1e68:	17ffffff 	b	1e64 <plat_error_handler>

0000000000001e6c <plat_try_next_boot_source>:
    1e6c:	52800000 	mov	w0, #0x0                   	// #0
    1e70:	d65f03c0 	ret

0000000000001e74 <plat_log_get_prefix>:
    1e74:	7100c81f 	cmp	w0, #0x32
    1e78:	52800641 	mov	w1, #0x32                  	// #50
    1e7c:	1a819000 	csel	w0, w0, w1, ls  // ls = plast
    1e80:	52800141 	mov	w1, #0xa                   	// #10
    1e84:	6b01001f 	cmp	w0, w1
    1e88:	1a812000 	csel	w0, w0, w1, cs  // cs = hs, nlast
    1e8c:	1ac10800 	udiv	w0, w0, w1
    1e90:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1e94:	912e2021 	add	x1, x1, #0xb88
    1e98:	51000400 	sub	w0, w0, #0x1
    1e9c:	f8607820 	ldr	x0, [x1, x0, lsl #3]
    1ea0:	d65f03c0 	ret

0000000000001ea4 <is_address_readable>:
    1ea4:	d5384241 	mrs	x1, currentel
    1ea8:	53020c21 	ubfx	w1, w1, #2, #2
    1eac:	71000c3f 	cmp	w1, #0x3
    1eb0:	540000e1 	b.ne	1ecc <is_address_readable+0x28>  // b.any
    1eb4:	d50e7800 	at	s1e3r, x0
    1eb8:	d5033fdf 	isb
    1ebc:	d5387400 	mrs	x0, par_el1
    1ec0:	aa2003e0 	mvn	x0, x0
    1ec4:	12000000 	and	w0, w0, #0x1
    1ec8:	d65f03c0 	ret
    1ecc:	7100083f 	cmp	w1, #0x2
    1ed0:	54000061 	b.ne	1edc <is_address_readable+0x38>  // b.any
    1ed4:	d50c7800 	at	s1e2r, x0
    1ed8:	17fffff8 	b	1eb8 <is_address_readable+0x14>
    1edc:	d5087800 	at	s1e1r, x0
    1ee0:	17fffff6 	b	1eb8 <is_address_readable+0x14>

0000000000001ee4 <is_valid_object.constprop.0>:
    1ee4:	d1000401 	sub	x1, x0, #0x1
    1ee8:	b100483f 	cmn	x1, #0x12
    1eec:	54000248 	b.hi	1f34 <is_valid_object.constprop.0+0x50>  // b.pmore
    1ef0:	f240081f 	tst	x0, #0x7
    1ef4:	54000201 	b.ne	1f34 <is_valid_object.constprop.0+0x50>  // b.any
    1ef8:	aa0003e2 	mov	x2, x0
    1efc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    1f00:	d2800003 	mov	x3, #0x0                   	// #0
    1f04:	910003fd 	mov	x29, sp
    1f08:	8b030040 	add	x0, x2, x3
    1f0c:	97ffffe6 	bl	1ea4 <is_address_readable>
    1f10:	72001c00 	ands	w0, w0, #0xff
    1f14:	540000c0 	b.eq	1f2c <is_valid_object.constprop.0+0x48>  // b.none
    1f18:	91000463 	add	x3, x3, #0x1
    1f1c:	f100407f 	cmp	x3, #0x10
    1f20:	54ffff41 	b.ne	1f08 <is_valid_object.constprop.0+0x24>  // b.any
    1f24:	a8c17bfd 	ldp	x29, x30, [sp], #16
    1f28:	d65f03c0 	ret
    1f2c:	52800000 	mov	w0, #0x0                   	// #0
    1f30:	17fffffd 	b	1f24 <is_valid_object.constprop.0+0x40>
    1f34:	52800000 	mov	w0, #0x0                   	// #0
    1f38:	d65f03c0 	ret

0000000000001f3c <backtrace>:
    1f3c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    1f40:	910003fd 	mov	x29, sp
    1f44:	a90153f3 	stp	x19, x20, [sp, #16]
    1f48:	aa1d03f4 	mov	x20, x29
    1f4c:	a9025bf5 	stp	x21, x22, [sp, #32]
    1f50:	aa1e03f5 	mov	x21, x30
    1f54:	f9001bf7 	str	x23, [sp, #48]
    1f58:	aa0003f7 	mov	x23, x0
    1f5c:	97ffffa7 	bl	1df8 <console_flush>
    1f60:	aa1703e1 	mov	x1, x23
    1f64:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1f68:	912fc000 	add	x0, x0, #0xbf0
    1f6c:	94000784 	bl	3d7c <printf>
    1f70:	d5384240 	mrs	x0, currentel
    1f74:	53020c00 	ubfx	w0, w0, #2, #2
    1f78:	71000c1f 	cmp	w0, #0x3
    1f7c:	540002e0 	b.eq	1fd8 <backtrace+0x9c>  // b.none
    1f80:	90000033 	adrp	x19, 5000 <__TEXT_END__>
    1f84:	7100081f 	cmp	w0, #0x2
    1f88:	90000021 	adrp	x1, 5000 <__TEXT_END__>
    1f8c:	912faa60 	add	x0, x19, #0xbea
    1f90:	912f9833 	add	x19, x1, #0xbe6
    1f94:	9a800273 	csel	x19, x19, x0, eq  // eq = none
    1f98:	aa1403e0 	mov	x0, x20
    1f9c:	97ffffd2 	bl	1ee4 <is_valid_object.constprop.0>
    1fa0:	72001c1f 	tst	w0, #0xff
    1fa4:	54000201 	b.ne	1fe4 <backtrace+0xa8>  // b.any
    1fa8:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1fac:	91301800 	add	x0, x0, #0xc06
    1fb0:	aa1403e1 	mov	x1, x20
    1fb4:	94000772 	bl	3d7c <printf>
    1fb8:	aa1703e1 	mov	x1, x23
    1fbc:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1fc0:	9132a400 	add	x0, x0, #0xca9
    1fc4:	a94153f3 	ldp	x19, x20, [sp, #16]
    1fc8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1fcc:	f9401bf7 	ldr	x23, [sp, #48]
    1fd0:	a8c47bfd 	ldp	x29, x30, [sp], #64
    1fd4:	1400076a 	b	3d7c <printf>
    1fd8:	90000033 	adrp	x19, 5000 <__TEXT_END__>
    1fdc:	912f8a73 	add	x19, x19, #0xbe2
    1fe0:	17ffffee 	b	1f98 <backtrace+0x5c>
    1fe4:	f9400680 	ldr	x0, [x20, #8]
    1fe8:	eb0002bf 	cmp	x21, x0
    1fec:	540000a0 	b.eq	2000 <backtrace+0xc4>  // b.none
    1ff0:	90000020 	adrp	x0, 5000 <__TEXT_END__>
    1ff4:	91310800 	add	x0, x0, #0xc42
    1ff8:	aa1403e1 	mov	x1, x20
    1ffc:	17ffffee 	b	1fb4 <backtrace+0x78>
    2000:	52800035 	mov	w21, #0x1                   	// #1
    2004:	f0000016 	adrp	x22, 5000 <__TEXT_END__>
    2008:	9131dad6 	add	x22, x22, #0xc76
    200c:	f0ffffe3 	adrp	x3, 1000 <plat_rpi3_io_setup+0x18>
    2010:	913cf063 	add	x3, x3, #0xf3c
    2014:	aa1303e2 	mov	x2, x19
    2018:	52800001 	mov	w1, #0x0                   	// #0
    201c:	aa1603e0 	mov	x0, x22
    2020:	94000757 	bl	3d7c <printf>
    2024:	aa1403e0 	mov	x0, x20
    2028:	97ffffaf 	bl	1ee4 <is_valid_object.constprop.0>
    202c:	72001c1f 	tst	w0, #0xff
    2030:	54fffc40 	b.eq	1fb8 <backtrace+0x7c>  // b.none
    2034:	f9400683 	ldr	x3, [x20, #8]
    2038:	f1001063 	subs	x3, x3, #0x4
    203c:	54fffbe0 	b.eq	1fb8 <backtrace+0x7c>  // b.none
    2040:	f240047f 	tst	x3, #0x3
    2044:	54fffba1 	b.ne	1fb8 <backtrace+0x7c>  // b.any
    2048:	aa0303e0 	mov	x0, x3
    204c:	97ffff96 	bl	1ea4 <is_address_readable>
    2050:	72001c1f 	tst	w0, #0xff
    2054:	54fffb20 	b.eq	1fb8 <backtrace+0x7c>  // b.none
    2058:	2a1503e1 	mov	w1, w21
    205c:	aa1303e2 	mov	x2, x19
    2060:	aa1603e0 	mov	x0, x22
    2064:	110006b5 	add	w21, w21, #0x1
    2068:	94000745 	bl	3d7c <printf>
    206c:	710052bf 	cmp	w21, #0x14
    2070:	f9400294 	ldr	x20, [x20]
    2074:	54fffd81 	b.ne	2024 <backtrace+0xe8>  // b.any
    2078:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    207c:	91321400 	add	x0, x0, #0xc85
    2080:	9400073f 	bl	3d7c <printf>
    2084:	17ffffcd 	b	1fb8 <backtrace+0x7c>

0000000000002088 <rpi3_console_init>:
    2088:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    208c:	52984002 	mov	w2, #0xc200                	// #49664
    2090:	72a00022 	movk	w2, #0x1, lsl #16
    2094:	910003fd 	mov	x29, sp
    2098:	f9000bf3 	str	x19, [sp, #16]
    209c:	90080793 	adrp	x19, 100f2000 <platform_normal_stacks+0x3f00>
    20a0:	911e4273 	add	x19, x19, #0x790
    20a4:	528ca001 	mov	w1, #0x6500                	// #25856
    20a8:	72a3b9a1 	movk	w1, #0x1dcd, lsl #16
    20ac:	d28a0800 	mov	x0, #0x5040                	// #20544
    20b0:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    20b4:	aa1303e3 	mov	x3, x19
    20b8:	9400055f 	bl	3634 <console_16550_register>
    20bc:	350000c0 	cbnz	w0, 20d4 <rpi3_console_init+0x4c>
    20c0:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    20c4:	9132f400 	add	x0, x0, #0xcbd
    20c8:	97ffff9d 	bl	1f3c <backtrace>
    20cc:	97ffff4b 	bl	1df8 <console_flush>
    20d0:	9400049c 	bl	3340 <do_panic>
    20d4:	aa1303e0 	mov	x0, x19
    20d8:	52800021 	mov	w1, #0x1                   	// #1
    20dc:	f9400bf3 	ldr	x19, [sp, #16]
    20e0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    20e4:	17ffff1b 	b	1d50 <console_set_scope>

00000000000020e8 <rpi3_setup_page_tables>:
    20e8:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    20ec:	910003fd 	mov	x29, sp
    20f0:	a90153f3 	stp	x19, x20, [sp, #16]
    20f4:	aa0403f4 	mov	x20, x4
    20f8:	aa0603f3 	mov	x19, x6
    20fc:	a9025bf5 	stp	x21, x22, [sp, #32]
    2100:	aa0703f6 	mov	x22, x7
    2104:	aa0203f5 	mov	x21, x2
    2108:	aa0103e2 	mov	x2, x1
    210c:	aa0003e1 	mov	x1, x0
    2110:	a90363f7 	stp	x23, x24, [sp, #48]
    2114:	aa0503f7 	mov	x23, x5
    2118:	aa0303f8 	mov	x24, x3
    211c:	52800143 	mov	w3, #0xa                   	// #10
    2120:	940000c4 	bl	2430 <mmap_add_region>
    2124:	cb150302 	sub	x2, x24, x21
    2128:	aa1503e1 	mov	x1, x21
    212c:	aa1503e0 	mov	x0, x21
    2130:	52800043 	mov	w3, #0x2                   	// #2
    2134:	940000bf 	bl	2430 <mmap_add_region>
    2138:	cb1402e2 	sub	x2, x23, x20
    213c:	aa1403e1 	mov	x1, x20
    2140:	aa1403e0 	mov	x0, x20
    2144:	52800443 	mov	w3, #0x22                  	// #34
    2148:	940000ba 	bl	2430 <mmap_add_region>
    214c:	cb1302c2 	sub	x2, x22, x19
    2150:	aa1303e1 	mov	x1, x19
    2154:	52800103 	mov	w3, #0x8                   	// #8
    2158:	aa1303e0 	mov	x0, x19
    215c:	940000b5 	bl	2430 <mmap_add_region>
    2160:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2164:	91334000 	add	x0, x0, #0xcd0
    2168:	940000bf 	bl	2464 <mmap_add>
    216c:	a94153f3 	ldp	x19, x20, [sp, #16]
    2170:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2174:	a94363f7 	ldp	x23, x24, [sp, #48]
    2178:	a8c47bfd 	ldp	x29, x30, [sp], #64
    217c:	140000be 	b	2474 <init_xlat_tables>

0000000000002180 <tcr_physical_addr_size_bits>:
    2180:	f2503c1f 	tst	x0, #0xffff000000000000
    2184:	540000e0 	b.eq	21a0 <tcr_physical_addr_size_bits+0x20>  // b.none
    2188:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    218c:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2190:	9136d000 	add	x0, x0, #0xdb4
    2194:	910003fd 	mov	x29, sp
    2198:	52800741 	mov	w1, #0x3a                  	// #58
    219c:	94000595 	bl	37f0 <__assert>
    21a0:	f2540c1f 	tst	x0, #0xf00000000000
    21a4:	54000141 	b.ne	21cc <tcr_physical_addr_size_bits+0x4c>  // b.any
    21a8:	f256041f 	tst	x0, #0xc0000000000
    21ac:	54000141 	b.ne	21d4 <tcr_physical_addr_size_bits+0x54>  // b.any
    21b0:	f258041f 	tst	x0, #0x30000000000
    21b4:	54000141 	b.ne	21dc <tcr_physical_addr_size_bits+0x5c>  // b.any
    21b8:	f25c0c1f 	tst	x0, #0xf000000000
    21bc:	54000141 	b.ne	21e4 <tcr_physical_addr_size_bits+0x64>  // b.any
    21c0:	f2600c1f 	tst	x0, #0xf00000000
    21c4:	9a9f07e0 	cset	x0, ne  // ne = any
    21c8:	d65f03c0 	ret
    21cc:	d28000a0 	mov	x0, #0x5                   	// #5
    21d0:	d65f03c0 	ret
    21d4:	d2800080 	mov	x0, #0x4                   	// #4
    21d8:	d65f03c0 	ret
    21dc:	d2800060 	mov	x0, #0x3                   	// #3
    21e0:	d65f03c0 	ret
    21e4:	d2800040 	mov	x0, #0x2                   	// #2
    21e8:	d65f03c0 	ret

00000000000021ec <xlat_arch_get_max_supported_pa>:
    21ec:	d5380700 	mrs	x0, id_aa64mmfr0_el1
    21f0:	92400c00 	and	x0, x0, #0xf
    21f4:	f100181f 	cmp	x0, #0x6
    21f8:	540000e9 	b.ls	2214 <xlat_arch_get_max_supported_pa+0x28>  // b.plast
    21fc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2200:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2204:	9136d000 	add	x0, x0, #0xdb4
    2208:	910003fd 	mov	x29, sp
    220c:	52800c61 	mov	w1, #0x63                  	// #99
    2210:	94000578 	bl	37f0 <__assert>
    2214:	f0000001 	adrp	x1, 5000 <__TEXT_END__>
    2218:	91366021 	add	x1, x1, #0xd98
    221c:	b8607821 	ldr	w1, [x1, x0, lsl #2]
    2220:	d2800020 	mov	x0, #0x1                   	// #1
    2224:	9ac12000 	lsl	x0, x0, x1
    2228:	d1000400 	sub	x0, x0, #0x1
    222c:	d65f03c0 	ret

0000000000002230 <is_dcache_enabled>:
    2230:	d5384240 	mrs	x0, currentel
    2234:	53020c00 	ubfx	w0, w0, #2, #2
    2238:	7100041f 	cmp	w0, #0x1
    223c:	54000081 	b.ne	224c <is_dcache_enabled+0x1c>  // b.any
    2240:	d5381000 	mrs	x0, sctlr_el1
    2244:	53020800 	ubfx	w0, w0, #2, #1
    2248:	d65f03c0 	ret
    224c:	7100081f 	cmp	w0, #0x2
    2250:	54000061 	b.ne	225c <is_dcache_enabled+0x2c>  // b.any
    2254:	d53c1000 	mrs	x0, sctlr_el2
    2258:	17fffffb 	b	2244 <is_dcache_enabled+0x14>
    225c:	d53e1000 	mrs	x0, sctlr_el3
    2260:	17fffff9 	b	2244 <is_dcache_enabled+0x14>

0000000000002264 <xlat_arch_regime_get_xn_desc>:
    2264:	7100041f 	cmp	w0, #0x1
    2268:	54000160 	b.eq	2294 <xlat_arch_regime_get_xn_desc+0x30>  // b.none
    226c:	51000801 	sub	w1, w0, #0x2
    2270:	d2e00800 	mov	x0, #0x40000000000000      	// #18014398509481984
    2274:	7100043f 	cmp	w1, #0x1
    2278:	54000109 	b.ls	2298 <xlat_arch_regime_get_xn_desc+0x34>  // b.plast
    227c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2280:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2284:	9136d000 	add	x0, x0, #0xdb4
    2288:	910003fd 	mov	x29, sp
    228c:	52801161 	mov	w1, #0x8b                  	// #139
    2290:	94000558 	bl	37f0 <__assert>
    2294:	d2e00c00 	mov	x0, #0x60000000000000      	// #27021597764222976
    2298:	d65f03c0 	ret

000000000000229c <xlat_arch_current_el>:
    229c:	d5384240 	mrs	x0, currentel
    22a0:	53020c00 	ubfx	w0, w0, #2, #2
    22a4:	350000e0 	cbnz	w0, 22c0 <xlat_arch_current_el+0x24>
    22a8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    22ac:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    22b0:	9136d000 	add	x0, x0, #0xdb4
    22b4:	910003fd 	mov	x29, sp
    22b8:	528018e1 	mov	w1, #0xc7                  	// #199
    22bc:	9400054d 	bl	37f0 <__assert>
    22c0:	d65f03c0 	ret

00000000000022c4 <is_mmu_enabled_ctx>:
    22c4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    22c8:	910003fd 	mov	x29, sp
    22cc:	b9405800 	ldr	w0, [x0, #88]
    22d0:	7100041f 	cmp	w0, #0x1
    22d4:	54000161 	b.ne	2300 <is_mmu_enabled_ctx+0x3c>  // b.any
    22d8:	97fffff1 	bl	229c <xlat_arch_current_el>
    22dc:	350000a0 	cbnz	w0, 22f0 <is_mmu_enabled_ctx+0x2c>
    22e0:	52800d81 	mov	w1, #0x6c                  	// #108
    22e4:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    22e8:	9136d000 	add	x0, x0, #0xdb4
    22ec:	94000541 	bl	37f0 <__assert>
    22f0:	d5381000 	mrs	x0, sctlr_el1
    22f4:	12000000 	and	w0, w0, #0x1
    22f8:	a8c17bfd 	ldp	x29, x30, [sp], #16
    22fc:	d65f03c0 	ret
    2300:	7100081f 	cmp	w0, #0x2
    2304:	54000101 	b.ne	2324 <is_mmu_enabled_ctx+0x60>  // b.any
    2308:	97ffffe5 	bl	229c <xlat_arch_current_el>
    230c:	7100041f 	cmp	w0, #0x1
    2310:	54000068 	b.hi	231c <is_mmu_enabled_ctx+0x58>  // b.pmore
    2314:	52800de1 	mov	w1, #0x6f                  	// #111
    2318:	17fffff3 	b	22e4 <is_mmu_enabled_ctx+0x20>
    231c:	d53c1000 	mrs	x0, sctlr_el2
    2320:	17fffff5 	b	22f4 <is_mmu_enabled_ctx+0x30>
    2324:	71000c1f 	cmp	w0, #0x3
    2328:	54000060 	b.eq	2334 <is_mmu_enabled_ctx+0x70>  // b.none
    232c:	52800e41 	mov	w1, #0x72                  	// #114
    2330:	17ffffed 	b	22e4 <is_mmu_enabled_ctx+0x20>
    2334:	97ffffda 	bl	229c <xlat_arch_current_el>
    2338:	7100081f 	cmp	w0, #0x2
    233c:	54000068 	b.hi	2348 <is_mmu_enabled_ctx+0x84>  // b.pmore
    2340:	52800e61 	mov	w1, #0x73                  	// #115
    2344:	17ffffe8 	b	22e4 <is_mmu_enabled_ctx+0x20>
    2348:	d53e1000 	mrs	x0, sctlr_el3
    234c:	17ffffea 	b	22f4 <is_mmu_enabled_ctx+0x30>

0000000000002350 <setup_mmu_cfg>:
    2350:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    2354:	b100049f 	cmn	x4, #0x1
    2358:	910003fd 	mov	x29, sp
    235c:	a90153f3 	stp	x19, x20, [sp, #16]
    2360:	a9025bf5 	stp	x21, x22, [sp, #32]
    2364:	540000a1 	b.ne	2378 <setup_mmu_cfg+0x28>  // b.any
    2368:	52801b81 	mov	w1, #0xdc                  	// #220
    236c:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2370:	9136d000 	add	x0, x0, #0xdb4
    2374:	9400051f 	bl	37f0 <__assert>
    2378:	2a0503f5 	mov	w21, w5
    237c:	b2679fe5 	mov	x5, #0xfffffffffe000001    	// #-33554431
    2380:	8b050085 	add	x5, x4, x5
    2384:	aa0203f6 	mov	x22, x2
    2388:	91000493 	add	x19, x4, #0x1
    238c:	b2675be2 	mov	x2, #0xfffffe000000        	// #281474943156224
    2390:	eb0200bf 	cmp	x5, x2
    2394:	54000068 	b.hi	23a0 <setup_mmu_cfg+0x50>  // b.pmore
    2398:	ea13009f 	tst	x4, x19
    239c:	54000060 	b.eq	23a8 <setup_mmu_cfg+0x58>  // b.none
    23a0:	52801be1 	mov	w1, #0xdf                  	// #223
    23a4:	17fffff2 	b	236c <setup_mmu_cfg+0x1c>
    23a8:	dac00264 	rbit	x4, x19
    23ac:	aa0003f4 	mov	x20, x0
    23b0:	dac01084 	clz	x4, x4
    23b4:	52800813 	mov	w19, #0x40                  	// #64
    23b8:	aa0303e0 	mov	x0, x3
    23bc:	4b040273 	sub	w19, w19, w4
    23c0:	37080061 	tbnz	w1, #1, 23cc <setup_mmu_cfg+0x7c>
    23c4:	5286a001 	mov	w1, #0x3500                	// #13568
    23c8:	2a010273 	orr	w19, w19, w1
    23cc:	97ffff6d 	bl	2180 <tcr_physical_addr_size_bits>
    23d0:	93407e73 	sxtw	x19, w19
    23d4:	710006bf 	cmp	w21, #0x1
    23d8:	54000161 	b.ne	2404 <setup_mmu_cfg+0xb4>  // b.any
    23dc:	aa008260 	orr	x0, x19, x0, lsl #32
    23e0:	b2690000 	orr	x0, x0, #0x800000
    23e4:	d2809fe1 	mov	x1, #0x4ff                 	// #1279
    23e8:	f2a00881 	movk	x1, #0x44, lsl #16
    23ec:	a9000281 	stp	x1, x0, [x20]
    23f0:	f9000a96 	str	x22, [x20, #16]
    23f4:	a94153f3 	ldp	x19, x20, [sp, #16]
    23f8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    23fc:	a8c37bfd 	ldp	x29, x30, [sp], #48
    2400:	d65f03c0 	ret
    2404:	71000abf 	cmp	w21, #0x2
    2408:	d370bc00 	lsl	x0, x0, #16
    240c:	540000a1 	b.ne	2420 <setup_mmu_cfg+0xd0>  // b.any
    2410:	aa130000 	orr	x0, x0, x19
    2414:	d2b01001 	mov	x1, #0x80800000            	// #2155872256
    2418:	aa010000 	orr	x0, x0, x1
    241c:	17fffff2 	b	23e4 <setup_mmu_cfg+0x94>
    2420:	71000ebf 	cmp	w21, #0x3
    2424:	54ffff60 	b.eq	2410 <setup_mmu_cfg+0xc0>  // b.none
    2428:	528020c1 	mov	w1, #0x106                 	// #262
    242c:	17ffffd0 	b	236c <setup_mmu_cfg+0x1c>

0000000000002430 <mmap_add_region>:
    2430:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    2434:	910003fd 	mov	x29, sp
    2438:	a90187e0 	stp	x0, x1, [sp, #24]
    243c:	d2a80000 	mov	x0, #0x40000000            	// #1073741824
    2440:	910063e1 	add	x1, sp, #0x18
    2444:	f90017e2 	str	x2, [sp, #40]
    2448:	b90033e3 	str	w3, [sp, #48]
    244c:	f9001fe0 	str	x0, [sp, #56]
    2450:	90080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    2454:	91022000 	add	x0, x0, #0x88
    2458:	94000129 	bl	28fc <mmap_add_region_ctx>
    245c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2460:	d65f03c0 	ret

0000000000002464 <mmap_add>:
    2464:	aa0003e1 	mov	x1, x0
    2468:	90080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    246c:	91022000 	add	x0, x0, #0x88
    2470:	140001c1 	b	2b74 <mmap_add_ctx>

0000000000002474 <init_xlat_tables>:
    2474:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2478:	910003fd 	mov	x29, sp
    247c:	f9000bf3 	str	x19, [sp, #16]
    2480:	90080773 	adrp	x19, 100ee000 <__BL1_RAM_START__>
    2484:	91022273 	add	x19, x19, #0x88
    2488:	b9405a60 	ldr	w0, [x19, #88]
    248c:	3100041f 	cmn	w0, #0x1
    2490:	540000a0 	b.eq	24a4 <init_xlat_tables+0x30>  // b.none
    2494:	52800c01 	mov	w1, #0x60                  	// #96
    2498:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    249c:	91378800 	add	x0, x0, #0xde2
    24a0:	940004d4 	bl	37f0 <__assert>
    24a4:	97ffff7e 	bl	229c <xlat_arch_current_el>
    24a8:	7100041f 	cmp	w0, #0x1
    24ac:	540000c1 	b.ne	24c4 <init_xlat_tables+0x50>  // b.any
    24b0:	b9005a60 	str	w0, [x19, #88]
    24b4:	aa1303e0 	mov	x0, x19
    24b8:	f9400bf3 	ldr	x19, [sp, #16]
    24bc:	a8c27bfd 	ldp	x29, x30, [sp], #32
    24c0:	140001bc 	b	2bb0 <init_xlat_tables_ctx>
    24c4:	7100081f 	cmp	w0, #0x2
    24c8:	54ffff40 	b.eq	24b0 <init_xlat_tables+0x3c>  // b.none
    24cc:	71000c1f 	cmp	w0, #0x3
    24d0:	54ffff00 	b.eq	24b0 <init_xlat_tables+0x3c>  // b.none
    24d4:	52800d21 	mov	w1, #0x69                  	// #105
    24d8:	17fffff0 	b	2498 <init_xlat_tables+0x24>

00000000000024dc <enable_mmu_el3>:
    24dc:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    24e0:	52800065 	mov	w5, #0x3                   	// #3
    24e4:	910003fd 	mov	x29, sp
    24e8:	f9000bf3 	str	x19, [sp, #16]
    24ec:	2a0003f3 	mov	w19, w0
    24f0:	90080760 	adrp	x0, 100ee000 <__BL1_RAM_START__>
    24f4:	91022000 	add	x0, x0, #0x88
    24f8:	2a1303e1 	mov	w1, w19
    24fc:	f9400404 	ldr	x4, [x0, #8]
    2500:	f9401802 	ldr	x2, [x0, #48]
    2504:	f9402003 	ldr	x3, [x0, #64]
    2508:	90080780 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    250c:	91254000 	add	x0, x0, #0x950
    2510:	97ffff90 	bl	2350 <setup_mmu_cfg>
    2514:	2a1303e0 	mov	w0, w19
    2518:	f9400bf3 	ldr	x19, [sp, #16]
    251c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2520:	14000498 	b	3780 <enable_mmu_direct_el3>

0000000000002524 <xlat_clean_dcache_range>:
    2524:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2528:	910003fd 	mov	x29, sp
    252c:	a90153f3 	stp	x19, x20, [sp, #16]
    2530:	aa0003f3 	mov	x19, x0
    2534:	aa0103f4 	mov	x20, x1
    2538:	97ffff3e 	bl	2230 <is_dcache_enabled>
    253c:	72001c1f 	tst	w0, #0xff
    2540:	540000c0 	b.eq	2558 <xlat_clean_dcache_range+0x34>  // b.none
    2544:	aa1403e1 	mov	x1, x20
    2548:	aa1303e0 	mov	x0, x19
    254c:	a94153f3 	ldp	x19, x20, [sp, #16]
    2550:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2554:	1400039a 	b	33bc <clean_dcache_range>
    2558:	a94153f3 	ldp	x19, x20, [sp, #16]
    255c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2560:	d65f03c0 	ret

0000000000002564 <xlat_desc>:
    2564:	12800104 	mov	w4, #0xfffffff7            	// #-9
    2568:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    256c:	92800005 	mov	x5, #0xffffffffffffffff    	// #-1
    2570:	1b047c64 	mul	w4, w3, w4
    2574:	910003fd 	mov	x29, sp
    2578:	11009c84 	add	w4, w4, #0x27
    257c:	a90153f3 	stp	x19, x20, [sp, #16]
    2580:	9ac420a4 	lsl	x4, x5, x4
    2584:	ea24005f 	bics	xzr, x2, x4
    2588:	540000a0 	b.eq	259c <xlat_desc+0x38>  // b.none
    258c:	52800e21 	mov	w1, #0x71                  	// #113
    2590:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2594:	913a6800 	add	x0, x0, #0xe9a
    2598:	94000496 	bl	37f0 <__assert>
    259c:	71000c7f 	cmp	w3, #0x3
    25a0:	d37f7c33 	ubfiz	x19, x1, #1, #32
    25a4:	927b0273 	and	x19, x19, #0x20
    25a8:	d2800063 	mov	x3, #0x3                   	// #3
    25ac:	9a9f0463 	csinc	x3, x3, xzr, eq  // eq = none
    25b0:	f27d003f 	tst	x1, #0x8
    25b4:	aa020262 	orr	x2, x19, x2
    25b8:	b9405800 	ldr	w0, [x0, #88]
    25bc:	d2801013 	mov	x19, #0x80                  	// #128
    25c0:	9a9313f3 	csel	x19, xzr, x19, ne  // ne = any
    25c4:	aa130073 	orr	x19, x3, x19
    25c8:	7100041f 	cmp	w0, #0x1
    25cc:	aa020273 	orr	x19, x19, x2
    25d0:	540001a1 	b.ne	2604 <xlat_desc+0xa0>  // b.any
    25d4:	b2760262 	orr	x2, x19, #0x400
    25d8:	d2808803 	mov	x3, #0x440                 	// #1088
    25dc:	f27a003f 	tst	x1, #0x40
    25e0:	aa030273 	orr	x19, x19, x3
    25e4:	9a821273 	csel	x19, x19, x2, ne  // ne = any
    25e8:	72000834 	ands	w20, w1, #0x7
    25ec:	540001c1 	b.ne	2624 <xlat_desc+0xc0>  // b.any
    25f0:	97ffff1d 	bl	2264 <xlat_arch_regime_get_xn_desc>
    25f4:	aa000260 	orr	x0, x19, x0
    25f8:	d2804093 	mov	x19, #0x204                 	// #516
    25fc:	aa000260 	orr	x0, x19, x0
    2600:	14000011 	b	2644 <xlat_desc+0xe0>
    2604:	51000802 	sub	w2, w0, #0x2
    2608:	7100045f 	cmp	w2, #0x1
    260c:	54000069 	b.ls	2618 <xlat_desc+0xb4>  // b.plast
    2610:	52801281 	mov	w1, #0x94                  	// #148
    2614:	17ffffdf 	b	2590 <xlat_desc+0x2c>
    2618:	d2808802 	mov	x2, #0x440                 	// #1088
    261c:	aa020273 	orr	x19, x19, x2
    2620:	17fffff2 	b	25e8 <xlat_desc+0x84>
    2624:	52800502 	mov	w2, #0x28                  	// #40
    2628:	6a02003f 	tst	w1, w2
    262c:	54000060 	b.eq	2638 <xlat_desc+0xd4>  // b.none
    2630:	97ffff0d 	bl	2264 <xlat_arch_regime_get_xn_desc>
    2634:	aa000273 	orr	x19, x19, x0
    2638:	71000a9f 	cmp	w20, #0x2
    263c:	540000a1 	b.ne	2650 <xlat_desc+0xec>  // b.any
    2640:	b2780660 	orr	x0, x19, #0x300
    2644:	a94153f3 	ldp	x19, x20, [sp, #16]
    2648:	a8c27bfd 	ldp	x29, x30, [sp], #32
    264c:	d65f03c0 	ret
    2650:	7100069f 	cmp	w20, #0x1
    2654:	54000060 	b.eq	2660 <xlat_desc+0xfc>  // b.none
    2658:	528018e1 	mov	w1, #0xc7                  	// #199
    265c:	17ffffcd 	b	2590 <xlat_desc+0x2c>
    2660:	d2804100 	mov	x0, #0x208                 	// #520
    2664:	17ffffe6 	b	25fc <xlat_desc+0x98>

0000000000002668 <xlat_tables_map_region>:
    2668:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    266c:	910003fd 	mov	x29, sp
    2670:	a90153f3 	stp	x19, x20, [sp, #16]
    2674:	a9025bf5 	stp	x21, x22, [sp, #32]
    2678:	aa0003f5 	mov	x21, x0
    267c:	b9405000 	ldr	w0, [x0, #80]
    2680:	a90363f7 	stp	x23, x24, [sp, #48]
    2684:	6b05001f 	cmp	w0, w5
    2688:	a9046bf9 	stp	x25, x26, [sp, #64]
    268c:	a90573fb 	stp	x27, x28, [sp, #80]
    2690:	b9006fe4 	str	w4, [sp, #108]
    2694:	54000088 	b.hi	26a4 <xlat_tables_map_region+0x3c>  // b.pmore
    2698:	2a0503fa 	mov	w26, w5
    269c:	71000cbf 	cmp	w5, #0x3
    26a0:	540000a9 	b.ls	26b4 <xlat_tables_map_region+0x4c>  // b.plast
    26a4:	52804081 	mov	w1, #0x204                 	// #516
    26a8:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    26ac:	913a6800 	add	x0, x0, #0xe9a
    26b0:	94000450 	bl	37f0 <__assert>
    26b4:	a940dc20 	ldp	x0, x23, [x1, #8]
    26b8:	12800116 	mov	w22, #0xfffffff7            	// #-9
    26bc:	aa0103f4 	mov	x20, x1
    26c0:	d2800039 	mov	x25, #0x1                   	// #1
    26c4:	1b167cb6 	mul	w22, w5, w22
    26c8:	11009ed6 	add	w22, w22, #0x27
    26cc:	8b170017 	add	x23, x0, x23
    26d0:	eb02001f 	cmp	x0, x2
    26d4:	d10006e1 	sub	x1, x23, #0x1
    26d8:	f9003be1 	str	x1, [sp, #112]
    26dc:	9ad62339 	lsl	x25, x25, x22
    26e0:	54000169 	b.ls	270c <xlat_tables_map_region+0xa4>  // b.plast
    26e4:	cb1903f3 	neg	x19, x25
    26e8:	8a000273 	and	x19, x19, x0
    26ec:	b9406fe0 	ldr	w0, [sp, #108]
    26f0:	cb020262 	sub	x2, x19, x2
    26f4:	9ad62442 	lsr	x2, x2, x22
    26f8:	2a0203f7 	mov	w23, w2
    26fc:	6b00005f 	cmp	w2, w0
    2700:	540000a3 	b.cc	2714 <xlat_tables_map_region+0xac>  // b.lo, b.ul, b.last
    2704:	528042e1 	mov	w1, #0x217                 	// #535
    2708:	17ffffe8 	b	26a8 <xlat_tables_map_region+0x40>
    270c:	aa0203f3 	mov	x19, x2
    2710:	52800017 	mov	w23, #0x0                   	// #0
    2714:	92800018 	mov	x24, #0xffffffffffffffff    	// #-1
    2718:	1100075c 	add	w28, w26, #0x1
    271c:	9ad62318 	lsl	x24, x24, x22
    2720:	aa3803e0 	mvn	x0, x24
    2724:	8b374c78 	add	x24, x3, w23, uxtw #3
    2728:	f90043e0 	str	x0, [sp, #128]
    272c:	b9406fe0 	ldr	w0, [sp, #108]
    2730:	6b0002ff 	cmp	w23, w0
    2734:	54000822 	b.cs	2838 <xlat_tables_map_region+0x1d0>  // b.hs, b.nlast
    2738:	a9409280 	ldp	x0, x4, [x20, #8]
    273c:	8b130322 	add	x2, x25, x19
    2740:	f9400308 	ldr	x8, [x24]
    2744:	f9003fe2 	str	x2, [sp, #120]
    2748:	d100045b 	sub	x27, x2, #0x1
    274c:	12000501 	and	w1, w8, #0x3
    2750:	8b040004 	add	x4, x0, x4
    2754:	eb13001f 	cmp	x0, x19
    2758:	d1000484 	sub	x4, x4, #0x1
    275c:	54000408 	b.hi	27dc <xlat_tables_map_region+0x174>  // b.pmore
    2760:	eb1b009f 	cmp	x4, x27
    2764:	540003c3 	b.cc	27dc <xlat_tables_map_region+0x174>  // b.lo, b.ul, b.last
    2768:	f9400282 	ldr	x2, [x20]
    276c:	71000f5f 	cmp	w26, #0x3
    2770:	cb000042 	sub	x2, x2, x0
    2774:	8b130042 	add	x2, x2, x19
    2778:	540000c1 	b.ne	2790 <xlat_tables_map_region+0x128>  // b.any
    277c:	71000c3f 	cmp	w1, #0x3
    2780:	54000520 	b.eq	2824 <xlat_tables_map_region+0x1bc>  // b.none
    2784:	34000461 	cbz	w1, 2810 <xlat_tables_map_region+0x1a8>
    2788:	52803361 	mov	w1, #0x19b                 	// #411
    278c:	17ffffc7 	b	26a8 <xlat_tables_map_region+0x40>
    2790:	71000c3f 	cmp	w1, #0x3
    2794:	54000940 	b.eq	28bc <xlat_tables_map_region+0x254>  // b.none
    2798:	350001a1 	cbnz	w1, 27cc <xlat_tables_map_region+0x164>
    279c:	f94043e0 	ldr	x0, [sp, #128]
    27a0:	ea00005f 	tst	x2, x0
    27a4:	540000a1 	b.ne	27b8 <xlat_tables_map_region+0x150>  // b.any
    27a8:	3400009a 	cbz	w26, 27b8 <xlat_tables_map_region+0x150>
    27ac:	f9401280 	ldr	x0, [x20, #32]
    27b0:	9ad62400 	lsr	x0, x0, x22
    27b4:	b50002e0 	cbnz	x0, 2810 <xlat_tables_map_region+0x1a8>
    27b8:	294506a0 	ldp	w0, w1, [x21, #40]
    27bc:	6b00003f 	cmp	w1, w0
    27c0:	5400040b 	b.lt	2840 <xlat_tables_map_region+0x1d8>  // b.tstop
    27c4:	52800c01 	mov	w1, #0x60                  	// #96
    27c8:	17ffffb8 	b	26a8 <xlat_tables_map_region+0x40>
    27cc:	7100043f 	cmp	w1, #0x1
    27d0:	540002a0 	b.eq	2824 <xlat_tables_map_region+0x1bc>  // b.none
    27d4:	52803841 	mov	w1, #0x1c2                 	// #450
    27d8:	17ffffb4 	b	26a8 <xlat_tables_map_region+0x40>
    27dc:	eb1b001f 	cmp	x0, x27
    27e0:	54000069 	b.ls	27ec <xlat_tables_map_region+0x184>  // b.plast
    27e4:	eb04027f 	cmp	x19, x4
    27e8:	540001e8 	b.hi	2824 <xlat_tables_map_region+0x1bc>  // b.pmore
    27ec:	71000f5f 	cmp	w26, #0x3
    27f0:	54000061 	b.ne	27fc <xlat_tables_map_region+0x194>  // b.any
    27f4:	52803ae1 	mov	w1, #0x1d7                 	// #471
    27f8:	17ffffac 	b	26a8 <xlat_tables_map_region+0x40>
    27fc:	34fffde1 	cbz	w1, 27b8 <xlat_tables_map_region+0x150>
    2800:	71000c3f 	cmp	w1, #0x3
    2804:	540005c0 	b.eq	28bc <xlat_tables_map_region+0x254>  // b.none
    2808:	52803c41 	mov	w1, #0x1e2                 	// #482
    280c:	17ffffa7 	b	26a8 <xlat_tables_map_region+0x40>
    2810:	b9401a81 	ldr	w1, [x20, #24]
    2814:	2a1a03e3 	mov	w3, w26
    2818:	aa1503e0 	mov	x0, x21
    281c:	97ffff52 	bl	2564 <xlat_desc>
    2820:	f9000300 	str	x0, [x24]
    2824:	a9474fe0 	ldp	x0, x19, [sp, #112]
    2828:	110006f7 	add	w23, w23, #0x1
    282c:	91002318 	add	x24, x24, #0x8
    2830:	eb13001f 	cmp	x0, x19
    2834:	54fff7c8 	b.hi	272c <xlat_tables_map_region+0xc4>  // b.pmore
    2838:	d1000673 	sub	x19, x19, #0x1
    283c:	14000018 	b	289c <xlat_tables_map_region+0x234>
    2840:	f94012a8 	ldr	x8, [x21, #32]
    2844:	11000420 	add	w0, w1, #0x1
    2848:	b9002ea0 	str	w0, [x21, #44]
    284c:	93747c21 	sbfiz	x1, x1, #12, #32
    2850:	ab010108 	adds	x8, x8, x1
    2854:	54000240 	b.eq	289c <xlat_tables_map_region+0x234>  // b.none
    2858:	b2400500 	orr	x0, x8, #0x3
    285c:	f9000300 	str	x0, [x24]
    2860:	aa0803e3 	mov	x3, x8
    2864:	aa1303e2 	mov	x2, x19
    2868:	2a1c03e5 	mov	w5, w28
    286c:	52804004 	mov	w4, #0x200                 	// #512
    2870:	aa1403e1 	mov	x1, x20
    2874:	aa1503e0 	mov	x0, x21
    2878:	f90047e8 	str	x8, [sp, #136]
    287c:	97ffff7b 	bl	2668 <xlat_tables_map_region>
    2880:	f94047e8 	ldr	x8, [sp, #136]
    2884:	aa0003f3 	mov	x19, x0
    2888:	d2820001 	mov	x1, #0x1000                	// #4096
    288c:	aa0803e0 	mov	x0, x8
    2890:	97ffff25 	bl	2524 <xlat_clean_dcache_range>
    2894:	eb13037f 	cmp	x27, x19
    2898:	54fffc60 	b.eq	2824 <xlat_tables_map_region+0x1bc>  // b.none
    289c:	aa1303e0 	mov	x0, x19
    28a0:	a94153f3 	ldp	x19, x20, [sp, #16]
    28a4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    28a8:	a94363f7 	ldp	x23, x24, [sp, #48]
    28ac:	a9446bf9 	ldp	x25, x26, [sp, #64]
    28b0:	a94573fb 	ldp	x27, x28, [sp, #80]
    28b4:	a8c97bfd 	ldp	x29, x30, [sp], #144
    28b8:	d65f03c0 	ret
    28bc:	92748d08 	and	x8, x8, #0xfffffffff000
    28c0:	aa1303e2 	mov	x2, x19
    28c4:	aa0803e3 	mov	x3, x8
    28c8:	2a1c03e5 	mov	w5, w28
    28cc:	52804004 	mov	w4, #0x200                 	// #512
    28d0:	aa1403e1 	mov	x1, x20
    28d4:	aa1503e0 	mov	x0, x21
    28d8:	f90047e8 	str	x8, [sp, #136]
    28dc:	97ffff63 	bl	2668 <xlat_tables_map_region>
    28e0:	aa0003f3 	mov	x19, x0
    28e4:	f94047e8 	ldr	x8, [sp, #136]
    28e8:	d2820001 	mov	x1, #0x1000                	// #4096
    28ec:	aa0803e0 	mov	x0, x8
    28f0:	97ffff0d 	bl	2524 <xlat_clean_dcache_range>
    28f4:	eb1b027f 	cmp	x19, x27
    28f8:	17ffffe8 	b	2898 <xlat_tables_map_region+0x230>

00000000000028fc <mmap_add_region_ctx>:
    28fc:	f9400824 	ldr	x4, [x1, #16]
    2900:	b4001384 	cbz	x4, 2b70 <mmap_add_region_ctx+0x274>
    2904:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    2908:	910003fd 	mov	x29, sp
    290c:	a90153f3 	stp	x19, x20, [sp, #16]
    2910:	aa0003f4 	mov	x20, x0
    2914:	39415000 	ldrb	w0, [x0, #84]
    2918:	a9025bf5 	stp	x21, x22, [sp, #32]
    291c:	a90363f7 	stp	x23, x24, [sp, #48]
    2920:	aa0103f7 	mov	x23, x1
    2924:	340000a0 	cbz	w0, 2938 <mmap_add_region_ctx+0x3c>
    2928:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    292c:	913a6800 	add	x0, x0, #0xe9a
    2930:	52805c41 	mov	w1, #0x2e2                 	// #738
    2934:	940003af 	bl	37f0 <__assert>
    2938:	a9400025 	ldp	x5, x0, [x1]
    293c:	f9401021 	ldr	x1, [x1, #32]
    2940:	aa0400a2 	orr	x2, x5, x4
    2944:	aa000042 	orr	x2, x2, x0
    2948:	f2402c5f 	tst	x2, #0xfff
    294c:	54000b01 	b.ne	2aac <mmap_add_region_ctx+0x1b0>  // b.any
    2950:	f148003f 	cmp	x1, #0x200, lsl #12
    2954:	d2a80002 	mov	x2, #0x40000000            	// #1073741824
    2958:	fa421024 	ccmp	x1, x2, #0x4, ne  // ne = any
    295c:	54000060 	b.eq	2968 <mmap_add_region_ctx+0x6c>  // b.none
    2960:	f140043f 	cmp	x1, #0x1, lsl #12
    2964:	54000a41 	b.ne	2aac <mmap_add_region_ctx+0x1b0>  // b.any
    2968:	8b0400b6 	add	x22, x5, x4
    296c:	8b000089 	add	x9, x4, x0
    2970:	d10006d6 	sub	x22, x22, #0x1
    2974:	d1000535 	sub	x21, x9, #0x1
    2978:	eb1600bf 	cmp	x5, x22
    297c:	fa559002 	ccmp	x0, x21, #0x2, ls  // ls = plast
    2980:	54000a68 	b.hi	2acc <mmap_add_region_ctx+0x1d0>  // b.pmore
    2984:	f9400681 	ldr	x1, [x20, #8]
    2988:	eb0102bf 	cmp	x21, x1
    298c:	54000a08 	b.hi	2acc <mmap_add_region_ctx+0x1d0>  // b.pmore
    2990:	f9400281 	ldr	x1, [x20]
    2994:	eb0102df 	cmp	x22, x1
    2998:	540009a8 	b.hi	2acc <mmap_add_region_ctx+0x1d0>  // b.pmore
    299c:	b9401a98 	ldr	w24, [x20, #24]
    29a0:	52800501 	mov	w1, #0x28                  	// #40
    29a4:	f9400a82 	ldr	x2, [x20, #16]
    29a8:	9b210b18 	smaddl	x24, w24, w1, x2
    29ac:	f85e8301 	ldur	x1, [x24, #-24]
    29b0:	b5000921 	cbnz	x1, 2ad4 <mmap_add_region_ctx+0x1d8>
    29b4:	aa0203e6 	mov	x6, x2
    29b8:	cb05000a 	sub	x10, x0, x5
    29bc:	f94008c3 	ldr	x3, [x6, #16]
    29c0:	b50002e3 	cbnz	x3, 2a1c <mmap_add_region_ctx+0x120>
    29c4:	aa0203f3 	mov	x19, x2
    29c8:	a9408660 	ldp	x0, x1, [x19, #8]
    29cc:	8b000020 	add	x0, x1, x0
    29d0:	d1000400 	sub	x0, x0, #0x1
    29d4:	eb15001f 	cmp	x0, x21
    29d8:	54000042 	b.cs	29e0 <mmap_add_region_ctx+0xe4>  // b.hs, b.nlast
    29dc:	b5000801 	cbnz	x1, 2adc <mmap_add_region_ctx+0x1e0>
    29e0:	a9408261 	ldp	x1, x0, [x19, #8]
    29e4:	8b010001 	add	x1, x0, x1
    29e8:	eb01013f 	cmp	x9, x1
    29ec:	54000081 	b.ne	29fc <mmap_add_region_ctx+0x100>  // b.any
    29f0:	b4000060 	cbz	x0, 29fc <mmap_add_region_ctx+0x100>
    29f4:	eb00009f 	cmp	x4, x0
    29f8:	54000768 	b.hi	2ae4 <mmap_add_region_ctx+0x1e8>  // b.pmore
    29fc:	f9400840 	ldr	x0, [x2, #16]
    2a00:	b40009c0 	cbz	x0, 2b38 <mmap_add_region_ctx+0x23c>
    2a04:	eb18005f 	cmp	x2, x24
    2a08:	54000723 	b.cc	2aec <mmap_add_region_ctx+0x1f0>  // b.lo, b.ul, b.last
    2a0c:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2a10:	913a6800 	add	x0, x0, #0xe9a
    2a14:	52806341 	mov	w1, #0x31a                 	// #794
    2a18:	94000376 	bl	37f0 <__assert>
    2a1c:	a94004c8 	ldp	x8, x1, [x6]
    2a20:	8b030027 	add	x7, x1, x3
    2a24:	eb01001f 	cmp	x0, x1
    2a28:	d10004e7 	sub	x7, x7, #0x1
    2a2c:	540001c3 	b.cc	2a64 <mmap_add_region_ctx+0x168>  // b.lo, b.ul, b.last
    2a30:	eb0702bf 	cmp	x21, x7
    2a34:	54000069 	b.ls	2a40 <mmap_add_region_ctx+0x144>  // b.plast
    2a38:	eb01001f 	cmp	x0, x1
    2a3c:	54000181 	b.ne	2a6c <mmap_add_region_ctx+0x170>  // b.any
    2a40:	cb080028 	sub	x8, x1, x8
    2a44:	eb0a011f 	cmp	x8, x10
    2a48:	540000a1 	b.ne	2a5c <mmap_add_region_ctx+0x160>  // b.any
    2a4c:	eb01001f 	cmp	x0, x1
    2a50:	54000261 	b.ne	2a9c <mmap_add_region_ctx+0x1a0>  // b.any
    2a54:	eb03009f 	cmp	x4, x3
    2a58:	54000221 	b.ne	2a9c <mmap_add_region_ctx+0x1a0>  // b.any
    2a5c:	12800001 	mov	w1, #0xffffffff            	// #-1
    2a60:	14000014 	b	2ab0 <mmap_add_region_ctx+0x1b4>
    2a64:	eb0702bf 	cmp	x21, x7
    2a68:	54fffec2 	b.cs	2a40 <mmap_add_region_ctx+0x144>  // b.hs, b.nlast
    2a6c:	eb0802df 	cmp	x22, x8
    2a70:	54000783 	b.cc	2b60 <mmap_add_region_ctx+0x264>  // b.lo, b.ul, b.last
    2a74:	8b080063 	add	x3, x3, x8
    2a78:	d1000463 	sub	x3, x3, #0x1
    2a7c:	eb0300bf 	cmp	x5, x3
    2a80:	1a9f97e3 	cset	w3, hi  // hi = pmore
    2a84:	eb0102bf 	cmp	x21, x1
    2a88:	540000e3 	b.cc	2aa4 <mmap_add_region_ctx+0x1a8>  // b.lo, b.ul, b.last
    2a8c:	eb07001f 	cmp	x0, x7
    2a90:	1a9f97e1 	cset	w1, hi  // hi = pmore
    2a94:	6a03003f 	tst	w1, w3
    2a98:	54fffe20 	b.eq	2a5c <mmap_add_region_ctx+0x160>  // b.none
    2a9c:	9100a0c6 	add	x6, x6, #0x28
    2aa0:	17ffffc7 	b	29bc <mmap_add_region_ctx+0xc0>
    2aa4:	52800021 	mov	w1, #0x1                   	// #1
    2aa8:	17fffffb 	b	2a94 <mmap_add_region_ctx+0x198>
    2aac:	128002a1 	mov	w1, #0xffffffea            	// #-22
    2ab0:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2ab4:	9139bc00 	add	x0, x0, #0xe6f
    2ab8:	97fffc45 	bl	1bcc <tf_log>
    2abc:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2ac0:	913a6800 	add	x0, x0, #0xe9a
    2ac4:	52805ce1 	mov	w1, #0x2e7                 	// #743
    2ac8:	9400034a 	bl	37f0 <__assert>
    2acc:	12800421 	mov	w1, #0xffffffde            	// #-34
    2ad0:	17fffff8 	b	2ab0 <mmap_add_region_ctx+0x1b4>
    2ad4:	12800161 	mov	w1, #0xfffffff4            	// #-12
    2ad8:	17fffff6 	b	2ab0 <mmap_add_region_ctx+0x1b4>
    2adc:	9100a273 	add	x19, x19, #0x28
    2ae0:	17ffffba 	b	29c8 <mmap_add_region_ctx+0xcc>
    2ae4:	9100a273 	add	x19, x19, #0x28
    2ae8:	17ffffbe 	b	29e0 <mmap_add_region_ctx+0xe4>
    2aec:	9100a042 	add	x2, x2, #0x28
    2af0:	17ffffc3 	b	29fc <mmap_add_region_ctx+0x100>
    2af4:	d2800502 	mov	x2, #0x28                  	// #40
    2af8:	aa1703e1 	mov	x1, x23
    2afc:	aa1303e0 	mov	x0, x19
    2b00:	94000355 	bl	3854 <memcpy>
    2b04:	f9402280 	ldr	x0, [x20, #64]
    2b08:	eb16001f 	cmp	x0, x22
    2b0c:	54000042 	b.cs	2b14 <mmap_add_region_ctx+0x218>  // b.hs, b.nlast
    2b10:	f9002296 	str	x22, [x20, #64]
    2b14:	f9402680 	ldr	x0, [x20, #72]
    2b18:	eb15001f 	cmp	x0, x21
    2b1c:	54000042 	b.cs	2b24 <mmap_add_region_ctx+0x228>  // b.hs, b.nlast
    2b20:	f9002695 	str	x21, [x20, #72]
    2b24:	a94153f3 	ldp	x19, x20, [sp, #16]
    2b28:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2b2c:	a94363f7 	ldp	x23, x24, [sp, #48]
    2b30:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2b34:	d65f03c0 	ret
    2b38:	cb130042 	sub	x2, x2, x19
    2b3c:	aa1303e1 	mov	x1, x19
    2b40:	9100a260 	add	x0, x19, #0x28
    2b44:	9400034c 	bl	3874 <memmove>
    2b48:	f9400b00 	ldr	x0, [x24, #16]
    2b4c:	b4fffd40 	cbz	x0, 2af4 <mmap_add_region_ctx+0x1f8>
    2b50:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2b54:	913a6800 	add	x0, x0, #0xe9a
    2b58:	528064c1 	mov	w1, #0x326                 	// #806
    2b5c:	94000325 	bl	37f0 <__assert>
    2b60:	eb0102bf 	cmp	x21, x1
    2b64:	54fff9c3 	b.cc	2a9c <mmap_add_region_ctx+0x1a0>  // b.lo, b.ul, b.last
    2b68:	52800023 	mov	w3, #0x1                   	// #1
    2b6c:	17ffffc8 	b	2a8c <mmap_add_region_ctx+0x190>
    2b70:	d65f03c0 	ret

0000000000002b74 <mmap_add_ctx>:
    2b74:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2b78:	910003fd 	mov	x29, sp
    2b7c:	a90153f3 	stp	x19, x20, [sp, #16]
    2b80:	aa0003f4 	mov	x20, x0
    2b84:	aa0103f3 	mov	x19, x1
    2b88:	f9401260 	ldr	x0, [x19, #32]
    2b8c:	b5000080 	cbnz	x0, 2b9c <mmap_add_ctx+0x28>
    2b90:	a94153f3 	ldp	x19, x20, [sp, #16]
    2b94:	a8c27bfd 	ldp	x29, x30, [sp], #32
    2b98:	d65f03c0 	ret
    2b9c:	aa1303e1 	mov	x1, x19
    2ba0:	aa1403e0 	mov	x0, x20
    2ba4:	9100a273 	add	x19, x19, #0x28
    2ba8:	97ffff55 	bl	28fc <mmap_add_region_ctx>
    2bac:	17fffff7 	b	2b88 <mmap_add_ctx+0x14>

0000000000002bb0 <init_xlat_tables_ctx>:
    2bb0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    2bb4:	910003fd 	mov	x29, sp
    2bb8:	a90153f3 	stp	x19, x20, [sp, #16]
    2bbc:	f90013f5 	str	x21, [sp, #32]
    2bc0:	b50000a0 	cbnz	x0, 2bd4 <init_xlat_tables_ctx+0x24>
    2bc4:	52808e81 	mov	w1, #0x474                 	// #1140
    2bc8:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2bcc:	913a6800 	add	x0, x0, #0xe9a
    2bd0:	94000308 	bl	37f0 <__assert>
    2bd4:	39415001 	ldrb	w1, [x0, #84]
    2bd8:	aa0003f3 	mov	x19, x0
    2bdc:	34000061 	cbz	w1, 2be8 <init_xlat_tables_ctx+0x38>
    2be0:	52808ea1 	mov	w1, #0x475                 	// #1141
    2be4:	17fffff9 	b	2bc8 <init_xlat_tables_ctx+0x18>
    2be8:	b9405801 	ldr	w1, [x0, #88]
    2bec:	51000421 	sub	w1, w1, #0x1
    2bf0:	7100083f 	cmp	w1, #0x2
    2bf4:	54000069 	b.ls	2c00 <init_xlat_tables_ctx+0x50>  // b.plast
    2bf8:	52808f01 	mov	w1, #0x478                 	// #1144
    2bfc:	17fffff3 	b	2bc8 <init_xlat_tables_ctx+0x18>
    2c00:	97fffdb1 	bl	22c4 <is_mmu_enabled_ctx>
    2c04:	72001c1f 	tst	w0, #0xff
    2c08:	54000060 	b.eq	2c14 <init_xlat_tables_ctx+0x64>  // b.none
    2c0c:	52808f21 	mov	w1, #0x479                 	// #1145
    2c10:	17ffffee 	b	2bc8 <init_xlat_tables_ctx+0x18>
    2c14:	f9400a74 	ldr	x20, [x19, #16]
    2c18:	aa1403e0 	mov	x0, x20
    2c1c:	9400004e 	bl	2d54 <xlat_mmap_print>
    2c20:	b9403a61 	ldr	w1, [x19, #56]
    2c24:	d2800000 	mov	x0, #0x0                   	// #0
    2c28:	6b00003f 	cmp	w1, w0
    2c2c:	540001a8 	b.hi	2c60 <init_xlat_tables_ctx+0xb0>  // b.pmore
    2c30:	b9402a63 	ldr	w3, [x19, #40]
    2c34:	d2800000 	mov	x0, #0x0                   	// #0
    2c38:	6b00007f 	cmp	w3, w0
    2c3c:	540001ac 	b.gt	2c70 <init_xlat_tables_ctx+0xc0>
    2c40:	f9400a80 	ldr	x0, [x20, #16]
    2c44:	b5000280 	cbnz	x0, 2c94 <init_xlat_tables_ctx+0xe4>
    2c48:	f9400274 	ldr	x20, [x19]
    2c4c:	97fffd68 	bl	21ec <xlat_arch_get_max_supported_pa>
    2c50:	eb00029f 	cmp	x20, x0
    2c54:	540005a9 	b.ls	2d08 <init_xlat_tables_ctx+0x158>  // b.plast
    2c58:	528093c1 	mov	w1, #0x49e                 	// #1182
    2c5c:	17ffffdb 	b	2bc8 <init_xlat_tables_ctx+0x18>
    2c60:	f9401a62 	ldr	x2, [x19, #48]
    2c64:	f820785f 	str	xzr, [x2, x0, lsl #3]
    2c68:	91000400 	add	x0, x0, #0x1
    2c6c:	17ffffef 	b	2c28 <init_xlat_tables_ctx+0x78>
    2c70:	f9401262 	ldr	x2, [x19, #32]
    2c74:	d2800001 	mov	x1, #0x0                   	// #0
    2c78:	8b003042 	add	x2, x2, x0, lsl #12
    2c7c:	f821785f 	str	xzr, [x2, x1, lsl #3]
    2c80:	91000421 	add	x1, x1, #0x1
    2c84:	f108003f 	cmp	x1, #0x200
    2c88:	54ffffa1 	b.ne	2c7c <init_xlat_tables_ctx+0xcc>  // b.any
    2c8c:	91000400 	add	x0, x0, #0x1
    2c90:	17ffffea 	b	2c38 <init_xlat_tables_ctx+0x88>
    2c94:	b9403a64 	ldr	w4, [x19, #56]
    2c98:	d2800002 	mov	x2, #0x0                   	// #0
    2c9c:	b9405265 	ldr	w5, [x19, #80]
    2ca0:	aa1403e1 	mov	x1, x20
    2ca4:	f9401a63 	ldr	x3, [x19, #48]
    2ca8:	aa1303e0 	mov	x0, x19
    2cac:	97fffe6f 	bl	2668 <xlat_tables_map_region>
    2cb0:	aa0003f5 	mov	x21, x0
    2cb4:	f9401a60 	ldr	x0, [x19, #48]
    2cb8:	b9403a61 	ldr	w1, [x19, #56]
    2cbc:	d37df021 	lsl	x1, x1, #3
    2cc0:	97fffe19 	bl	2524 <xlat_clean_dcache_range>
    2cc4:	a9408e81 	ldp	x1, x3, [x20, #8]
    2cc8:	8b030020 	add	x0, x1, x3
    2ccc:	d1000400 	sub	x0, x0, #0x1
    2cd0:	eb15001f 	cmp	x0, x21
    2cd4:	54000160 	b.eq	2d00 <init_xlat_tables_ctx+0x150>  // b.none
    2cd8:	b9401a84 	ldr	w4, [x20, #24]
    2cdc:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2ce0:	91388000 	add	x0, x0, #0xe20
    2ce4:	f9400282 	ldr	x2, [x20]
    2ce8:	97fffbb9 	bl	1bcc <tf_log>
    2cec:	f0000000 	adrp	x0, 5000 <__TEXT_END__>
    2cf0:	91382c00 	add	x0, x0, #0xe0b
    2cf4:	97fffc92 	bl	1f3c <backtrace>
    2cf8:	97fffc40 	bl	1df8 <console_flush>
    2cfc:	94000191 	bl	3340 <do_panic>
    2d00:	9100a294 	add	x20, x20, #0x28
    2d04:	17ffffcf 	b	2c40 <init_xlat_tables_ctx+0x90>
    2d08:	f9400660 	ldr	x0, [x19, #8]
    2d0c:	f9402661 	ldr	x1, [x19, #72]
    2d10:	eb00003f 	cmp	x1, x0
    2d14:	54000069 	b.ls	2d20 <init_xlat_tables_ctx+0x170>  // b.plast
    2d18:	528093e1 	mov	w1, #0x49f                 	// #1183
    2d1c:	17ffffab 	b	2bc8 <init_xlat_tables_ctx+0x18>
    2d20:	f9400260 	ldr	x0, [x19]
    2d24:	f9402261 	ldr	x1, [x19, #64]
    2d28:	eb00003f 	cmp	x1, x0
    2d2c:	54000069 	b.ls	2d38 <init_xlat_tables_ctx+0x188>  // b.plast
    2d30:	52809401 	mov	w1, #0x4a0                 	// #1184
    2d34:	17ffffa5 	b	2bc8 <init_xlat_tables_ctx+0x18>
    2d38:	52800020 	mov	w0, #0x1                   	// #1
    2d3c:	39015260 	strb	w0, [x19, #84]
    2d40:	aa1303e0 	mov	x0, x19
    2d44:	a94153f3 	ldp	x19, x20, [sp, #16]
    2d48:	f94013f5 	ldr	x21, [sp, #32]
    2d4c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    2d50:	14000002 	b	2d58 <xlat_tables_print>

0000000000002d54 <xlat_mmap_print>:
    2d54:	d65f03c0 	ret

0000000000002d58 <xlat_tables_print>:
    2d58:	d65f03c0 	ret

0000000000002d5c <errata_a53_826319_wa>:
    2d5c:	aa1e03f1 	mov	x17, x30
    2d60:	94000007 	bl	2d7c <check_errata_826319>
    2d64:	b40000a0 	cbz	x0, 2d78 <errata_a53_826319_wa+0x1c>
    2d68:	d539f001 	mrs	x1, s3_1_c15_c0_0
    2d6c:	9271f821 	and	x1, x1, #0xffffffffffffbfff
    2d70:	b27d0021 	orr	x1, x1, #0x8
    2d74:	d519f001 	msr	s3_1_c15_c0_0, x1
    2d78:	d65f0220 	ret	x17

0000000000002d7c <check_errata_826319>:
    2d7c:	d2800041 	mov	x1, #0x2                   	// #2
    2d80:	140000d8 	b	30e0 <cpu_rev_var_ls>

0000000000002d84 <a53_disable_non_temporal_hint>:
    2d84:	aa1e03f1 	mov	x17, x30
    2d88:	94000006 	bl	2da0 <check_errata_disable_non_temporal_hint>
    2d8c:	b4000080 	cbz	x0, 2d9c <a53_disable_non_temporal_hint+0x18>
    2d90:	d539f201 	mrs	x1, s3_1_c15_c2_0
    2d94:	b2680021 	orr	x1, x1, #0x1000000
    2d98:	d519f201 	msr	s3_1_c15_c2_0, x1
    2d9c:	d65f0220 	ret	x17

0000000000002da0 <check_errata_disable_non_temporal_hint>:
    2da0:	d2800061 	mov	x1, #0x3                   	// #3
    2da4:	140000cf 	b	30e0 <cpu_rev_var_ls>

0000000000002da8 <errata_a53_855873_wa>:
    2da8:	aa1e03f1 	mov	x17, x30
    2dac:	94000006 	bl	2dc4 <check_errata_855873>
    2db0:	b4000080 	cbz	x0, 2dc0 <errata_a53_855873_wa+0x18>
    2db4:	d539f201 	mrs	x1, s3_1_c15_c2_0
    2db8:	b2540021 	orr	x1, x1, #0x100000000000
    2dbc:	d519f201 	msr	s3_1_c15_c2_0, x1
    2dc0:	d65f0220 	ret	x17

0000000000002dc4 <check_errata_855873>:
    2dc4:	d2800061 	mov	x1, #0x3                   	// #3
    2dc8:	140000cb 	b	30f4 <cpu_rev_var_hs>

0000000000002dcc <check_errata_835769>:
    2dcc:	f100101f 	cmp	x0, #0x4
    2dd0:	540000c8 	b.hi	2de8 <errata_not_applies>  // b.pmore
    2dd4:	f100041f 	cmp	x0, #0x1
    2dd8:	d2800020 	mov	x0, #0x1                   	// #1
    2ddc:	54000089 	b.ls	2dec <exit_check_errata_835769>  // b.plast
    2de0:	d53800c1 	mrs	x1, revidr_el1
    2de4:	36380041 	tbz	w1, #7, 2dec <exit_check_errata_835769>

0000000000002de8 <errata_not_applies>:
    2de8:	d2800000 	mov	x0, #0x0                   	// #0

0000000000002dec <exit_check_errata_835769>:
    2dec:	d65f03c0 	ret

0000000000002df0 <check_errata_843419>:
    2df0:	d2800021 	mov	x1, #0x1                   	// #1
    2df4:	d2800002 	mov	x2, #0x0                   	// #0
    2df8:	f100101f 	cmp	x0, #0x4
    2dfc:	9a829020 	csel	x0, x1, x2, ls  // ls = plast
    2e00:	54000081 	b.ne	2e10 <exit_check_errata_843419>  // b.any
    2e04:	d53800c3 	mrs	x3, revidr_el1
    2e08:	36400043 	tbz	w3, #8, 2e10 <exit_check_errata_843419>
    2e0c:	aa0203e0 	mov	x0, x2

0000000000002e10 <exit_check_errata_843419>:
    2e10:	d65f03c0 	ret

0000000000002e14 <cortex_a53_reset_func>:
    2e14:	aa1e03f3 	mov	x19, x30
    2e18:	940000ae 	bl	30d0 <cpu_get_rev_var>
    2e1c:	aa0003f2 	mov	x18, x0
    2e20:	aa1203e0 	mov	x0, x18
    2e24:	97ffffce 	bl	2d5c <errata_a53_826319_wa>
    2e28:	aa1203e0 	mov	x0, x18
    2e2c:	97ffffd6 	bl	2d84 <a53_disable_non_temporal_hint>
    2e30:	aa1203e0 	mov	x0, x18
    2e34:	97ffffdd 	bl	2da8 <errata_a53_855873_wa>
    2e38:	d539f220 	mrs	x0, s3_1_c15_c2_1
    2e3c:	b27a0000 	orr	x0, x0, #0x40
    2e40:	d519f220 	msr	s3_1_c15_c2_1, x0
    2e44:	d5033fdf 	isb
    2e48:	d65f0260 	ret	x19

0000000000002e4c <cortex_a53_errata_report>:
    2e4c:	a9bf7be8 	stp	x8, x30, [sp, #-16]!
    2e50:	940000a0 	bl	30d0 <cpu_get_rev_var>
    2e54:	aa0003e8 	mov	x8, x0
    2e58:	aa0803e0 	mov	x0, x8
    2e5c:	97ffffc8 	bl	2d7c <check_errata_826319>
    2e60:	500184a1 	adr	x1, 5ef6 <cortex_a53_cpu_str>
    2e64:	100182e2 	adr	x2, 5ec0 <cortex_a53_errata_826319_str>
    2e68:	97fffa02 	bl	1670 <errata_print_msg>
    2e6c:	aa0803e0 	mov	x0, x8
    2e70:	97ffffd7 	bl	2dcc <check_errata_835769>
    2e74:	50018401 	adr	x1, 5ef6 <cortex_a53_cpu_str>
    2e78:	70018262 	adr	x2, 5ec7 <cortex_a53_errata_835769_str>
    2e7c:	97fff9fd 	bl	1670 <errata_print_msg>
    2e80:	aa0803e0 	mov	x0, x8
    2e84:	97ffffc7 	bl	2da0 <check_errata_disable_non_temporal_hint>
    2e88:	50018361 	adr	x1, 5ef6 <cortex_a53_cpu_str>
    2e8c:	50018202 	adr	x2, 5ece <cortex_a53_errata_disable_non_temporal_hint_str>
    2e90:	97fff9f8 	bl	1670 <errata_print_msg>
    2e94:	aa0803e0 	mov	x0, x8
    2e98:	97ffffd6 	bl	2df0 <check_errata_843419>
    2e9c:	500182c1 	adr	x1, 5ef6 <cortex_a53_cpu_str>
    2ea0:	10018242 	adr	x2, 5ee8 <cortex_a53_errata_843419_str>
    2ea4:	97fff9f3 	bl	1670 <errata_print_msg>
    2ea8:	aa0803e0 	mov	x0, x8
    2eac:	97ffffc6 	bl	2dc4 <check_errata_855873>
    2eb0:	50018221 	adr	x1, 5ef6 <cortex_a53_cpu_str>
    2eb4:	700181c2 	adr	x2, 5eef <cortex_a53_errata_855873_str>
    2eb8:	97fff9ee 	bl	1670 <errata_print_msg>
    2ebc:	a8c17be8 	ldp	x8, x30, [sp], #16
    2ec0:	d65f03c0 	ret

0000000000002ec4 <plat_get_my_stack>:
    2ec4:	aa1e03ea 	mov	x10, x30
    2ec8:	9400000a 	bl	2ef0 <plat_my_core_pos>
    2ecc:	b0080762 	adrp	x2, 100ef000 <platform_normal_stacks+0xf00>
    2ed0:	91040042 	add	x2, x2, #0x100
    2ed4:	d2820001 	mov	x1, #0x1000                	// #4096
    2ed8:	9b010800 	madd	x0, x0, x1, x2
    2edc:	d65f0140 	ret	x10

0000000000002ee0 <plat_set_my_stack>:
    2ee0:	aa1e03e9 	mov	x9, x30
    2ee4:	97fffff8 	bl	2ec4 <plat_get_my_stack>
    2ee8:	9100001f 	mov	sp, x0
    2eec:	d65f0120 	ret	x9

0000000000002ef0 <plat_my_core_pos>:
    2ef0:	d53800a0 	mrs	x0, mpidr_el1
    2ef4:	14000001 	b	2ef8 <plat_rpi3_calc_core_pos>

0000000000002ef8 <plat_rpi3_calc_core_pos>:
    2ef8:	92401c01 	and	x1, x0, #0xff
    2efc:	92781c00 	and	x0, x0, #0xff00
    2f00:	8b401820 	add	x0, x1, x0, lsr #6
    2f04:	d65f03c0 	ret

0000000000002f08 <plat_is_my_cpu_primary>:
    2f08:	d53800a0 	mrs	x0, mpidr_el1
    2f0c:	92403c00 	and	x0, x0, #0xffff
    2f10:	f100001f 	cmp	x0, #0x0
    2f14:	1a9f17e0 	cset	w0, eq  // eq = none
    2f18:	d65f03c0 	ret

0000000000002f1c <plat_secondary_cold_boot_setup>:
    2f1c:	97fffff5 	bl	2ef0 <plat_my_core_pos>
    2f20:	d37df000 	lsl	x0, x0, #3
    2f24:	d2800102 	mov	x2, #0x8                   	// #8
    2f28:	f2a20002 	movk	x2, #0x1000, lsl #16
    2f2c:	8b020000 	add	x0, x0, x2
    2f30:	d2800001 	mov	x1, #0x0                   	// #0
    2f34:	f9000001 	str	x1, [x0]

0000000000002f38 <poll_mailbox>:
    2f38:	d503205f 	wfe
    2f3c:	f9400001 	ldr	x1, [x0]
    2f40:	f100043f 	cmp	x1, #0x1
    2f44:	54ffffa1 	b.ne	2f38 <poll_mailbox>  // b.any
    2f48:	d2a20000 	mov	x0, #0x10000000            	// #268435456
    2f4c:	f9400001 	ldr	x1, [x0]
    2f50:	d61f0020 	br	x1

0000000000002f54 <plat_get_my_entrypoint>:
    2f54:	d2800000 	mov	x0, #0x0                   	// #0
    2f58:	d65f03c0 	ret

0000000000002f5c <platform_mem_init>:
    2f5c:	d65f03c0 	ret

0000000000002f60 <plat_crash_console_init>:
    2f60:	d28a0800 	mov	x0, #0x5040                	// #20544
    2f64:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    2f68:	d28ca001 	mov	x1, #0x6500                	// #25856
    2f6c:	f2a3b9a1 	movk	x1, #0x1dcd, lsl #16
    2f70:	d2984002 	mov	x2, #0xc200                	// #49664
    2f74:	f2a00022 	movk	x2, #0x1, lsl #16
    2f78:	14000193 	b	35c4 <console_16550_core_init>

0000000000002f7c <plat_crash_console_putc>:
    2f7c:	d28a0801 	mov	x1, #0x5040                	// #20544
    2f80:	f2a7e421 	movk	x1, #0x3f21, lsl #16
    2f84:	140001c1 	b	3688 <console_16550_core_putc>

0000000000002f88 <plat_crash_console_flush>:
    2f88:	d28a0800 	mov	x0, #0x5040                	// #20544
    2f8c:	f2a7e420 	movk	x0, #0x3f21, lsl #16
    2f90:	140001ea 	b	3738 <console_16550_core_flush>

0000000000002f94 <plat_reset_handler>:
    2f94:	d2a80000 	mov	x0, #0x40000000            	// #1073741824
    2f98:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
    2f9c:	b900001f 	str	wzr, [x0]
    2fa0:	b9000801 	str	w1, [x0, #8]
    2fa4:	d65f03c0 	ret

0000000000002fa8 <smc_handler64>:
    2fa8:	d280009e 	mov	x30, #0x4                   	// #4
    2fac:	eb0003df 	cmp	x30, x0
    2fb0:	540003c1 	b.ne	3028 <smc_handler>  // b.any
    2fb4:	d53e111e 	mrs	x30, scr_el3
    2fb8:	f24003df 	tst	x30, #0x1
    2fbc:	540002e1 	b.ne	3018 <unexpected_sync_exception>  // b.any
    2fc0:	f9408bfe 	ldr	x30, [sp, #272]
    2fc4:	d50040bf 	msr	spsel, #0x0
    2fc8:	910003df 	mov	sp, x30
    2fcc:	aa0103f4 	mov	x20, x1
    2fd0:	aa1403e0 	mov	x0, x20
    2fd4:	97fff922 	bl	145c <bl1_print_next_bl_ep_info>
    2fd8:	a9408680 	ldp	x0, x1, [x20, #8]
    2fdc:	d51e4020 	msr	elr_el3, x0
    2fe0:	d51e4001 	msr	spsr_el3, x1
    2fe4:	d3420c20 	ubfx	x0, x1, #2, #2
    2fe8:	f1000c1f 	cmp	x0, #0x3
    2fec:	54000161 	b.ne	3018 <unexpected_sync_exception>  // b.any
    2ff0:	9400016f 	bl	35ac <disable_mmu_icache_el3>
    2ff4:	d50e871f 	tlbi	alle3
    2ff8:	d5033b9f 	dsb	ish
    2ffc:	aa1403e0 	mov	x0, x20
    3000:	9400016e 	bl	35b8 <bl1_plat_prepare_exit>
    3004:	a9449e86 	ldp	x6, x7, [x20, #72]
    3008:	a9439684 	ldp	x4, x5, [x20, #56]
    300c:	a9428e82 	ldp	x2, x3, [x20, #40]
    3010:	a9418680 	ldp	x0, x1, [x20, #24]
    3014:	d69f03e0 	eret

0000000000003018 <unexpected_sync_exception>:
    3018:	d2800100 	mov	x0, #0x8                   	// #8
    301c:	94000166 	bl	35b4 <plat_report_exception>
    3020:	94000167 	bl	35bc <plat_panic_handler>
    3024:	d503201f 	nop

0000000000003028 <smc_handler>:
    3028:	9400006c 	bl	31d8 <save_gp_registers>
    302c:	aa1f03e5 	mov	x5, xzr
    3030:	910003e6 	mov	x6, sp
    3034:	f94088cc 	ldr	x12, [x6, #272]
    3038:	d50040bf 	msr	spsel, #0x0
    303c:	9100019f 	mov	sp, x12
    3040:	d53e4010 	mrs	x16, spsr_el3
    3044:	d53e4031 	mrs	x17, elr_el3
    3048:	d53e1112 	mrs	x18, scr_el3
    304c:	a911c4d0 	stp	x16, x17, [x6, #280]
    3050:	f90080d2 	str	x18, [x6, #256]
    3054:	b3400247 	bfxil	x7, x18, #0, #1
    3058:	97fff90c 	bl	1488 <bl1_smc_handler>
    305c:	14000086 	b	3274 <el3_exit>

0000000000003060 <reset_handler>:
    3060:	aa1e03f3 	mov	x19, x30
    3064:	97ffffcc 	bl	2f94 <plat_reset_handler>
    3068:	9400000b 	bl	3094 <get_cpu_ops_ptr>
    306c:	f100001f 	cmp	x0, #0x0
    3070:	54000081 	b.ne	3080 <reset_handler+0x20>  // b.any
    3074:	30017460 	adr	x0, 5f01 <cortex_a53_cpu_str+0xb>
    3078:	d2800441 	mov	x1, #0x22                  	// #34
    307c:	14000087 	b	3298 <asm_assert>
    3080:	f9400402 	ldr	x2, [x0, #8]
    3084:	aa1303fe 	mov	x30, x19
    3088:	b4000042 	cbz	x2, 3090 <reset_handler+0x30>
    308c:	d61f0040 	br	x2
    3090:	d65f03c0 	ret

0000000000003094 <get_cpu_ops_ptr>:
    3094:	10017a64 	adr	x4, 5fe0 <__CPU_OPS_START__>
    3098:	10017b85 	adr	x5, 6008 <__CPU_OPS_END__>
    309c:	d2800000 	mov	x0, #0x0                   	// #0
    30a0:	d5380002 	mrs	x2, midr_el1
    30a4:	d29ffe03 	mov	x3, #0xfff0                	// #65520
    30a8:	f2bfe003 	movk	x3, #0xff00, lsl #16
    30ac:	0a030042 	and	w2, w2, w3
    30b0:	eb05009f 	cmp	x4, x5
    30b4:	540000c0 	b.eq	30cc <error_exit>  // b.none
    30b8:	f8428481 	ldr	x1, [x4], #40
    30bc:	0a030021 	and	w1, w1, w3
    30c0:	6b02003f 	cmp	w1, w2
    30c4:	54ffff61 	b.ne	30b0 <get_cpu_ops_ptr+0x1c>  // b.any
    30c8:	d100a080 	sub	x0, x4, #0x28

00000000000030cc <error_exit>:
    30cc:	d65f03c0 	ret

00000000000030d0 <cpu_get_rev_var>:
    30d0:	d5380001 	mrs	x1, midr_el1
    30d4:	d3505c20 	ubfx	x0, x1, #16, #8
    30d8:	b3400c20 	bfxil	x0, x1, #0, #4
    30dc:	d65f03c0 	ret

00000000000030e0 <cpu_rev_var_ls>:
    30e0:	d2800022 	mov	x2, #0x1                   	// #1
    30e4:	d2800003 	mov	x3, #0x0                   	// #0
    30e8:	eb01001f 	cmp	x0, x1
    30ec:	9a839040 	csel	x0, x2, x3, ls  // ls = plast
    30f0:	d65f03c0 	ret

00000000000030f4 <cpu_rev_var_hs>:
    30f4:	d2800022 	mov	x2, #0x1                   	// #1
    30f8:	d2800003 	mov	x3, #0x0                   	// #0
    30fc:	eb01001f 	cmp	x0, x1
    3100:	9a832040 	csel	x0, x2, x3, cs  // cs = hs, nlast
    3104:	d65f03c0 	ret

0000000000003108 <print_errata_status>:
    3108:	a9bf7bff 	stp	xzr, x30, [sp, #-16]!
    310c:	97ffffe2 	bl	3094 <get_cpu_ops_ptr>
    3110:	a8c17bff 	ldp	xzr, x30, [sp], #16
    3114:	f9401001 	ldr	x1, [x0, #32]
    3118:	b5000041 	cbnz	x1, 3120 <print_errata_status+0x18>
    311c:	d65f03c0 	ret
    3120:	d61f0020 	br	x1

0000000000003124 <el1_sysregs_context_restore>:
    3124:	a9402809 	ldp	x9, x10, [x0]
    3128:	d5184009 	msr	spsr_el1, x9
    312c:	d518402a 	msr	elr_el1, x10
    3130:	a941400f 	ldp	x15, x16, [x0, #16]
    3134:	d518100f 	msr	sctlr_el1, x15
    3138:	d5181030 	msr	actlr_el1, x16
    313c:	a9422411 	ldp	x17, x9, [x0, #32]
    3140:	d5181051 	msr	cpacr_el1, x17
    3144:	d51a0009 	msr	csselr_el1, x9
    3148:	a9432c0a 	ldp	x10, x11, [x0, #48]
    314c:	d51c410a 	msr	sp_el1, x10
    3150:	d518520b 	msr	esr_el1, x11
    3154:	a944340c 	ldp	x12, x13, [x0, #64]
    3158:	d518200c 	msr	ttbr0_el1, x12
    315c:	d518202d 	msr	ttbr1_el1, x13
    3160:	a9453c0e 	ldp	x14, x15, [x0, #80]
    3164:	d518a20e 	msr	mair_el1, x14
    3168:	d518a30f 	msr	amair_el1, x15
    316c:	a9464410 	ldp	x16, x17, [x0, #96]
    3170:	d5182050 	msr	tcr_el1, x16
    3174:	d518d091 	msr	tpidr_el1, x17
    3178:	a9472809 	ldp	x9, x10, [x0, #112]
    317c:	d51bd049 	msr	tpidr_el0, x9
    3180:	d51bd06a 	msr	tpidrro_el0, x10
    3184:	a948380d 	ldp	x13, x14, [x0, #128]
    3188:	d518740d 	msr	par_el1, x13
    318c:	d518600e 	msr	far_el1, x14
    3190:	a949400f 	ldp	x15, x16, [x0, #144]
    3194:	d518510f 	msr	afsr0_el1, x15
    3198:	d5185130 	msr	afsr1_el1, x16
    319c:	a94a2411 	ldp	x17, x9, [x0, #160]
    31a0:	d518d031 	msr	contextidr_el1, x17
    31a4:	d518c009 	msr	vbar_el1, x9
    31a8:	f940580a 	ldr	x10, [x0, #176]
    31ac:	d51b9c0a 	msr	pmcr_el0, x10
    31b0:	a94c300b 	ldp	x11, x12, [x0, #192]
    31b4:	d51c432b 	msr	spsr_abt, x11
    31b8:	d51c434c 	msr	spsr_und, x12
    31bc:	a94d380d 	ldp	x13, x14, [x0, #208]
    31c0:	d51c430d 	msr	spsr_irq, x13
    31c4:	d51c436e 	msr	spsr_fiq, x14
    31c8:	a94e400f 	ldp	x15, x16, [x0, #224]
    31cc:	d51c300f 	msr	dacr32_el2, x15
    31d0:	d51c5030 	msr	ifsr32_el2, x16
    31d4:	d65f03c0 	ret

00000000000031d8 <save_gp_registers>:
    31d8:	a90007e0 	stp	x0, x1, [sp]
    31dc:	a9010fe2 	stp	x2, x3, [sp, #16]
    31e0:	a90217e4 	stp	x4, x5, [sp, #32]
    31e4:	a9031fe6 	stp	x6, x7, [sp, #48]
    31e8:	a90427e8 	stp	x8, x9, [sp, #64]
    31ec:	a9052fea 	stp	x10, x11, [sp, #80]
    31f0:	a90637ec 	stp	x12, x13, [sp, #96]
    31f4:	a9073fee 	stp	x14, x15, [sp, #112]
    31f8:	a90847f0 	stp	x16, x17, [sp, #128]
    31fc:	a9094ff2 	stp	x18, x19, [sp, #144]
    3200:	a90a57f4 	stp	x20, x21, [sp, #160]
    3204:	a90b5ff6 	stp	x22, x23, [sp, #176]
    3208:	a90c67f8 	stp	x24, x25, [sp, #192]
    320c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    3210:	a90e77fc 	stp	x28, x29, [sp, #224]
    3214:	d5384112 	mrs	x18, sp_el0
    3218:	f9007ff2 	str	x18, [sp, #248]
    321c:	d65f03c0 	ret

0000000000003220 <restore_gp_registers>:
    3220:	a94007e0 	ldp	x0, x1, [sp]
    3224:	a9410fe2 	ldp	x2, x3, [sp, #16]
    3228:	a94217e4 	ldp	x4, x5, [sp, #32]
    322c:	a9431fe6 	ldp	x6, x7, [sp, #48]
    3230:	a94427e8 	ldp	x8, x9, [sp, #64]
    3234:	a9452fea 	ldp	x10, x11, [sp, #80]
    3238:	a94637ec 	ldp	x12, x13, [sp, #96]
    323c:	a9473fee 	ldp	x14, x15, [sp, #112]
    3240:	a94847f0 	ldp	x16, x17, [sp, #128]
    3244:	a9494ff2 	ldp	x18, x19, [sp, #144]
    3248:	a94a57f4 	ldp	x20, x21, [sp, #160]
    324c:	a94b5ff6 	ldp	x22, x23, [sp, #176]
    3250:	a94c67f8 	ldp	x24, x25, [sp, #192]
    3254:	a94d6ffa 	ldp	x26, x27, [sp, #208]
    3258:	f9407ffc 	ldr	x28, [sp, #248]
    325c:	d518411c 	msr	sp_el0, x28
    3260:	a94e77fc 	ldp	x28, x29, [sp, #224]
    3264:	d65f03c0 	ret

0000000000003268 <restore_gp_registers_eret>:
    3268:	97ffffee 	bl	3220 <restore_gp_registers>
    326c:	f9407bfe 	ldr	x30, [sp, #240]
    3270:	d69f03e0 	eret

0000000000003274 <el3_exit>:
    3274:	910003f1 	mov	x17, sp
    3278:	d50041bf 	msr	spsel, #0x1
    327c:	f9008bf1 	str	x17, [sp, #272]
    3280:	f94083f2 	ldr	x18, [sp, #256]
    3284:	a951c7f0 	ldp	x16, x17, [sp, #280]
    3288:	d51e1112 	msr	scr_el3, x18
    328c:	d51e4010 	msr	spsr_el3, x16
    3290:	d51e4031 	msr	elr_el3, x17
    3294:	17fffff5 	b	3268 <restore_gp_registers_eret>

0000000000003298 <asm_assert>:
    3298:	aa0003e5 	mov	x5, x0
    329c:	aa0103e6 	mov	x6, x1
    32a0:	97ffff30 	bl	2f60 <plat_crash_console_init>
    32a4:	b4000260 	cbz	x0, 32f0 <_assert_loop>
    32a8:	100163c4 	adr	x4, 5f20 <assert_msg1>
    32ac:	94000013 	bl	32f8 <asm_print_str>
    32b0:	aa0503e4 	mov	x4, x5
    32b4:	94000011 	bl	32f8 <asm_print_str>
    32b8:	500163a4 	adr	x4, 5f2e <assert_msg2>
    32bc:	9400000f 	bl	32f8 <asm_print_str>
    32c0:	f270bcdf 	tst	x6, #0xffffffffffff0000
    32c4:	54000161 	b.ne	32f0 <_assert_loop>  // b.any
    32c8:	aa0603e4 	mov	x4, x6
    32cc:	d2800146 	mov	x6, #0xa                   	// #10
    32d0:	d284e205 	mov	x5, #0x2710                	// #10000

00000000000032d4 <dec_print_loop>:
    32d4:	9ac50880 	udiv	x0, x4, x5
    32d8:	9b059004 	msub	x4, x0, x5, x4
    32dc:	9100c000 	add	x0, x0, #0x30
    32e0:	97ffff27 	bl	2f7c <plat_crash_console_putc>
    32e4:	9ac608a5 	udiv	x5, x5, x6
    32e8:	b5ffff65 	cbnz	x5, 32d4 <dec_print_loop>
    32ec:	97ffff27 	bl	2f88 <plat_crash_console_flush>

00000000000032f0 <_assert_loop>:
    32f0:	940000b3 	bl	35bc <plat_panic_handler>
    32f4:	d503201f 	nop

00000000000032f8 <asm_print_str>:
    32f8:	aa1e03e3 	mov	x3, x30
    32fc:	38401480 	ldrb	w0, [x4], #1
    3300:	b4000060 	cbz	x0, 330c <asm_print_str+0x14>
    3304:	97ffff1e 	bl	2f7c <plat_crash_console_putc>
    3308:	17fffffd 	b	32fc <asm_print_str+0x4>
    330c:	d65f0060 	ret	x3

0000000000003310 <asm_print_hex>:
    3310:	aa1e03e3 	mov	x3, x30
    3314:	d2800805 	mov	x5, #0x40                  	// #64
    3318:	d10010a5 	sub	x5, x5, #0x4
    331c:	9ac52480 	lsr	x0, x4, x5
    3320:	92400c00 	and	x0, x0, #0xf
    3324:	f100281f 	cmp	x0, #0xa
    3328:	54000043 	b.cc	3330 <asm_print_hex+0x20>  // b.lo, b.ul, b.last
    332c:	91009c00 	add	x0, x0, #0x27
    3330:	9100c000 	add	x0, x0, #0x30
    3334:	97ffff12 	bl	2f7c <plat_crash_console_putc>
    3338:	b5ffff05 	cbnz	x5, 3318 <asm_print_hex+0x8>
    333c:	d65f0060 	ret	x3

0000000000003340 <do_panic>:
    3340:	f81f0fe0 	str	x0, [sp, #-16]!
    3344:	d5384240 	mrs	x0, currentel
    3348:	d3420c00 	ubfx	x0, x0, #2, #2
    334c:	f1000c1f 	cmp	x0, #0x3
    3350:	f84107e0 	ldr	x0, [sp], #16
    3354:	54000020 	b.eq	3358 <el3_panic>  // b.none

0000000000003358 <el3_panic>:
    3358:	aa1e03e6 	mov	x6, x30
    335c:	97ffff01 	bl	2f60 <plat_crash_console_init>
    3360:	b40000e0 	cbz	x0, 337c <_panic_handler>
    3364:	30015e84 	adr	x4, 5f35 <panic_msg>
    3368:	97ffffe4 	bl	32f8 <asm_print_str>
    336c:	aa0603e4 	mov	x4, x6
    3370:	d1001084 	sub	x4, x4, #0x4
    3374:	97ffffe7 	bl	3310 <asm_print_hex>
    3378:	97ffff04 	bl	2f88 <plat_crash_console_flush>

000000000000337c <_panic_handler>:
    337c:	aa0603fe 	mov	x30, x6
    3380:	1400008f 	b	35bc <plat_panic_handler>

0000000000003384 <flush_dcache_range>:
    3384:	b40001a1 	cbz	x1, 33b8 <exit_loop_civac>
    3388:	d53b0023 	mrs	x3, ctr_el0
    338c:	d3504c63 	ubfx	x3, x3, #16, #4
    3390:	d2800082 	mov	x2, #0x4                   	// #4
    3394:	9ac32042 	lsl	x2, x2, x3
    3398:	8b010001 	add	x1, x0, x1
    339c:	d1000443 	sub	x3, x2, #0x1
    33a0:	8a230000 	bic	x0, x0, x3

00000000000033a4 <loop_civac>:
    33a4:	d50b7e20 	dc	civac, x0
    33a8:	8b020000 	add	x0, x0, x2
    33ac:	eb01001f 	cmp	x0, x1
    33b0:	54ffffa3 	b.cc	33a4 <loop_civac>  // b.lo, b.ul, b.last
    33b4:	d5033f9f 	dsb	sy

00000000000033b8 <exit_loop_civac>:
    33b8:	d65f03c0 	ret

00000000000033bc <clean_dcache_range>:
    33bc:	b40001a1 	cbz	x1, 33f0 <exit_loop_cvac>
    33c0:	d53b0023 	mrs	x3, ctr_el0
    33c4:	d3504c63 	ubfx	x3, x3, #16, #4
    33c8:	d2800082 	mov	x2, #0x4                   	// #4
    33cc:	9ac32042 	lsl	x2, x2, x3
    33d0:	8b010001 	add	x1, x0, x1
    33d4:	d1000443 	sub	x3, x2, #0x1
    33d8:	8a230000 	bic	x0, x0, x3

00000000000033dc <loop_cvac>:
    33dc:	d50b7a20 	dc	cvac, x0
    33e0:	8b020000 	add	x0, x0, x2
    33e4:	eb01001f 	cmp	x0, x1
    33e8:	54ffffa3 	b.cc	33dc <loop_cvac>  // b.lo, b.ul, b.last
    33ec:	d5033f9f 	dsb	sy

00000000000033f0 <exit_loop_cvac>:
    33f0:	d65f03c0 	ret

00000000000033f4 <inv_dcache_range>:
    33f4:	b40001a1 	cbz	x1, 3428 <exit_loop_ivac>
    33f8:	d53b0023 	mrs	x3, ctr_el0
    33fc:	d3504c63 	ubfx	x3, x3, #16, #4
    3400:	d2800082 	mov	x2, #0x4                   	// #4
    3404:	9ac32042 	lsl	x2, x2, x3
    3408:	8b010001 	add	x1, x0, x1
    340c:	d1000443 	sub	x3, x2, #0x1
    3410:	8a230000 	bic	x0, x0, x3

0000000000003414 <loop_ivac>:
    3414:	d5087620 	dc	ivac, x0
    3418:	8b020000 	add	x0, x0, x2
    341c:	eb01001f 	cmp	x0, x1
    3420:	54ffffa3 	b.cc	3414 <loop_ivac>  // b.lo, b.ul, b.last
    3424:	d5033f9f 	dsb	sy

0000000000003428 <exit_loop_ivac>:
    3428:	d65f03c0 	ret

000000000000342c <zeromem>:
    342c:	8b010002 	add	x2, x0, x1
    3430:	1400003b 	b	351c <zero_normalmem+0xe8>

0000000000003434 <zero_normalmem>:
    3434:	d53e1004 	mrs	x4, sctlr_el3
    3438:	f240009f 	tst	x4, #0x1
    343c:	54000081 	b.ne	344c <zero_normalmem+0x18>  // b.any
    3440:	50015820 	adr	x0, 5f46 <panic_msg+0x11>
    3444:	d2801981 	mov	x1, #0xcc                  	// #204
    3448:	17ffff94 	b	3298 <asm_assert>
    344c:	8b010002 	add	x2, x0, x1
    3450:	d53b00e3 	mrs	x3, dczid_el0
    3454:	d3400c63 	ubfx	x3, x3, #0, #4
    3458:	d2800085 	mov	x5, #0x4                   	// #4
    345c:	9ac320a3 	lsl	x3, x5, x3
    3460:	f100407f 	cmp	x3, #0x10
    3464:	54000082 	b.cs	3474 <zero_normalmem+0x40>  // b.hs, b.nlast
    3468:	500156e0 	adr	x0, 5f46 <panic_msg+0x11>
    346c:	d2801cc1 	mov	x1, #0xe6                  	// #230
    3470:	17ffff8a 	b	3298 <asm_assert>
    3474:	eb03003f 	cmp	x1, x3
    3478:	54000523 	b.cc	351c <zero_normalmem+0xe8>  // b.lo, b.ul, b.last
    347c:	d1000461 	sub	x1, x3, #0x1
    3480:	ea01001f 	tst	x0, x1
    3484:	54000260 	b.eq	34d0 <zero_normalmem+0x9c>  // b.none
    3488:	aa010004 	orr	x4, x0, x1
    348c:	91000484 	add	x4, x4, #0x1
    3490:	b4000464 	cbz	x4, 351c <zero_normalmem+0xe8>
    3494:	eb02009f 	cmp	x4, x2
    3498:	54000428 	b.hi	351c <zero_normalmem+0xe8>  // b.pmore
    349c:	f2400c1f 	tst	x0, #0xf
    34a0:	540000e0 	b.eq	34bc <zero_normalmem+0x88>  // b.none
    34a4:	b2400c05 	orr	x5, x0, #0xf
    34a8:	910004a5 	add	x5, x5, #0x1
    34ac:	b4000385 	cbz	x5, 351c <zero_normalmem+0xe8>
    34b0:	3800141f 	strb	wzr, [x0], #1
    34b4:	eb05001f 	cmp	x0, x5
    34b8:	54ffffc1 	b.ne	34b0 <zero_normalmem+0x7c>  // b.any
    34bc:	eb04001f 	cmp	x0, x4
    34c0:	54000082 	b.cs	34d0 <zero_normalmem+0x9c>  // b.hs, b.nlast
    34c4:	a8817c1f 	stp	xzr, xzr, [x0], #16
    34c8:	eb04001f 	cmp	x0, x4
    34cc:	54ffffc3 	b.cc	34c4 <zero_normalmem+0x90>  // b.lo, b.ul, b.last
    34d0:	8a210044 	bic	x4, x2, x1
    34d4:	eb04001f 	cmp	x0, x4
    34d8:	540000a2 	b.cs	34ec <zero_normalmem+0xb8>  // b.hs, b.nlast
    34dc:	d50b7420 	dc	zva, x0
    34e0:	8b030000 	add	x0, x0, x3
    34e4:	eb04001f 	cmp	x0, x4
    34e8:	54ffffa3 	b.cc	34dc <zero_normalmem+0xa8>  // b.lo, b.ul, b.last
    34ec:	927cec44 	and	x4, x2, #0xfffffffffffffff0
    34f0:	eb04001f 	cmp	x0, x4
    34f4:	54000082 	b.cs	3504 <zero_normalmem+0xd0>  // b.hs, b.nlast
    34f8:	a8817c1f 	stp	xzr, xzr, [x0], #16
    34fc:	eb04001f 	cmp	x0, x4
    3500:	54ffffc3 	b.cc	34f8 <zero_normalmem+0xc4>  // b.lo, b.ul, b.last
    3504:	eb02001f 	cmp	x0, x2
    3508:	54000080 	b.eq	3518 <zero_normalmem+0xe4>  // b.none
    350c:	3800141f 	strb	wzr, [x0], #1
    3510:	eb02001f 	cmp	x0, x2
    3514:	54ffffc1 	b.ne	350c <zero_normalmem+0xd8>  // b.any
    3518:	d65f03c0 	ret
    351c:	f2400c1f 	tst	x0, #0xf
    3520:	54fffe60 	b.eq	34ec <zero_normalmem+0xb8>  // b.none
    3524:	b2400c04 	orr	x4, x0, #0xf
    3528:	91000484 	add	x4, x4, #0x1
    352c:	b4fffec4 	cbz	x4, 3504 <zero_normalmem+0xd0>
    3530:	eb02009f 	cmp	x4, x2
    3534:	54fffe82 	b.cs	3504 <zero_normalmem+0xd0>  // b.hs, b.nlast
    3538:	3800141f 	strb	wzr, [x0], #1
    353c:	eb04001f 	cmp	x0, x4
    3540:	54ffffc1 	b.ne	3538 <zero_normalmem+0x104>  // b.any
    3544:	17ffffea 	b	34ec <zero_normalmem+0xb8>

0000000000003548 <memcpy16>:
    3548:	aa010003 	orr	x3, x0, x1
    354c:	f2400c7f 	tst	x3, #0xf
    3550:	54000080 	b.eq	3560 <m_loop16>  // b.none
    3554:	50014f80 	adr	x0, 5f46 <panic_msg+0x11>
    3558:	d2803501 	mov	x1, #0x1a8                 	// #424
    355c:	17ffff4f 	b	3298 <asm_assert>

0000000000003560 <m_loop16>:
    3560:	f100405f 	cmp	x2, #0x10
    3564:	540000a3 	b.cc	3578 <m_loop1>  // b.lo, b.ul, b.last
    3568:	a8c11023 	ldp	x3, x4, [x1], #16
    356c:	a8811003 	stp	x3, x4, [x0], #16
    3570:	d1004042 	sub	x2, x2, #0x10
    3574:	17fffffb 	b	3560 <m_loop16>

0000000000003578 <m_loop1>:
    3578:	b40000a2 	cbz	x2, 358c <m_end>
    357c:	38401423 	ldrb	w3, [x1], #1
    3580:	38001403 	strb	w3, [x0], #1
    3584:	f1000442 	subs	x2, x2, #0x1
    3588:	54ffff81 	b.ne	3578 <m_loop1>  // b.any

000000000000358c <m_end>:
    358c:	d65f03c0 	ret

0000000000003590 <disable_mmu_el3>:
    3590:	d28000a1 	mov	x1, #0x5                   	// #5

0000000000003594 <do_disable_mmu_el3>:
    3594:	d53e1000 	mrs	x0, sctlr_el3
    3598:	8a210000 	bic	x0, x0, x1
    359c:	d51e1000 	msr	sctlr_el3, x0
    35a0:	d5033fdf 	isb
    35a4:	d5033f9f 	dsb	sy
    35a8:	d65f03c0 	ret

00000000000035ac <disable_mmu_icache_el3>:
    35ac:	d28200a1 	mov	x1, #0x1005                	// #4101
    35b0:	17fffff9 	b	3594 <do_disable_mmu_el3>

00000000000035b4 <plat_report_exception>:
    35b4:	d65f03c0 	ret

00000000000035b8 <bl1_plat_prepare_exit>:
    35b8:	d65f03c0 	ret

00000000000035bc <plat_panic_handler>:
    35bc:	d503207f 	wfi
    35c0:	17ffffff 	b	35bc <plat_panic_handler>

00000000000035c4 <console_16550_core_init>:
    35c4:	b4000340 	cbz	x0, 362c <init_fail>
    35c8:	34000321 	cbz	w1, 362c <init_fail>
    35cc:	34000302 	cbz	w2, 362c <init_fail>
    35d0:	531c6c42 	lsl	w2, w2, #4
    35d4:	1ac20822 	udiv	w2, w1, w2
    35d8:	12001c41 	and	w1, w2, #0xff
    35dc:	53087c42 	lsr	w2, w2, #8
    35e0:	12001c42 	and	w2, w2, #0xff
    35e4:	b9400c03 	ldr	w3, [x0, #12]
    35e8:	32190063 	orr	w3, w3, #0x80
    35ec:	b9000c03 	str	w3, [x0, #12]
    35f0:	b9000001 	str	w1, [x0]
    35f4:	b9000402 	str	w2, [x0, #4]
    35f8:	12801002 	mov	w2, #0xffffff7f            	// #-129
    35fc:	0a020063 	and	w3, w3, w2
    3600:	b9000c03 	str	w3, [x0, #12]
    3604:	52800063 	mov	w3, #0x3                   	// #3
    3608:	b9000c03 	str	w3, [x0, #12]
    360c:	52800003 	mov	w3, #0x0                   	// #0
    3610:	b9000403 	str	w3, [x0, #4]
    3614:	52800123 	mov	w3, #0x9                   	// #9
    3618:	b9000803 	str	w3, [x0, #8]
    361c:	52800063 	mov	w3, #0x3                   	// #3
    3620:	b9001003 	str	w3, [x0, #16]
    3624:	52800020 	mov	w0, #0x1                   	// #1
    3628:	d65f03c0 	ret

000000000000362c <init_fail>:
    362c:	52800000 	mov	w0, #0x0                   	// #0
    3630:	d65f03c0 	ret

0000000000003634 <console_16550_register>:
    3634:	aa1e03e7 	mov	x7, x30
    3638:	aa0303e6 	mov	x6, x3
    363c:	b4000246 	cbz	x6, 3684 <register_fail>
    3640:	f90014c0 	str	x0, [x6, #40]
    3644:	97ffffe0 	bl	35c4 <console_16550_core_init>
    3648:	b40001e0 	cbz	x0, 3684 <register_fail>
    364c:	aa0603e0 	mov	x0, x6
    3650:	aa0703fe 	mov	x30, x7
    3654:	90000001 	adrp	x1, 3000 <smc_handler64+0x58>
    3658:	911b5021 	add	x1, x1, #0x6d4
    365c:	f9000801 	str	x1, [x0, #16]
    3660:	90000001 	adrp	x1, 3000 <smc_handler64+0x58>
    3664:	911c7021 	add	x1, x1, #0x71c
    3668:	f9000c01 	str	x1, [x0, #24]
    366c:	90000001 	adrp	x1, 3000 <smc_handler64+0x58>
    3670:	911d9021 	add	x1, x1, #0x764
    3674:	f9001001 	str	x1, [x0, #32]
    3678:	d28000a1 	mov	x1, #0x5                   	// #5
    367c:	f9000401 	str	x1, [x0, #8]
    3680:	17fff997 	b	1cdc <console_register>

0000000000003684 <register_fail>:
    3684:	d65f00e0 	ret	x7

0000000000003688 <console_16550_core_putc>:
    3688:	f100003f 	cmp	x1, #0x0
    368c:	54000081 	b.ne	369c <console_16550_core_putc+0x14>  // b.any
    3690:	30014680 	adr	x0, 5f61 <panic_msg+0x2c>
    3694:	d2801221 	mov	x1, #0x91                  	// #145
    3698:	17ffff00 	b	3298 <asm_assert>
    369c:	7100281f 	cmp	w0, #0xa
    36a0:	540000e1 	b.ne	36bc <console_16550_core_putc+0x34>  // b.any
    36a4:	b9401422 	ldr	w2, [x1, #20]
    36a8:	121b0442 	and	w2, w2, #0x60
    36ac:	7101805f 	cmp	w2, #0x60
    36b0:	54ffffa1 	b.ne	36a4 <console_16550_core_putc+0x1c>  // b.any
    36b4:	528001a2 	mov	w2, #0xd                   	// #13
    36b8:	b9000022 	str	w2, [x1]
    36bc:	b9401422 	ldr	w2, [x1, #20]
    36c0:	121b0442 	and	w2, w2, #0x60
    36c4:	7101805f 	cmp	w2, #0x60
    36c8:	54ffffa1 	b.ne	36bc <console_16550_core_putc+0x34>  // b.any
    36cc:	b9000020 	str	w0, [x1]
    36d0:	d65f03c0 	ret

00000000000036d4 <console_16550_putc>:
    36d4:	f100003f 	cmp	x1, #0x0
    36d8:	54000081 	b.ne	36e8 <console_16550_putc+0x14>  // b.any
    36dc:	30014420 	adr	x0, 5f61 <panic_msg+0x2c>
    36e0:	d28016a1 	mov	x1, #0xb5                  	// #181
    36e4:	17fffeed 	b	3298 <asm_assert>
    36e8:	f9401421 	ldr	x1, [x1, #40]
    36ec:	17ffffe7 	b	3688 <console_16550_core_putc>

00000000000036f0 <console_16550_core_getc>:
    36f0:	f100001f 	cmp	x0, #0x0
    36f4:	54000081 	b.ne	3704 <console_16550_core_getc+0x14>  // b.any
    36f8:	30014340 	adr	x0, 5f61 <panic_msg+0x2c>
    36fc:	d2801901 	mov	x1, #0xc8                  	// #200
    3700:	17fffee6 	b	3298 <asm_assert>
    3704:	b9401401 	ldr	w1, [x0, #20]
    3708:	36000061 	tbz	w1, #0, 3714 <no_char>
    370c:	b9400000 	ldr	w0, [x0]
    3710:	d65f03c0 	ret

0000000000003714 <no_char>:
    3714:	12800000 	mov	w0, #0xffffffff            	// #-1
    3718:	d65f03c0 	ret

000000000000371c <console_16550_getc>:
    371c:	f100003f 	cmp	x1, #0x0
    3720:	54000081 	b.ne	3730 <console_16550_getc+0x14>  // b.any
    3724:	300141e0 	adr	x0, 5f61 <panic_msg+0x2c>
    3728:	d2801c41 	mov	x1, #0xe2                  	// #226
    372c:	17fffedb 	b	3298 <asm_assert>
    3730:	f9401400 	ldr	x0, [x0, #40]
    3734:	17ffffef 	b	36f0 <console_16550_core_getc>

0000000000003738 <console_16550_core_flush>:
    3738:	f100001f 	cmp	x0, #0x0
    373c:	54000081 	b.ne	374c <console_16550_core_flush+0x14>  // b.any
    3740:	30014100 	adr	x0, 5f61 <panic_msg+0x2c>
    3744:	d2801e81 	mov	x1, #0xf4                  	// #244
    3748:	17fffed4 	b	3298 <asm_assert>
    374c:	b9401401 	ldr	w1, [x0, #20]
    3750:	121b0421 	and	w1, w1, #0x60
    3754:	7101803f 	cmp	w1, #0x60
    3758:	54ffffa1 	b.ne	374c <console_16550_core_flush+0x14>  // b.any
    375c:	52800000 	mov	w0, #0x0                   	// #0
    3760:	d65f03c0 	ret

0000000000003764 <console_16550_flush>:
    3764:	f100001f 	cmp	x0, #0x0
    3768:	54000081 	b.ne	3778 <console_16550_flush+0x14>  // b.any
    376c:	30013fa0 	adr	x0, 5f61 <panic_msg+0x2c>
    3770:	d28021a1 	mov	x1, #0x10d                 	// #269
    3774:	17fffec9 	b	3298 <asm_assert>
    3778:	f9401400 	ldr	x0, [x0, #40]
    377c:	17ffffef 	b	3738 <console_16550_core_flush>

0000000000003780 <enable_mmu_direct_el3>:
    3780:	d53e1001 	mrs	x1, sctlr_el3
    3784:	f240003f 	tst	x1, #0x1
    3788:	54000080 	b.eq	3798 <enable_mmu_direct_el3+0x18>  // b.none
    378c:	30013fe0 	adr	x0, 5f89 <panic_msg+0x54>
    3790:	d2800541 	mov	x1, #0x2a                  	// #42
    3794:	17fffec1 	b	3298 <asm_assert>
    3798:	d50e871f 	tlbi	alle3
    379c:	aa0003e7 	mov	x7, x0
    37a0:	f0080760 	adrp	x0, 100f2000 <platform_normal_stacks+0x3f00>
    37a4:	91254000 	add	x0, x0, #0x950
    37a8:	f9400001 	ldr	x1, [x0]
    37ac:	d51ea201 	msr	mair_el3, x1
    37b0:	f9400402 	ldr	x2, [x0, #8]
    37b4:	d51e2042 	msr	tcr_el3, x2
    37b8:	f9400803 	ldr	x3, [x0, #16]
    37bc:	d51e2003 	msr	ttbr0_el3, x3
    37c0:	d5033b9f 	dsb	ish
    37c4:	d5033fdf 	isb
    37c8:	d53e1004 	mrs	x4, sctlr_el3
    37cc:	d28000a5 	mov	x5, #0x5                   	// #5
    37d0:	f2a00105 	movk	x5, #0x8, lsl #16
    37d4:	aa050084 	orr	x4, x4, x5
    37d8:	927df885 	and	x5, x4, #0xfffffffffffffffb
    37dc:	f24000ff 	tst	x7, #0x1
    37e0:	9a8410a4 	csel	x4, x5, x4, ne  // ne = any
    37e4:	d51e1004 	msr	sctlr_el3, x4
    37e8:	d5033fdf 	isb
    37ec:	d65f03c0 	ret

00000000000037f0 <__assert>:
    37f0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    37f4:	2a0103e2 	mov	w2, w1
    37f8:	aa0003e1 	mov	x1, x0
    37fc:	910003fd 	mov	x29, sp
    3800:	d0000000 	adrp	x0, 5000 <__TEXT_END__>
    3804:	913ec400 	add	x0, x0, #0xfb1
    3808:	9400015d 	bl	3d7c <printf>
    380c:	d0000000 	adrp	x0, 5000 <__TEXT_END__>
    3810:	913f0000 	add	x0, x0, #0xfc0
    3814:	97fff9ca 	bl	1f3c <backtrace>
    3818:	97fff978 	bl	1df8 <console_flush>
    381c:	97ffff68 	bl	35bc <plat_panic_handler>

0000000000003820 <memcmp>:
    3820:	d1000421 	sub	x1, x1, #0x1
    3824:	d2800004 	mov	x4, #0x0                   	// #0
    3828:	eb04005f 	cmp	x2, x4
    382c:	54000061 	b.ne	3838 <memcmp+0x18>  // b.any
    3830:	52800000 	mov	w0, #0x0                   	// #0
    3834:	14000007 	b	3850 <memcmp+0x30>
    3838:	38646803 	ldrb	w3, [x0, x4]
    383c:	91000484 	add	x4, x4, #0x1
    3840:	38646825 	ldrb	w5, [x1, x4]
    3844:	6b05007f 	cmp	w3, w5
    3848:	54ffff00 	b.eq	3828 <memcmp+0x8>  // b.none
    384c:	4b050060 	sub	w0, w3, w5
    3850:	d65f03c0 	ret

0000000000003854 <memcpy>:
    3854:	d2800003 	mov	x3, #0x0                   	// #0
    3858:	eb03005f 	cmp	x2, x3
    385c:	54000041 	b.ne	3864 <memcpy+0x10>  // b.any
    3860:	d65f03c0 	ret
    3864:	38636824 	ldrb	w4, [x1, x3]
    3868:	38236804 	strb	w4, [x0, x3]
    386c:	91000463 	add	x3, x3, #0x1
    3870:	17fffffa 	b	3858 <memcpy+0x4>

0000000000003874 <memmove>:
    3874:	cb010006 	sub	x6, x0, x1
    3878:	aa0003e5 	mov	x5, x0
    387c:	eb0200df 	cmp	x6, x2
    3880:	54000043 	b.cc	3888 <memmove+0x14>  // b.lo, b.ul, b.last
    3884:	17fffff4 	b	3854 <memcpy>
    3888:	8b020024 	add	x4, x1, x2
    388c:	8b020000 	add	x0, x0, x2
    3890:	eb05001f 	cmp	x0, x5
    3894:	54000041 	b.ne	389c <memmove+0x28>  // b.any
    3898:	d65f03c0 	ret
    389c:	385ffc81 	ldrb	w1, [x4, #-1]!
    38a0:	381ffc01 	strb	w1, [x0, #-1]!
    38a4:	17fffffb 	b	3890 <memmove+0x1c>

00000000000038a8 <unsigned_num_print>:
    38a8:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    38ac:	2a0103e1 	mov	w1, w1
    38b0:	d2800005 	mov	x5, #0x0                   	// #0
    38b4:	910003fd 	mov	x29, sp
    38b8:	a90153f3 	stp	x19, x20, [sp, #16]
    38bc:	2a0303f4 	mov	w20, w3
    38c0:	a9025bf5 	stp	x21, x22, [sp, #32]
    38c4:	910123f6 	add	x22, sp, #0x48
    38c8:	f9001bf7 	str	x23, [sp, #48]
    38cc:	12001c57 	and	w23, w2, #0xff
    38d0:	9ac10807 	udiv	x7, x0, x1
    38d4:	110004b5 	add	w21, w5, #0x1
    38d8:	9b0180e3 	msub	x3, x7, x1, x0
    38dc:	12001c64 	and	w4, w3, #0xff
    38e0:	f100247f 	cmp	x3, #0x9
    38e4:	1100c086 	add	w6, w4, #0x30
    38e8:	11015c84 	add	w4, w4, #0x57
    38ec:	12001cc6 	and	w6, w6, #0xff
    38f0:	12001c84 	and	w4, w4, #0xff
    38f4:	1a868084 	csel	w4, w4, w6, hi  // hi = pmore
    38f8:	383668a4 	strb	w4, [x5, x22]
    38fc:	eb00003f 	cmp	x1, x0
    3900:	910004a5 	add	x5, x5, #0x1
    3904:	540001c9 	b.ls	393c <unsigned_num_print+0x94>  // b.plast
    3908:	52800013 	mov	w19, #0x0                   	// #0
    390c:	7100029f 	cmp	w20, #0x0
    3910:	5400020c 	b.gt	3950 <unsigned_num_print+0xa8>
    3914:	93407eb4 	sxtw	x20, w21
    3918:	d1000694 	sub	x20, x20, #0x1
    391c:	3100069f 	cmn	w20, #0x1
    3920:	54000201 	b.ne	3960 <unsigned_num_print+0xb8>  // b.any
    3924:	0b150260 	add	w0, w19, w21
    3928:	a94153f3 	ldp	x19, x20, [sp, #16]
    392c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3930:	f9401bf7 	ldr	x23, [sp, #48]
    3934:	a8c67bfd 	ldp	x29, x30, [sp], #96
    3938:	d65f03c0 	ret
    393c:	aa0703e0 	mov	x0, x7
    3940:	17ffffe4 	b	38d0 <unsigned_num_print+0x28>
    3944:	11000673 	add	w19, w19, #0x1
    3948:	2a1703e0 	mov	w0, w23
    394c:	94000121 	bl	3dd0 <putchar>
    3950:	4b130280 	sub	w0, w20, w19
    3954:	6b15001f 	cmp	w0, w21
    3958:	54ffff6c 	b.gt	3944 <unsigned_num_print+0x9c>
    395c:	17ffffee 	b	3914 <unsigned_num_print+0x6c>
    3960:	38746ac0 	ldrb	w0, [x22, x20]
    3964:	9400011b 	bl	3dd0 <putchar>
    3968:	17ffffec 	b	3918 <unsigned_num_print+0x70>

000000000000396c <vprintf>:
    396c:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    3970:	910003fd 	mov	x29, sp
    3974:	a90153f3 	stp	x19, x20, [sp, #16]
    3978:	b9401834 	ldr	w20, [x1, #24]
    397c:	a90363f7 	stp	x23, x24, [sp, #48]
    3980:	a9405c33 	ldp	x19, x23, [x1]
    3984:	a9025bf5 	stp	x21, x22, [sp, #32]
    3988:	aa0003f6 	mov	x22, x0
    398c:	a9046bf9 	stp	x25, x26, [sp, #64]
    3990:	d000001a 	adrp	x26, 5000 <__TEXT_END__>
    3994:	913f635a 	add	x26, x26, #0xfd8
    3998:	52800015 	mov	w21, #0x0                   	// #0
    399c:	52800019 	mov	w25, #0x0                   	// #0
    39a0:	a90573fb 	stp	x27, x28, [sp, #80]
    39a4:	394002c0 	ldrb	w0, [x22]
    39a8:	34000240 	cbz	w0, 39f0 <vprintf+0x84>
    39ac:	910006d6 	add	x22, x22, #0x1
    39b0:	7100941f 	cmp	w0, #0x25
    39b4:	54001de1 	b.ne	3d70 <vprintf+0x404>  // b.any
    39b8:	52800018 	mov	w24, #0x0                   	// #0
    39bc:	52800001 	mov	w1, #0x0                   	// #0
    39c0:	14000002 	b	39c8 <vprintf+0x5c>
    39c4:	52800619 	mov	w25, #0x30                  	// #48
    39c8:	394002c0 	ldrb	w0, [x22]
    39cc:	7101c01f 	cmp	w0, #0x70
    39d0:	54000e00 	b.eq	3b90 <vprintf+0x224>  // b.none
    39d4:	540002c8 	b.hi	3a2c <vprintf+0xc0>  // b.pmore
    39d8:	7101901f 	cmp	w0, #0x64
    39dc:	54000540 	b.eq	3a84 <vprintf+0x118>  // b.none
    39e0:	54000188 	b.hi	3a10 <vprintf+0xa4>  // b.pmore
    39e4:	7100c01f 	cmp	w0, #0x30
    39e8:	54001ae0 	b.eq	3d44 <vprintf+0x3d8>  // b.none
    39ec:	12800015 	mov	w21, #0xffffffff            	// #-1
    39f0:	2a1503e0 	mov	w0, w21
    39f4:	a94153f3 	ldp	x19, x20, [sp, #16]
    39f8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    39fc:	a94363f7 	ldp	x23, x24, [sp, #48]
    3a00:	a9446bf9 	ldp	x25, x26, [sp, #64]
    3a04:	a94573fb 	ldp	x27, x28, [sp, #80]
    3a08:	a8c67bfd 	ldp	x29, x30, [sp], #96
    3a0c:	d65f03c0 	ret
    3a10:	7101a41f 	cmp	w0, #0x69
    3a14:	54000380 	b.eq	3a84 <vprintf+0x118>  // b.none
    3a18:	7101b01f 	cmp	w0, #0x6c
    3a1c:	54fffe81 	b.ne	39ec <vprintf+0x80>  // b.any
    3a20:	11000421 	add	w1, w1, #0x1
    3a24:	910006d6 	add	x22, x22, #0x1
    3a28:	17ffffe8 	b	39c8 <vprintf+0x5c>
    3a2c:	7101d41f 	cmp	w0, #0x75
    3a30:	54001440 	b.eq	3cb8 <vprintf+0x34c>  // b.none
    3a34:	540001a8 	b.hi	3a68 <vprintf+0xfc>  // b.pmore
    3a38:	7101cc1f 	cmp	w0, #0x73
    3a3c:	54fffd81 	b.ne	39ec <vprintf+0x80>  // b.any
    3a40:	37f807d4 	tbnz	w20, #31, 3b38 <vprintf+0x1cc>
    3a44:	91003e78 	add	x24, x19, #0xf
    3a48:	2a1403fc 	mov	w28, w20
    3a4c:	927df318 	and	x24, x24, #0xfffffffffffffff8
    3a50:	f9400260 	ldr	x0, [x19]
    3a54:	b5000980 	cbnz	x0, 3b84 <vprintf+0x218>
    3a58:	d0000000 	adrp	x0, 5000 <__TEXT_END__>
    3a5c:	913f1c00 	add	x0, x0, #0xfc7
    3a60:	52800381 	mov	w1, #0x1c                  	// #28
    3a64:	97ffff63 	bl	37f0 <__assert>
    3a68:	7101e01f 	cmp	w0, #0x78
    3a6c:	54000d60 	b.eq	3c18 <vprintf+0x2ac>  // b.none
    3a70:	7101e81f 	cmp	w0, #0x7a
    3a74:	54fffbc1 	b.ne	39ec <vprintf+0x80>  // b.any
    3a78:	910006d6 	add	x22, x22, #0x1
    3a7c:	52800041 	mov	w1, #0x2                   	// #2
    3a80:	17ffffd2 	b	39c8 <vprintf+0x5c>
    3a84:	7100043f 	cmp	w1, #0x1
    3a88:	5400022d 	b.le	3acc <vprintf+0x160>
    3a8c:	37f802f4 	tbnz	w20, #31, 3ae8 <vprintf+0x17c>
    3a90:	91003e60 	add	x0, x19, #0xf
    3a94:	2a1403e1 	mov	w1, w20
    3a98:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3a9c:	f940027c 	ldr	x28, [x19]
    3aa0:	2a0103f4 	mov	w20, w1
    3aa4:	aa0003f3 	mov	x19, x0
    3aa8:	b6f8045c 	tbz	x28, #63, 3b30 <vprintf+0x1c4>
    3aac:	528005a0 	mov	w0, #0x2d                  	// #45
    3ab0:	940000c8 	bl	3dd0 <putchar>
    3ab4:	cb1c03e0 	neg	x0, x28
    3ab8:	51000718 	sub	w24, w24, #0x1
    3abc:	2a1803e3 	mov	w3, w24
    3ac0:	2a1903e2 	mov	w2, w25
    3ac4:	52800141 	mov	w1, #0xa                   	// #10
    3ac8:	14000060 	b	3c48 <vprintf+0x2dc>
    3acc:	54fffe00 	b.eq	3a8c <vprintf+0x120>  // b.none
    3ad0:	37f801f4 	tbnz	w20, #31, 3b0c <vprintf+0x1a0>
    3ad4:	91002e60 	add	x0, x19, #0xb
    3ad8:	2a1403e1 	mov	w1, w20
    3adc:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3ae0:	b980027c 	ldrsw	x28, [x19]
    3ae4:	17ffffef 	b	3aa0 <vprintf+0x134>
    3ae8:	11002281 	add	w1, w20, #0x8
    3aec:	7100003f 	cmp	w1, #0x0
    3af0:	5400008d 	b.le	3b00 <vprintf+0x194>
    3af4:	91003e60 	add	x0, x19, #0xf
    3af8:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3afc:	17ffffe8 	b	3a9c <vprintf+0x130>
    3b00:	aa1303e0 	mov	x0, x19
    3b04:	8b34c2f3 	add	x19, x23, w20, sxtw
    3b08:	17ffffe5 	b	3a9c <vprintf+0x130>
    3b0c:	11002281 	add	w1, w20, #0x8
    3b10:	7100003f 	cmp	w1, #0x0
    3b14:	5400008d 	b.le	3b24 <vprintf+0x1b8>
    3b18:	91002e60 	add	x0, x19, #0xb
    3b1c:	927df000 	and	x0, x0, #0xfffffffffffffff8
    3b20:	17fffff0 	b	3ae0 <vprintf+0x174>
    3b24:	aa1303e0 	mov	x0, x19
    3b28:	8b34c2f3 	add	x19, x23, w20, sxtw
    3b2c:	17ffffed 	b	3ae0 <vprintf+0x174>
    3b30:	aa1c03e0 	mov	x0, x28
    3b34:	17ffffe2 	b	3abc <vprintf+0x150>
    3b38:	1100229c 	add	w28, w20, #0x8
    3b3c:	7100039f 	cmp	w28, #0x0
    3b40:	5400008d 	b.le	3b50 <vprintf+0x1e4>
    3b44:	91003e78 	add	x24, x19, #0xf
    3b48:	927df318 	and	x24, x24, #0xfffffffffffffff8
    3b4c:	17ffffc1 	b	3a50 <vprintf+0xe4>
    3b50:	aa1303f8 	mov	x24, x19
    3b54:	8b34c2f3 	add	x19, x23, w20, sxtw
    3b58:	17ffffbe 	b	3a50 <vprintf+0xe4>
    3b5c:	9400009d 	bl	3dd0 <putchar>
    3b60:	2a1303e1 	mov	w1, w19
    3b64:	91000673 	add	x19, x19, #0x1
    3b68:	38736a80 	ldrb	w0, [x20, x19]
    3b6c:	35ffff80 	cbnz	w0, 3b5c <vprintf+0x1f0>
    3b70:	0b0102b5 	add	w21, w21, w1
    3b74:	2a1c03f4 	mov	w20, w28
    3b78:	aa1803f3 	mov	x19, x24
    3b7c:	910006d6 	add	x22, x22, #0x1
    3b80:	17ffff89 	b	39a4 <vprintf+0x38>
    3b84:	d2800013 	mov	x19, #0x0                   	// #0
    3b88:	d1000414 	sub	x20, x0, #0x1
    3b8c:	17fffff5 	b	3b60 <vprintf+0x1f4>
    3b90:	37f801f4 	tbnz	w20, #31, 3bcc <vprintf+0x260>
    3b94:	91003e7c 	add	x28, x19, #0xf
    3b98:	2a1403fb 	mov	w27, w20
    3b9c:	927df39c 	and	x28, x28, #0xfffffffffffffff8
    3ba0:	f9400274 	ldr	x20, [x19]
    3ba4:	b5000374 	cbnz	x20, 3c10 <vprintf+0x2a4>
    3ba8:	aa1403e0 	mov	x0, x20
    3bac:	2a1803e3 	mov	w3, w24
    3bb0:	2a1903e2 	mov	w2, w25
    3bb4:	52800201 	mov	w1, #0x10                  	// #16
    3bb8:	2a1b03f4 	mov	w20, w27
    3bbc:	97ffff3b 	bl	38a8 <unsigned_num_print>
    3bc0:	aa1c03f3 	mov	x19, x28
    3bc4:	0b0002b5 	add	w21, w21, w0
    3bc8:	17ffffed 	b	3b7c <vprintf+0x210>
    3bcc:	1100229b 	add	w27, w20, #0x8
    3bd0:	7100037f 	cmp	w27, #0x0
    3bd4:	5400008d 	b.le	3be4 <vprintf+0x278>
    3bd8:	91003e7c 	add	x28, x19, #0xf
    3bdc:	927df39c 	and	x28, x28, #0xfffffffffffffff8
    3be0:	17fffff0 	b	3ba0 <vprintf+0x234>
    3be4:	aa1303fc 	mov	x28, x19
    3be8:	8b34c2f3 	add	x19, x23, w20, sxtw
    3bec:	17ffffed 	b	3ba0 <vprintf+0x234>
    3bf0:	94000078 	bl	3dd0 <putchar>
    3bf4:	2a1303e1 	mov	w1, w19
    3bf8:	91000673 	add	x19, x19, #0x1
    3bfc:	387a6a60 	ldrb	w0, [x19, x26]
    3c00:	35ffff80 	cbnz	w0, 3bf0 <vprintf+0x284>
    3c04:	0b0102b5 	add	w21, w21, w1
    3c08:	51000b18 	sub	w24, w24, #0x2
    3c0c:	17ffffe7 	b	3ba8 <vprintf+0x23c>
    3c10:	d2800013 	mov	x19, #0x0                   	// #0
    3c14:	17fffff8 	b	3bf4 <vprintf+0x288>
    3c18:	7100043f 	cmp	w1, #0x1
    3c1c:	540001cd 	b.le	3c54 <vprintf+0x2e8>
    3c20:	37f80294 	tbnz	w20, #31, 3c70 <vprintf+0x304>
    3c24:	91003e61 	add	x1, x19, #0xf
    3c28:	2a1403e2 	mov	w2, w20
    3c2c:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3c30:	f9400260 	ldr	x0, [x19]
    3c34:	2a0203f4 	mov	w20, w2
    3c38:	2a1803e3 	mov	w3, w24
    3c3c:	2a1903e2 	mov	w2, w25
    3c40:	aa0103f3 	mov	x19, x1
    3c44:	52800201 	mov	w1, #0x10                  	// #16
    3c48:	97ffff18 	bl	38a8 <unsigned_num_print>
    3c4c:	0b0002b5 	add	w21, w21, w0
    3c50:	17ffffcb 	b	3b7c <vprintf+0x210>
    3c54:	54fffe60 	b.eq	3c20 <vprintf+0x2b4>  // b.none
    3c58:	37f801f4 	tbnz	w20, #31, 3c94 <vprintf+0x328>
    3c5c:	91002e61 	add	x1, x19, #0xb
    3c60:	2a1403e2 	mov	w2, w20
    3c64:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3c68:	b9400260 	ldr	w0, [x19]
    3c6c:	17fffff2 	b	3c34 <vprintf+0x2c8>
    3c70:	11002282 	add	w2, w20, #0x8
    3c74:	7100005f 	cmp	w2, #0x0
    3c78:	5400008d 	b.le	3c88 <vprintf+0x31c>
    3c7c:	91003e61 	add	x1, x19, #0xf
    3c80:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3c84:	17ffffeb 	b	3c30 <vprintf+0x2c4>
    3c88:	aa1303e1 	mov	x1, x19
    3c8c:	8b34c2f3 	add	x19, x23, w20, sxtw
    3c90:	17ffffe8 	b	3c30 <vprintf+0x2c4>
    3c94:	11002282 	add	w2, w20, #0x8
    3c98:	7100005f 	cmp	w2, #0x0
    3c9c:	5400008d 	b.le	3cac <vprintf+0x340>
    3ca0:	91002e61 	add	x1, x19, #0xb
    3ca4:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3ca8:	17fffff0 	b	3c68 <vprintf+0x2fc>
    3cac:	aa1303e1 	mov	x1, x19
    3cb0:	8b34c2f3 	add	x19, x23, w20, sxtw
    3cb4:	17ffffed 	b	3c68 <vprintf+0x2fc>
    3cb8:	7100043f 	cmp	w1, #0x1
    3cbc:	5400012d 	b.le	3ce0 <vprintf+0x374>
    3cc0:	37f801f4 	tbnz	w20, #31, 3cfc <vprintf+0x390>
    3cc4:	91003e61 	add	x1, x19, #0xf
    3cc8:	2a1403e2 	mov	w2, w20
    3ccc:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3cd0:	f9400260 	ldr	x0, [x19]
    3cd4:	2a0203f4 	mov	w20, w2
    3cd8:	aa0103f3 	mov	x19, x1
    3cdc:	17ffff78 	b	3abc <vprintf+0x150>
    3ce0:	54ffff00 	b.eq	3cc0 <vprintf+0x354>  // b.none
    3ce4:	37f801f4 	tbnz	w20, #31, 3d20 <vprintf+0x3b4>
    3ce8:	91002e61 	add	x1, x19, #0xb
    3cec:	2a1403e2 	mov	w2, w20
    3cf0:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3cf4:	b9400260 	ldr	w0, [x19]
    3cf8:	17fffff7 	b	3cd4 <vprintf+0x368>
    3cfc:	11002282 	add	w2, w20, #0x8
    3d00:	7100005f 	cmp	w2, #0x0
    3d04:	5400008d 	b.le	3d14 <vprintf+0x3a8>
    3d08:	91003e61 	add	x1, x19, #0xf
    3d0c:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3d10:	17fffff0 	b	3cd0 <vprintf+0x364>
    3d14:	aa1303e1 	mov	x1, x19
    3d18:	8b34c2f3 	add	x19, x23, w20, sxtw
    3d1c:	17ffffed 	b	3cd0 <vprintf+0x364>
    3d20:	11002282 	add	w2, w20, #0x8
    3d24:	7100005f 	cmp	w2, #0x0
    3d28:	5400008d 	b.le	3d38 <vprintf+0x3cc>
    3d2c:	91002e61 	add	x1, x19, #0xb
    3d30:	927df021 	and	x1, x1, #0xfffffffffffffff8
    3d34:	17fffff0 	b	3cf4 <vprintf+0x388>
    3d38:	aa1303e1 	mov	x1, x19
    3d3c:	8b34c2f3 	add	x19, x23, w20, sxtw
    3d40:	17ffffed 	b	3cf4 <vprintf+0x388>
    3d44:	910006d6 	add	x22, x22, #0x1
    3d48:	52800018 	mov	w24, #0x0                   	// #0
    3d4c:	394002c0 	ldrb	w0, [x22]
    3d50:	5100c000 	sub	w0, w0, #0x30
    3d54:	12001c02 	and	w2, w0, #0xff
    3d58:	7100245f 	cmp	w2, #0x9
    3d5c:	54ffe348 	b.hi	39c4 <vprintf+0x58>  // b.pmore
    3d60:	52800142 	mov	w2, #0xa                   	// #10
    3d64:	910006d6 	add	x22, x22, #0x1
    3d68:	1b020318 	madd	w24, w24, w2, w0
    3d6c:	17fffff8 	b	3d4c <vprintf+0x3e0>
    3d70:	94000018 	bl	3dd0 <putchar>
    3d74:	110006b5 	add	w21, w21, #0x1
    3d78:	17ffff0b 	b	39a4 <vprintf+0x38>

0000000000003d7c <printf>:
    3d7c:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    3d80:	910003fd 	mov	x29, sp
    3d84:	a9058be1 	stp	x1, x2, [sp, #88]
    3d88:	910243e1 	add	x1, sp, #0x90
    3d8c:	a90307e1 	stp	x1, x1, [sp, #48]
    3d90:	910143e1 	add	x1, sp, #0x50
    3d94:	f90023e1 	str	x1, [sp, #64]
    3d98:	128006e1 	mov	w1, #0xffffffc8            	// #-56
    3d9c:	b9004be1 	str	w1, [sp, #72]
    3da0:	910043e1 	add	x1, sp, #0x10
    3da4:	b9004fff 	str	wzr, [sp, #76]
    3da8:	a90693e3 	stp	x3, x4, [sp, #104]
    3dac:	a9430fe2 	ldp	x2, x3, [sp, #48]
    3db0:	a9010fe2 	stp	x2, x3, [sp, #16]
    3db4:	a9440fe2 	ldp	x2, x3, [sp, #64]
    3db8:	a9020fe2 	stp	x2, x3, [sp, #32]
    3dbc:	a9079be5 	stp	x5, x6, [sp, #120]
    3dc0:	f90047e7 	str	x7, [sp, #136]
    3dc4:	97fffeea 	bl	396c <vprintf>
    3dc8:	a8c97bfd 	ldp	x29, x30, [sp], #144
    3dcc:	d65f03c0 	ret

0000000000003dd0 <putchar>:
    3dd0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    3dd4:	910003fd 	mov	x29, sp
    3dd8:	f9000bf3 	str	x19, [sp, #16]
    3ddc:	2a0003f3 	mov	w19, w0
    3de0:	12001c00 	and	w0, w0, #0xff
    3de4:	97fff7e8 	bl	1d84 <console_putc>
    3de8:	7100001f 	cmp	w0, #0x0
    3dec:	5a9fa260 	csinv	w0, w19, wzr, ge  // ge = tcont
    3df0:	f9400bf3 	ldr	x19, [sp, #16]
    3df4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    3df8:	d65f03c0 	ret
	...

0000000000004000 <SynchronousExceptionSP0>:
    4000:	d2800000 	mov	x0, #0x0                   	// #0
    4004:	97fffd6c 	bl	35b4 <plat_report_exception>
    4008:	97fffd6d 	bl	35bc <plat_panic_handler>
    400c:	d503201f 	nop
	...

0000000000004080 <IrqSP0>:
    4080:	d2800020 	mov	x0, #0x1                   	// #1
    4084:	97fffd4c 	bl	35b4 <plat_report_exception>
    4088:	97fffd4d 	bl	35bc <plat_panic_handler>
    408c:	d503201f 	nop
	...

0000000000004100 <FiqSP0>:
    4100:	d2800040 	mov	x0, #0x2                   	// #2
    4104:	97fffd2c 	bl	35b4 <plat_report_exception>
    4108:	97fffd2d 	bl	35bc <plat_panic_handler>
    410c:	d503201f 	nop
	...

0000000000004180 <SErrorSP0>:
    4180:	d2800060 	mov	x0, #0x3                   	// #3
    4184:	97fffd0c 	bl	35b4 <plat_report_exception>
    4188:	97fffd0d 	bl	35bc <plat_panic_handler>
    418c:	d503201f 	nop
	...

0000000000004200 <SynchronousExceptionSPx>:
    4200:	d2800080 	mov	x0, #0x4                   	// #4
    4204:	97fffcec 	bl	35b4 <plat_report_exception>
    4208:	97fffced 	bl	35bc <plat_panic_handler>
    420c:	d503201f 	nop
	...

0000000000004280 <IrqSPx>:
    4280:	d28000a0 	mov	x0, #0x5                   	// #5
    4284:	97fffccc 	bl	35b4 <plat_report_exception>
    4288:	97fffccd 	bl	35bc <plat_panic_handler>
    428c:	d503201f 	nop
	...

0000000000004300 <FiqSPx>:
    4300:	d28000c0 	mov	x0, #0x6                   	// #6
    4304:	97fffcac 	bl	35b4 <plat_report_exception>
    4308:	97fffcad 	bl	35bc <plat_panic_handler>
    430c:	d503201f 	nop
	...

0000000000004380 <SErrorSPx>:
    4380:	d28000e0 	mov	x0, #0x7                   	// #7
    4384:	97fffc8c 	bl	35b4 <plat_report_exception>
    4388:	97fffc8d 	bl	35bc <plat_panic_handler>
    438c:	d503201f 	nop
	...

0000000000004400 <SynchronousExceptionA64>:
    4400:	d50344ff 	msr	daifclr, #0x4
    4404:	f9007bfe 	str	x30, [sp, #240]
    4408:	d53e521e 	mrs	x30, esr_el3
    440c:	d35a7fde 	ubfx	x30, x30, #26, #6
    4410:	f1005fdf 	cmp	x30, #0x17
    4414:	54ff6021 	b.ne	3018 <unexpected_sync_exception>  // b.any
    4418:	17fffae4 	b	2fa8 <smc_handler64>
	...

0000000000004480 <IrqA64>:
    4480:	d2800120 	mov	x0, #0x9                   	// #9
    4484:	97fffc4c 	bl	35b4 <plat_report_exception>
    4488:	97fffc4d 	bl	35bc <plat_panic_handler>
    448c:	d503201f 	nop
	...

0000000000004500 <FiqA64>:
    4500:	d2800140 	mov	x0, #0xa                   	// #10
    4504:	97fffc2c 	bl	35b4 <plat_report_exception>
    4508:	97fffc2d 	bl	35bc <plat_panic_handler>
    450c:	d503201f 	nop
	...

0000000000004580 <SErrorA64>:
    4580:	d2800160 	mov	x0, #0xb                   	// #11
    4584:	97fffc0c 	bl	35b4 <plat_report_exception>
    4588:	97fffc0d 	bl	35bc <plat_panic_handler>
    458c:	d503201f 	nop
	...

0000000000004600 <SynchronousExceptionA32>:
    4600:	d2800180 	mov	x0, #0xc                   	// #12
    4604:	97fffbec 	bl	35b4 <plat_report_exception>
    4608:	97fffbed 	bl	35bc <plat_panic_handler>
    460c:	d503201f 	nop
	...

0000000000004680 <IrqA32>:
    4680:	d28001a0 	mov	x0, #0xd                   	// #13
    4684:	97fffbcc 	bl	35b4 <plat_report_exception>
    4688:	97fffbcd 	bl	35bc <plat_panic_handler>
    468c:	d503201f 	nop
	...

0000000000004700 <FiqA32>:
    4700:	d28001c0 	mov	x0, #0xe                   	// #14
    4704:	97fffbac 	bl	35b4 <plat_report_exception>
    4708:	97fffbad 	bl	35bc <plat_panic_handler>
    470c:	d503201f 	nop
	...

0000000000004780 <SErrorA32>:
    4780:	d28001e0 	mov	x0, #0xf                   	// #15
    4784:	97fffb8c 	bl	35b4 <plat_report_exception>
    4788:	97fffb8d 	bl	35bc <plat_panic_handler>
    478c:	d503201f 	nop
	...
